
Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001f00  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000017e  00800060  00001f00  00001f94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  008001de  008001de  00002112  2**0
                  ALLOC
  3 .stab         0000207c  00000000  00000000  00002114  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002714  00000000  00000000  00004190  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000068a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000197  00000000  00000000  000069e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001a88  00000000  00000000  00006b7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eb7  00000000  00000000  00008603  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000df7  00000000  00000000  000094ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000a2b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002bf  00000000  00000000  0000a414  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007f2  00000000  00000000  0000a6d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <__vector_2>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 bd 06 	jmp	0xd7a	; 0xd7a <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e0       	ldi	r30, 0x00	; 0
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 3d       	cpi	r26, 0xDE	; 222
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae ed       	ldi	r26, 0xDE	; 222
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 3e       	cpi	r26, 0xEF	; 239
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <main>
      8a:	0c 94 7e 0f 	jmp	0x1efc	; 0x1efc <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 cb 02 	call	0x596	; 0x596 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 47 0f 	jmp	0x1e8e	; 0x1e8e <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 63 0f 	jmp	0x1ec6	; 0x1ec6 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 53 0f 	jmp	0x1ea6	; 0x1ea6 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 17 04 	call	0x82e	; 0x82e <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 6f 0f 	jmp	0x1ede	; 0x1ede <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 53 0f 	jmp	0x1ea6	; 0x1ea6 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 17 04 	call	0x82e	; 0x82e <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 6f 0f 	jmp	0x1ede	; 0x1ede <__epilogue_restores__+0x18>

0000043e <__divsf3>:
     43e:	a8 e1       	ldi	r26, 0x18	; 24
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <__prologue_saves__+0x10>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	b9 e0       	ldi	r27, 0x09	; 9
     45c:	eb 2e       	mov	r14, r27
     45e:	f1 2c       	mov	r15, r1
     460:	ec 0e       	add	r14, r28
     462:	fd 1e       	adc	r15, r29
     464:	ce 01       	movw	r24, r28
     466:	01 96       	adiw	r24, 0x01	; 1
     468:	b7 01       	movw	r22, r14
     46a:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     46e:	8e 01       	movw	r16, r28
     470:	0f 5e       	subi	r16, 0xEF	; 239
     472:	1f 4f       	sbci	r17, 0xFF	; 255
     474:	ce 01       	movw	r24, r28
     476:	05 96       	adiw	r24, 0x05	; 5
     478:	b8 01       	movw	r22, r16
     47a:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     47e:	29 85       	ldd	r18, Y+9	; 0x09
     480:	22 30       	cpi	r18, 0x02	; 2
     482:	08 f4       	brcc	.+2      	; 0x486 <__divsf3+0x48>
     484:	7e c0       	rjmp	.+252    	; 0x582 <__divsf3+0x144>
     486:	39 89       	ldd	r19, Y+17	; 0x11
     488:	32 30       	cpi	r19, 0x02	; 2
     48a:	10 f4       	brcc	.+4      	; 0x490 <__divsf3+0x52>
     48c:	b8 01       	movw	r22, r16
     48e:	7c c0       	rjmp	.+248    	; 0x588 <__divsf3+0x14a>
     490:	8a 85       	ldd	r24, Y+10	; 0x0a
     492:	9a 89       	ldd	r25, Y+18	; 0x12
     494:	89 27       	eor	r24, r25
     496:	8a 87       	std	Y+10, r24	; 0x0a
     498:	24 30       	cpi	r18, 0x04	; 4
     49a:	11 f0       	breq	.+4      	; 0x4a0 <__divsf3+0x62>
     49c:	22 30       	cpi	r18, 0x02	; 2
     49e:	31 f4       	brne	.+12     	; 0x4ac <__divsf3+0x6e>
     4a0:	23 17       	cp	r18, r19
     4a2:	09 f0       	breq	.+2      	; 0x4a6 <__divsf3+0x68>
     4a4:	6e c0       	rjmp	.+220    	; 0x582 <__divsf3+0x144>
     4a6:	60 e6       	ldi	r22, 0x60	; 96
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	6e c0       	rjmp	.+220    	; 0x588 <__divsf3+0x14a>
     4ac:	34 30       	cpi	r19, 0x04	; 4
     4ae:	39 f4       	brne	.+14     	; 0x4be <__divsf3+0x80>
     4b0:	1d 86       	std	Y+13, r1	; 0x0d
     4b2:	1e 86       	std	Y+14, r1	; 0x0e
     4b4:	1f 86       	std	Y+15, r1	; 0x0f
     4b6:	18 8a       	std	Y+16, r1	; 0x10
     4b8:	1c 86       	std	Y+12, r1	; 0x0c
     4ba:	1b 86       	std	Y+11, r1	; 0x0b
     4bc:	04 c0       	rjmp	.+8      	; 0x4c6 <__divsf3+0x88>
     4be:	32 30       	cpi	r19, 0x02	; 2
     4c0:	21 f4       	brne	.+8      	; 0x4ca <__divsf3+0x8c>
     4c2:	84 e0       	ldi	r24, 0x04	; 4
     4c4:	89 87       	std	Y+9, r24	; 0x09
     4c6:	b7 01       	movw	r22, r14
     4c8:	5f c0       	rjmp	.+190    	; 0x588 <__divsf3+0x14a>
     4ca:	2b 85       	ldd	r18, Y+11	; 0x0b
     4cc:	3c 85       	ldd	r19, Y+12	; 0x0c
     4ce:	8b 89       	ldd	r24, Y+19	; 0x13
     4d0:	9c 89       	ldd	r25, Y+20	; 0x14
     4d2:	28 1b       	sub	r18, r24
     4d4:	39 0b       	sbc	r19, r25
     4d6:	3c 87       	std	Y+12, r19	; 0x0c
     4d8:	2b 87       	std	Y+11, r18	; 0x0b
     4da:	ed 84       	ldd	r14, Y+13	; 0x0d
     4dc:	fe 84       	ldd	r15, Y+14	; 0x0e
     4de:	0f 85       	ldd	r16, Y+15	; 0x0f
     4e0:	18 89       	ldd	r17, Y+16	; 0x10
     4e2:	ad 88       	ldd	r10, Y+21	; 0x15
     4e4:	be 88       	ldd	r11, Y+22	; 0x16
     4e6:	cf 88       	ldd	r12, Y+23	; 0x17
     4e8:	d8 8c       	ldd	r13, Y+24	; 0x18
     4ea:	ea 14       	cp	r14, r10
     4ec:	fb 04       	cpc	r15, r11
     4ee:	0c 05       	cpc	r16, r12
     4f0:	1d 05       	cpc	r17, r13
     4f2:	40 f4       	brcc	.+16     	; 0x504 <__divsf3+0xc6>
     4f4:	ee 0c       	add	r14, r14
     4f6:	ff 1c       	adc	r15, r15
     4f8:	00 1f       	adc	r16, r16
     4fa:	11 1f       	adc	r17, r17
     4fc:	21 50       	subi	r18, 0x01	; 1
     4fe:	30 40       	sbci	r19, 0x00	; 0
     500:	3c 87       	std	Y+12, r19	; 0x0c
     502:	2b 87       	std	Y+11, r18	; 0x0b
     504:	20 e0       	ldi	r18, 0x00	; 0
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	40 e0       	ldi	r20, 0x00	; 0
     50a:	50 e0       	ldi	r21, 0x00	; 0
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e4       	ldi	r27, 0x40	; 64
     514:	60 e0       	ldi	r22, 0x00	; 0
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	ea 14       	cp	r14, r10
     51a:	fb 04       	cpc	r15, r11
     51c:	0c 05       	cpc	r16, r12
     51e:	1d 05       	cpc	r17, r13
     520:	40 f0       	brcs	.+16     	; 0x532 <__divsf3+0xf4>
     522:	28 2b       	or	r18, r24
     524:	39 2b       	or	r19, r25
     526:	4a 2b       	or	r20, r26
     528:	5b 2b       	or	r21, r27
     52a:	ea 18       	sub	r14, r10
     52c:	fb 08       	sbc	r15, r11
     52e:	0c 09       	sbc	r16, r12
     530:	1d 09       	sbc	r17, r13
     532:	b6 95       	lsr	r27
     534:	a7 95       	ror	r26
     536:	97 95       	ror	r25
     538:	87 95       	ror	r24
     53a:	ee 0c       	add	r14, r14
     53c:	ff 1c       	adc	r15, r15
     53e:	00 1f       	adc	r16, r16
     540:	11 1f       	adc	r17, r17
     542:	6f 5f       	subi	r22, 0xFF	; 255
     544:	7f 4f       	sbci	r23, 0xFF	; 255
     546:	6f 31       	cpi	r22, 0x1F	; 31
     548:	71 05       	cpc	r23, r1
     54a:	31 f7       	brne	.-52     	; 0x518 <__divsf3+0xda>
     54c:	da 01       	movw	r26, r20
     54e:	c9 01       	movw	r24, r18
     550:	8f 77       	andi	r24, 0x7F	; 127
     552:	90 70       	andi	r25, 0x00	; 0
     554:	a0 70       	andi	r26, 0x00	; 0
     556:	b0 70       	andi	r27, 0x00	; 0
     558:	80 34       	cpi	r24, 0x40	; 64
     55a:	91 05       	cpc	r25, r1
     55c:	a1 05       	cpc	r26, r1
     55e:	b1 05       	cpc	r27, r1
     560:	61 f4       	brne	.+24     	; 0x57a <__divsf3+0x13c>
     562:	27 fd       	sbrc	r18, 7
     564:	0a c0       	rjmp	.+20     	; 0x57a <__divsf3+0x13c>
     566:	e1 14       	cp	r14, r1
     568:	f1 04       	cpc	r15, r1
     56a:	01 05       	cpc	r16, r1
     56c:	11 05       	cpc	r17, r1
     56e:	29 f0       	breq	.+10     	; 0x57a <__divsf3+0x13c>
     570:	20 5c       	subi	r18, 0xC0	; 192
     572:	3f 4f       	sbci	r19, 0xFF	; 255
     574:	4f 4f       	sbci	r20, 0xFF	; 255
     576:	5f 4f       	sbci	r21, 0xFF	; 255
     578:	20 78       	andi	r18, 0x80	; 128
     57a:	2d 87       	std	Y+13, r18	; 0x0d
     57c:	3e 87       	std	Y+14, r19	; 0x0e
     57e:	4f 87       	std	Y+15, r20	; 0x0f
     580:	58 8b       	std	Y+16, r21	; 0x10
     582:	be 01       	movw	r22, r28
     584:	67 5f       	subi	r22, 0xF7	; 247
     586:	7f 4f       	sbci	r23, 0xFF	; 255
     588:	cb 01       	movw	r24, r22
     58a:	0e 94 17 04 	call	0x82e	; 0x82e <__pack_f>
     58e:	68 96       	adiw	r28, 0x18	; 24
     590:	ea e0       	ldi	r30, 0x0A	; 10
     592:	0c 94 6b 0f 	jmp	0x1ed6	; 0x1ed6 <__epilogue_restores__+0x10>

00000596 <__gesf2>:
     596:	a8 e1       	ldi	r26, 0x18	; 24
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	e1 ed       	ldi	r30, 0xD1	; 209
     59c:	f2 e0       	ldi	r31, 0x02	; 2
     59e:	0c 94 53 0f 	jmp	0x1ea6	; 0x1ea6 <__prologue_saves__+0x18>
     5a2:	69 83       	std	Y+1, r22	; 0x01
     5a4:	7a 83       	std	Y+2, r23	; 0x02
     5a6:	8b 83       	std	Y+3, r24	; 0x03
     5a8:	9c 83       	std	Y+4, r25	; 0x04
     5aa:	2d 83       	std	Y+5, r18	; 0x05
     5ac:	3e 83       	std	Y+6, r19	; 0x06
     5ae:	4f 83       	std	Y+7, r20	; 0x07
     5b0:	58 87       	std	Y+8, r21	; 0x08
     5b2:	89 e0       	ldi	r24, 0x09	; 9
     5b4:	e8 2e       	mov	r14, r24
     5b6:	f1 2c       	mov	r15, r1
     5b8:	ec 0e       	add	r14, r28
     5ba:	fd 1e       	adc	r15, r29
     5bc:	ce 01       	movw	r24, r28
     5be:	01 96       	adiw	r24, 0x01	; 1
     5c0:	b7 01       	movw	r22, r14
     5c2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     5c6:	8e 01       	movw	r16, r28
     5c8:	0f 5e       	subi	r16, 0xEF	; 239
     5ca:	1f 4f       	sbci	r17, 0xFF	; 255
     5cc:	ce 01       	movw	r24, r28
     5ce:	05 96       	adiw	r24, 0x05	; 5
     5d0:	b8 01       	movw	r22, r16
     5d2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     5d6:	89 85       	ldd	r24, Y+9	; 0x09
     5d8:	82 30       	cpi	r24, 0x02	; 2
     5da:	40 f0       	brcs	.+16     	; 0x5ec <__gesf2+0x56>
     5dc:	89 89       	ldd	r24, Y+17	; 0x11
     5de:	82 30       	cpi	r24, 0x02	; 2
     5e0:	28 f0       	brcs	.+10     	; 0x5ec <__gesf2+0x56>
     5e2:	c7 01       	movw	r24, r14
     5e4:	b8 01       	movw	r22, r16
     5e6:	0e 94 64 05 	call	0xac8	; 0xac8 <__fpcmp_parts_f>
     5ea:	01 c0       	rjmp	.+2      	; 0x5ee <__gesf2+0x58>
     5ec:	8f ef       	ldi	r24, 0xFF	; 255
     5ee:	68 96       	adiw	r28, 0x18	; 24
     5f0:	e6 e0       	ldi	r30, 0x06	; 6
     5f2:	0c 94 6f 0f 	jmp	0x1ede	; 0x1ede <__epilogue_restores__+0x18>

000005f6 <__fixsfsi>:
     5f6:	ac e0       	ldi	r26, 0x0C	; 12
     5f8:	b0 e0       	ldi	r27, 0x00	; 0
     5fa:	e1 e0       	ldi	r30, 0x01	; 1
     5fc:	f3 e0       	ldi	r31, 0x03	; 3
     5fe:	0c 94 57 0f 	jmp	0x1eae	; 0x1eae <__prologue_saves__+0x20>
     602:	69 83       	std	Y+1, r22	; 0x01
     604:	7a 83       	std	Y+2, r23	; 0x02
     606:	8b 83       	std	Y+3, r24	; 0x03
     608:	9c 83       	std	Y+4, r25	; 0x04
     60a:	ce 01       	movw	r24, r28
     60c:	01 96       	adiw	r24, 0x01	; 1
     60e:	be 01       	movw	r22, r28
     610:	6b 5f       	subi	r22, 0xFB	; 251
     612:	7f 4f       	sbci	r23, 0xFF	; 255
     614:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     618:	8d 81       	ldd	r24, Y+5	; 0x05
     61a:	82 30       	cpi	r24, 0x02	; 2
     61c:	61 f1       	breq	.+88     	; 0x676 <__fixsfsi+0x80>
     61e:	82 30       	cpi	r24, 0x02	; 2
     620:	50 f1       	brcs	.+84     	; 0x676 <__fixsfsi+0x80>
     622:	84 30       	cpi	r24, 0x04	; 4
     624:	21 f4       	brne	.+8      	; 0x62e <__fixsfsi+0x38>
     626:	8e 81       	ldd	r24, Y+6	; 0x06
     628:	88 23       	and	r24, r24
     62a:	51 f1       	breq	.+84     	; 0x680 <__fixsfsi+0x8a>
     62c:	2e c0       	rjmp	.+92     	; 0x68a <__fixsfsi+0x94>
     62e:	2f 81       	ldd	r18, Y+7	; 0x07
     630:	38 85       	ldd	r19, Y+8	; 0x08
     632:	37 fd       	sbrc	r19, 7
     634:	20 c0       	rjmp	.+64     	; 0x676 <__fixsfsi+0x80>
     636:	6e 81       	ldd	r22, Y+6	; 0x06
     638:	2f 31       	cpi	r18, 0x1F	; 31
     63a:	31 05       	cpc	r19, r1
     63c:	1c f0       	brlt	.+6      	; 0x644 <__fixsfsi+0x4e>
     63e:	66 23       	and	r22, r22
     640:	f9 f0       	breq	.+62     	; 0x680 <__fixsfsi+0x8a>
     642:	23 c0       	rjmp	.+70     	; 0x68a <__fixsfsi+0x94>
     644:	8e e1       	ldi	r24, 0x1E	; 30
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	82 1b       	sub	r24, r18
     64a:	93 0b       	sbc	r25, r19
     64c:	29 85       	ldd	r18, Y+9	; 0x09
     64e:	3a 85       	ldd	r19, Y+10	; 0x0a
     650:	4b 85       	ldd	r20, Y+11	; 0x0b
     652:	5c 85       	ldd	r21, Y+12	; 0x0c
     654:	04 c0       	rjmp	.+8      	; 0x65e <__fixsfsi+0x68>
     656:	56 95       	lsr	r21
     658:	47 95       	ror	r20
     65a:	37 95       	ror	r19
     65c:	27 95       	ror	r18
     65e:	8a 95       	dec	r24
     660:	d2 f7       	brpl	.-12     	; 0x656 <__fixsfsi+0x60>
     662:	66 23       	and	r22, r22
     664:	b1 f0       	breq	.+44     	; 0x692 <__fixsfsi+0x9c>
     666:	50 95       	com	r21
     668:	40 95       	com	r20
     66a:	30 95       	com	r19
     66c:	21 95       	neg	r18
     66e:	3f 4f       	sbci	r19, 0xFF	; 255
     670:	4f 4f       	sbci	r20, 0xFF	; 255
     672:	5f 4f       	sbci	r21, 0xFF	; 255
     674:	0e c0       	rjmp	.+28     	; 0x692 <__fixsfsi+0x9c>
     676:	20 e0       	ldi	r18, 0x00	; 0
     678:	30 e0       	ldi	r19, 0x00	; 0
     67a:	40 e0       	ldi	r20, 0x00	; 0
     67c:	50 e0       	ldi	r21, 0x00	; 0
     67e:	09 c0       	rjmp	.+18     	; 0x692 <__fixsfsi+0x9c>
     680:	2f ef       	ldi	r18, 0xFF	; 255
     682:	3f ef       	ldi	r19, 0xFF	; 255
     684:	4f ef       	ldi	r20, 0xFF	; 255
     686:	5f e7       	ldi	r21, 0x7F	; 127
     688:	04 c0       	rjmp	.+8      	; 0x692 <__fixsfsi+0x9c>
     68a:	20 e0       	ldi	r18, 0x00	; 0
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	50 e8       	ldi	r21, 0x80	; 128
     692:	b9 01       	movw	r22, r18
     694:	ca 01       	movw	r24, r20
     696:	2c 96       	adiw	r28, 0x0c	; 12
     698:	e2 e0       	ldi	r30, 0x02	; 2
     69a:	0c 94 73 0f 	jmp	0x1ee6	; 0x1ee6 <__epilogue_restores__+0x20>

0000069e <__floatunsisf>:
     69e:	a8 e0       	ldi	r26, 0x08	; 8
     6a0:	b0 e0       	ldi	r27, 0x00	; 0
     6a2:	e5 e5       	ldi	r30, 0x55	; 85
     6a4:	f3 e0       	ldi	r31, 0x03	; 3
     6a6:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <__prologue_saves__+0x10>
     6aa:	7b 01       	movw	r14, r22
     6ac:	8c 01       	movw	r16, r24
     6ae:	61 15       	cp	r22, r1
     6b0:	71 05       	cpc	r23, r1
     6b2:	81 05       	cpc	r24, r1
     6b4:	91 05       	cpc	r25, r1
     6b6:	19 f4       	brne	.+6      	; 0x6be <__floatunsisf+0x20>
     6b8:	82 e0       	ldi	r24, 0x02	; 2
     6ba:	89 83       	std	Y+1, r24	; 0x01
     6bc:	60 c0       	rjmp	.+192    	; 0x77e <__floatunsisf+0xe0>
     6be:	83 e0       	ldi	r24, 0x03	; 3
     6c0:	89 83       	std	Y+1, r24	; 0x01
     6c2:	8e e1       	ldi	r24, 0x1E	; 30
     6c4:	c8 2e       	mov	r12, r24
     6c6:	d1 2c       	mov	r13, r1
     6c8:	dc 82       	std	Y+4, r13	; 0x04
     6ca:	cb 82       	std	Y+3, r12	; 0x03
     6cc:	ed 82       	std	Y+5, r14	; 0x05
     6ce:	fe 82       	std	Y+6, r15	; 0x06
     6d0:	0f 83       	std	Y+7, r16	; 0x07
     6d2:	18 87       	std	Y+8, r17	; 0x08
     6d4:	c8 01       	movw	r24, r16
     6d6:	b7 01       	movw	r22, r14
     6d8:	0e 94 c8 03 	call	0x790	; 0x790 <__clzsi2>
     6dc:	fc 01       	movw	r30, r24
     6de:	31 97       	sbiw	r30, 0x01	; 1
     6e0:	f7 ff       	sbrs	r31, 7
     6e2:	3b c0       	rjmp	.+118    	; 0x75a <__floatunsisf+0xbc>
     6e4:	22 27       	eor	r18, r18
     6e6:	33 27       	eor	r19, r19
     6e8:	2e 1b       	sub	r18, r30
     6ea:	3f 0b       	sbc	r19, r31
     6ec:	57 01       	movw	r10, r14
     6ee:	68 01       	movw	r12, r16
     6f0:	02 2e       	mov	r0, r18
     6f2:	04 c0       	rjmp	.+8      	; 0x6fc <__floatunsisf+0x5e>
     6f4:	d6 94       	lsr	r13
     6f6:	c7 94       	ror	r12
     6f8:	b7 94       	ror	r11
     6fa:	a7 94       	ror	r10
     6fc:	0a 94       	dec	r0
     6fe:	d2 f7       	brpl	.-12     	; 0x6f4 <__floatunsisf+0x56>
     700:	40 e0       	ldi	r20, 0x00	; 0
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	60 e0       	ldi	r22, 0x00	; 0
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	a0 e0       	ldi	r26, 0x00	; 0
     70e:	b0 e0       	ldi	r27, 0x00	; 0
     710:	04 c0       	rjmp	.+8      	; 0x71a <__floatunsisf+0x7c>
     712:	88 0f       	add	r24, r24
     714:	99 1f       	adc	r25, r25
     716:	aa 1f       	adc	r26, r26
     718:	bb 1f       	adc	r27, r27
     71a:	2a 95       	dec	r18
     71c:	d2 f7       	brpl	.-12     	; 0x712 <__floatunsisf+0x74>
     71e:	01 97       	sbiw	r24, 0x01	; 1
     720:	a1 09       	sbc	r26, r1
     722:	b1 09       	sbc	r27, r1
     724:	8e 21       	and	r24, r14
     726:	9f 21       	and	r25, r15
     728:	a0 23       	and	r26, r16
     72a:	b1 23       	and	r27, r17
     72c:	00 97       	sbiw	r24, 0x00	; 0
     72e:	a1 05       	cpc	r26, r1
     730:	b1 05       	cpc	r27, r1
     732:	21 f0       	breq	.+8      	; 0x73c <__floatunsisf+0x9e>
     734:	41 e0       	ldi	r20, 0x01	; 1
     736:	50 e0       	ldi	r21, 0x00	; 0
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	4a 29       	or	r20, r10
     73e:	5b 29       	or	r21, r11
     740:	6c 29       	or	r22, r12
     742:	7d 29       	or	r23, r13
     744:	4d 83       	std	Y+5, r20	; 0x05
     746:	5e 83       	std	Y+6, r21	; 0x06
     748:	6f 83       	std	Y+7, r22	; 0x07
     74a:	78 87       	std	Y+8, r23	; 0x08
     74c:	8e e1       	ldi	r24, 0x1E	; 30
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	8e 1b       	sub	r24, r30
     752:	9f 0b       	sbc	r25, r31
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	8b 83       	std	Y+3, r24	; 0x03
     758:	12 c0       	rjmp	.+36     	; 0x77e <__floatunsisf+0xe0>
     75a:	30 97       	sbiw	r30, 0x00	; 0
     75c:	81 f0       	breq	.+32     	; 0x77e <__floatunsisf+0xe0>
     75e:	0e 2e       	mov	r0, r30
     760:	04 c0       	rjmp	.+8      	; 0x76a <__floatunsisf+0xcc>
     762:	ee 0c       	add	r14, r14
     764:	ff 1c       	adc	r15, r15
     766:	00 1f       	adc	r16, r16
     768:	11 1f       	adc	r17, r17
     76a:	0a 94       	dec	r0
     76c:	d2 f7       	brpl	.-12     	; 0x762 <__floatunsisf+0xc4>
     76e:	ed 82       	std	Y+5, r14	; 0x05
     770:	fe 82       	std	Y+6, r15	; 0x06
     772:	0f 83       	std	Y+7, r16	; 0x07
     774:	18 87       	std	Y+8, r17	; 0x08
     776:	ce 1a       	sub	r12, r30
     778:	df 0a       	sbc	r13, r31
     77a:	dc 82       	std	Y+4, r13	; 0x04
     77c:	cb 82       	std	Y+3, r12	; 0x03
     77e:	1a 82       	std	Y+2, r1	; 0x02
     780:	ce 01       	movw	r24, r28
     782:	01 96       	adiw	r24, 0x01	; 1
     784:	0e 94 17 04 	call	0x82e	; 0x82e <__pack_f>
     788:	28 96       	adiw	r28, 0x08	; 8
     78a:	ea e0       	ldi	r30, 0x0A	; 10
     78c:	0c 94 6b 0f 	jmp	0x1ed6	; 0x1ed6 <__epilogue_restores__+0x10>

00000790 <__clzsi2>:
     790:	ef 92       	push	r14
     792:	ff 92       	push	r15
     794:	0f 93       	push	r16
     796:	1f 93       	push	r17
     798:	7b 01       	movw	r14, r22
     79a:	8c 01       	movw	r16, r24
     79c:	80 e0       	ldi	r24, 0x00	; 0
     79e:	e8 16       	cp	r14, r24
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	f8 06       	cpc	r15, r24
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	08 07       	cpc	r16, r24
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	18 07       	cpc	r17, r24
     7ac:	88 f4       	brcc	.+34     	; 0x7d0 <__clzsi2+0x40>
     7ae:	8f ef       	ldi	r24, 0xFF	; 255
     7b0:	e8 16       	cp	r14, r24
     7b2:	f1 04       	cpc	r15, r1
     7b4:	01 05       	cpc	r16, r1
     7b6:	11 05       	cpc	r17, r1
     7b8:	31 f0       	breq	.+12     	; 0x7c6 <__clzsi2+0x36>
     7ba:	28 f0       	brcs	.+10     	; 0x7c6 <__clzsi2+0x36>
     7bc:	88 e0       	ldi	r24, 0x08	; 8
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	a0 e0       	ldi	r26, 0x00	; 0
     7c2:	b0 e0       	ldi	r27, 0x00	; 0
     7c4:	17 c0       	rjmp	.+46     	; 0x7f4 <__clzsi2+0x64>
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	a0 e0       	ldi	r26, 0x00	; 0
     7cc:	b0 e0       	ldi	r27, 0x00	; 0
     7ce:	12 c0       	rjmp	.+36     	; 0x7f4 <__clzsi2+0x64>
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	e8 16       	cp	r14, r24
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	f8 06       	cpc	r15, r24
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	08 07       	cpc	r16, r24
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	18 07       	cpc	r17, r24
     7e0:	28 f0       	brcs	.+10     	; 0x7ec <__clzsi2+0x5c>
     7e2:	88 e1       	ldi	r24, 0x18	; 24
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	a0 e0       	ldi	r26, 0x00	; 0
     7e8:	b0 e0       	ldi	r27, 0x00	; 0
     7ea:	04 c0       	rjmp	.+8      	; 0x7f4 <__clzsi2+0x64>
     7ec:	80 e1       	ldi	r24, 0x10	; 16
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	a0 e0       	ldi	r26, 0x00	; 0
     7f2:	b0 e0       	ldi	r27, 0x00	; 0
     7f4:	20 e2       	ldi	r18, 0x20	; 32
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	40 e0       	ldi	r20, 0x00	; 0
     7fa:	50 e0       	ldi	r21, 0x00	; 0
     7fc:	28 1b       	sub	r18, r24
     7fe:	39 0b       	sbc	r19, r25
     800:	4a 0b       	sbc	r20, r26
     802:	5b 0b       	sbc	r21, r27
     804:	04 c0       	rjmp	.+8      	; 0x80e <__clzsi2+0x7e>
     806:	16 95       	lsr	r17
     808:	07 95       	ror	r16
     80a:	f7 94       	ror	r15
     80c:	e7 94       	ror	r14
     80e:	8a 95       	dec	r24
     810:	d2 f7       	brpl	.-12     	; 0x806 <__clzsi2+0x76>
     812:	f7 01       	movw	r30, r14
     814:	e8 59       	subi	r30, 0x98	; 152
     816:	ff 4f       	sbci	r31, 0xFF	; 255
     818:	80 81       	ld	r24, Z
     81a:	28 1b       	sub	r18, r24
     81c:	31 09       	sbc	r19, r1
     81e:	41 09       	sbc	r20, r1
     820:	51 09       	sbc	r21, r1
     822:	c9 01       	movw	r24, r18
     824:	1f 91       	pop	r17
     826:	0f 91       	pop	r16
     828:	ff 90       	pop	r15
     82a:	ef 90       	pop	r14
     82c:	08 95       	ret

0000082e <__pack_f>:
     82e:	df 92       	push	r13
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	0f 93       	push	r16
     836:	1f 93       	push	r17
     838:	fc 01       	movw	r30, r24
     83a:	e4 80       	ldd	r14, Z+4	; 0x04
     83c:	f5 80       	ldd	r15, Z+5	; 0x05
     83e:	06 81       	ldd	r16, Z+6	; 0x06
     840:	17 81       	ldd	r17, Z+7	; 0x07
     842:	d1 80       	ldd	r13, Z+1	; 0x01
     844:	80 81       	ld	r24, Z
     846:	82 30       	cpi	r24, 0x02	; 2
     848:	48 f4       	brcc	.+18     	; 0x85c <__pack_f+0x2e>
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	a0 e1       	ldi	r26, 0x10	; 16
     850:	b0 e0       	ldi	r27, 0x00	; 0
     852:	e8 2a       	or	r14, r24
     854:	f9 2a       	or	r15, r25
     856:	0a 2b       	or	r16, r26
     858:	1b 2b       	or	r17, r27
     85a:	a5 c0       	rjmp	.+330    	; 0x9a6 <__stack+0x147>
     85c:	84 30       	cpi	r24, 0x04	; 4
     85e:	09 f4       	brne	.+2      	; 0x862 <__stack+0x3>
     860:	9f c0       	rjmp	.+318    	; 0x9a0 <__stack+0x141>
     862:	82 30       	cpi	r24, 0x02	; 2
     864:	21 f4       	brne	.+8      	; 0x86e <__stack+0xf>
     866:	ee 24       	eor	r14, r14
     868:	ff 24       	eor	r15, r15
     86a:	87 01       	movw	r16, r14
     86c:	05 c0       	rjmp	.+10     	; 0x878 <__stack+0x19>
     86e:	e1 14       	cp	r14, r1
     870:	f1 04       	cpc	r15, r1
     872:	01 05       	cpc	r16, r1
     874:	11 05       	cpc	r17, r1
     876:	19 f4       	brne	.+6      	; 0x87e <__stack+0x1f>
     878:	e0 e0       	ldi	r30, 0x00	; 0
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	96 c0       	rjmp	.+300    	; 0x9aa <__stack+0x14b>
     87e:	62 81       	ldd	r22, Z+2	; 0x02
     880:	73 81       	ldd	r23, Z+3	; 0x03
     882:	9f ef       	ldi	r25, 0xFF	; 255
     884:	62 38       	cpi	r22, 0x82	; 130
     886:	79 07       	cpc	r23, r25
     888:	0c f0       	brlt	.+2      	; 0x88c <__stack+0x2d>
     88a:	5b c0       	rjmp	.+182    	; 0x942 <__stack+0xe3>
     88c:	22 e8       	ldi	r18, 0x82	; 130
     88e:	3f ef       	ldi	r19, 0xFF	; 255
     890:	26 1b       	sub	r18, r22
     892:	37 0b       	sbc	r19, r23
     894:	2a 31       	cpi	r18, 0x1A	; 26
     896:	31 05       	cpc	r19, r1
     898:	2c f0       	brlt	.+10     	; 0x8a4 <__stack+0x45>
     89a:	20 e0       	ldi	r18, 0x00	; 0
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	40 e0       	ldi	r20, 0x00	; 0
     8a0:	50 e0       	ldi	r21, 0x00	; 0
     8a2:	2a c0       	rjmp	.+84     	; 0x8f8 <__stack+0x99>
     8a4:	b8 01       	movw	r22, r16
     8a6:	a7 01       	movw	r20, r14
     8a8:	02 2e       	mov	r0, r18
     8aa:	04 c0       	rjmp	.+8      	; 0x8b4 <__stack+0x55>
     8ac:	76 95       	lsr	r23
     8ae:	67 95       	ror	r22
     8b0:	57 95       	ror	r21
     8b2:	47 95       	ror	r20
     8b4:	0a 94       	dec	r0
     8b6:	d2 f7       	brpl	.-12     	; 0x8ac <__stack+0x4d>
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	a0 e0       	ldi	r26, 0x00	; 0
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	04 c0       	rjmp	.+8      	; 0x8ca <__stack+0x6b>
     8c2:	88 0f       	add	r24, r24
     8c4:	99 1f       	adc	r25, r25
     8c6:	aa 1f       	adc	r26, r26
     8c8:	bb 1f       	adc	r27, r27
     8ca:	2a 95       	dec	r18
     8cc:	d2 f7       	brpl	.-12     	; 0x8c2 <__stack+0x63>
     8ce:	01 97       	sbiw	r24, 0x01	; 1
     8d0:	a1 09       	sbc	r26, r1
     8d2:	b1 09       	sbc	r27, r1
     8d4:	8e 21       	and	r24, r14
     8d6:	9f 21       	and	r25, r15
     8d8:	a0 23       	and	r26, r16
     8da:	b1 23       	and	r27, r17
     8dc:	00 97       	sbiw	r24, 0x00	; 0
     8de:	a1 05       	cpc	r26, r1
     8e0:	b1 05       	cpc	r27, r1
     8e2:	21 f0       	breq	.+8      	; 0x8ec <__stack+0x8d>
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	a0 e0       	ldi	r26, 0x00	; 0
     8ea:	b0 e0       	ldi	r27, 0x00	; 0
     8ec:	9a 01       	movw	r18, r20
     8ee:	ab 01       	movw	r20, r22
     8f0:	28 2b       	or	r18, r24
     8f2:	39 2b       	or	r19, r25
     8f4:	4a 2b       	or	r20, r26
     8f6:	5b 2b       	or	r21, r27
     8f8:	da 01       	movw	r26, r20
     8fa:	c9 01       	movw	r24, r18
     8fc:	8f 77       	andi	r24, 0x7F	; 127
     8fe:	90 70       	andi	r25, 0x00	; 0
     900:	a0 70       	andi	r26, 0x00	; 0
     902:	b0 70       	andi	r27, 0x00	; 0
     904:	80 34       	cpi	r24, 0x40	; 64
     906:	91 05       	cpc	r25, r1
     908:	a1 05       	cpc	r26, r1
     90a:	b1 05       	cpc	r27, r1
     90c:	39 f4       	brne	.+14     	; 0x91c <__stack+0xbd>
     90e:	27 ff       	sbrs	r18, 7
     910:	09 c0       	rjmp	.+18     	; 0x924 <__stack+0xc5>
     912:	20 5c       	subi	r18, 0xC0	; 192
     914:	3f 4f       	sbci	r19, 0xFF	; 255
     916:	4f 4f       	sbci	r20, 0xFF	; 255
     918:	5f 4f       	sbci	r21, 0xFF	; 255
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__stack+0xc5>
     91c:	21 5c       	subi	r18, 0xC1	; 193
     91e:	3f 4f       	sbci	r19, 0xFF	; 255
     920:	4f 4f       	sbci	r20, 0xFF	; 255
     922:	5f 4f       	sbci	r21, 0xFF	; 255
     924:	e0 e0       	ldi	r30, 0x00	; 0
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	20 30       	cpi	r18, 0x00	; 0
     92a:	a0 e0       	ldi	r26, 0x00	; 0
     92c:	3a 07       	cpc	r19, r26
     92e:	a0 e0       	ldi	r26, 0x00	; 0
     930:	4a 07       	cpc	r20, r26
     932:	a0 e4       	ldi	r26, 0x40	; 64
     934:	5a 07       	cpc	r21, r26
     936:	10 f0       	brcs	.+4      	; 0x93c <__stack+0xdd>
     938:	e1 e0       	ldi	r30, 0x01	; 1
     93a:	f0 e0       	ldi	r31, 0x00	; 0
     93c:	79 01       	movw	r14, r18
     93e:	8a 01       	movw	r16, r20
     940:	27 c0       	rjmp	.+78     	; 0x990 <__stack+0x131>
     942:	60 38       	cpi	r22, 0x80	; 128
     944:	71 05       	cpc	r23, r1
     946:	64 f5       	brge	.+88     	; 0x9a0 <__stack+0x141>
     948:	fb 01       	movw	r30, r22
     94a:	e1 58       	subi	r30, 0x81	; 129
     94c:	ff 4f       	sbci	r31, 0xFF	; 255
     94e:	d8 01       	movw	r26, r16
     950:	c7 01       	movw	r24, r14
     952:	8f 77       	andi	r24, 0x7F	; 127
     954:	90 70       	andi	r25, 0x00	; 0
     956:	a0 70       	andi	r26, 0x00	; 0
     958:	b0 70       	andi	r27, 0x00	; 0
     95a:	80 34       	cpi	r24, 0x40	; 64
     95c:	91 05       	cpc	r25, r1
     95e:	a1 05       	cpc	r26, r1
     960:	b1 05       	cpc	r27, r1
     962:	39 f4       	brne	.+14     	; 0x972 <__stack+0x113>
     964:	e7 fe       	sbrs	r14, 7
     966:	0d c0       	rjmp	.+26     	; 0x982 <__stack+0x123>
     968:	80 e4       	ldi	r24, 0x40	; 64
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	a0 e0       	ldi	r26, 0x00	; 0
     96e:	b0 e0       	ldi	r27, 0x00	; 0
     970:	04 c0       	rjmp	.+8      	; 0x97a <__stack+0x11b>
     972:	8f e3       	ldi	r24, 0x3F	; 63
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	a0 e0       	ldi	r26, 0x00	; 0
     978:	b0 e0       	ldi	r27, 0x00	; 0
     97a:	e8 0e       	add	r14, r24
     97c:	f9 1e       	adc	r15, r25
     97e:	0a 1f       	adc	r16, r26
     980:	1b 1f       	adc	r17, r27
     982:	17 ff       	sbrs	r17, 7
     984:	05 c0       	rjmp	.+10     	; 0x990 <__stack+0x131>
     986:	16 95       	lsr	r17
     988:	07 95       	ror	r16
     98a:	f7 94       	ror	r15
     98c:	e7 94       	ror	r14
     98e:	31 96       	adiw	r30, 0x01	; 1
     990:	87 e0       	ldi	r24, 0x07	; 7
     992:	16 95       	lsr	r17
     994:	07 95       	ror	r16
     996:	f7 94       	ror	r15
     998:	e7 94       	ror	r14
     99a:	8a 95       	dec	r24
     99c:	d1 f7       	brne	.-12     	; 0x992 <__stack+0x133>
     99e:	05 c0       	rjmp	.+10     	; 0x9aa <__stack+0x14b>
     9a0:	ee 24       	eor	r14, r14
     9a2:	ff 24       	eor	r15, r15
     9a4:	87 01       	movw	r16, r14
     9a6:	ef ef       	ldi	r30, 0xFF	; 255
     9a8:	f0 e0       	ldi	r31, 0x00	; 0
     9aa:	6e 2f       	mov	r22, r30
     9ac:	67 95       	ror	r22
     9ae:	66 27       	eor	r22, r22
     9b0:	67 95       	ror	r22
     9b2:	90 2f       	mov	r25, r16
     9b4:	9f 77       	andi	r25, 0x7F	; 127
     9b6:	d7 94       	ror	r13
     9b8:	dd 24       	eor	r13, r13
     9ba:	d7 94       	ror	r13
     9bc:	8e 2f       	mov	r24, r30
     9be:	86 95       	lsr	r24
     9c0:	49 2f       	mov	r20, r25
     9c2:	46 2b       	or	r20, r22
     9c4:	58 2f       	mov	r21, r24
     9c6:	5d 29       	or	r21, r13
     9c8:	b7 01       	movw	r22, r14
     9ca:	ca 01       	movw	r24, r20
     9cc:	1f 91       	pop	r17
     9ce:	0f 91       	pop	r16
     9d0:	ff 90       	pop	r15
     9d2:	ef 90       	pop	r14
     9d4:	df 90       	pop	r13
     9d6:	08 95       	ret

000009d8 <__unpack_f>:
     9d8:	fc 01       	movw	r30, r24
     9da:	db 01       	movw	r26, r22
     9dc:	40 81       	ld	r20, Z
     9de:	51 81       	ldd	r21, Z+1	; 0x01
     9e0:	22 81       	ldd	r18, Z+2	; 0x02
     9e2:	62 2f       	mov	r22, r18
     9e4:	6f 77       	andi	r22, 0x7F	; 127
     9e6:	70 e0       	ldi	r23, 0x00	; 0
     9e8:	22 1f       	adc	r18, r18
     9ea:	22 27       	eor	r18, r18
     9ec:	22 1f       	adc	r18, r18
     9ee:	93 81       	ldd	r25, Z+3	; 0x03
     9f0:	89 2f       	mov	r24, r25
     9f2:	88 0f       	add	r24, r24
     9f4:	82 2b       	or	r24, r18
     9f6:	28 2f       	mov	r18, r24
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	99 1f       	adc	r25, r25
     9fc:	99 27       	eor	r25, r25
     9fe:	99 1f       	adc	r25, r25
     a00:	11 96       	adiw	r26, 0x01	; 1
     a02:	9c 93       	st	X, r25
     a04:	11 97       	sbiw	r26, 0x01	; 1
     a06:	21 15       	cp	r18, r1
     a08:	31 05       	cpc	r19, r1
     a0a:	a9 f5       	brne	.+106    	; 0xa76 <__unpack_f+0x9e>
     a0c:	41 15       	cp	r20, r1
     a0e:	51 05       	cpc	r21, r1
     a10:	61 05       	cpc	r22, r1
     a12:	71 05       	cpc	r23, r1
     a14:	11 f4       	brne	.+4      	; 0xa1a <__unpack_f+0x42>
     a16:	82 e0       	ldi	r24, 0x02	; 2
     a18:	37 c0       	rjmp	.+110    	; 0xa88 <__unpack_f+0xb0>
     a1a:	82 e8       	ldi	r24, 0x82	; 130
     a1c:	9f ef       	ldi	r25, 0xFF	; 255
     a1e:	13 96       	adiw	r26, 0x03	; 3
     a20:	9c 93       	st	X, r25
     a22:	8e 93       	st	-X, r24
     a24:	12 97       	sbiw	r26, 0x02	; 2
     a26:	9a 01       	movw	r18, r20
     a28:	ab 01       	movw	r20, r22
     a2a:	67 e0       	ldi	r22, 0x07	; 7
     a2c:	22 0f       	add	r18, r18
     a2e:	33 1f       	adc	r19, r19
     a30:	44 1f       	adc	r20, r20
     a32:	55 1f       	adc	r21, r21
     a34:	6a 95       	dec	r22
     a36:	d1 f7       	brne	.-12     	; 0xa2c <__unpack_f+0x54>
     a38:	83 e0       	ldi	r24, 0x03	; 3
     a3a:	8c 93       	st	X, r24
     a3c:	0d c0       	rjmp	.+26     	; 0xa58 <__unpack_f+0x80>
     a3e:	22 0f       	add	r18, r18
     a40:	33 1f       	adc	r19, r19
     a42:	44 1f       	adc	r20, r20
     a44:	55 1f       	adc	r21, r21
     a46:	12 96       	adiw	r26, 0x02	; 2
     a48:	8d 91       	ld	r24, X+
     a4a:	9c 91       	ld	r25, X
     a4c:	13 97       	sbiw	r26, 0x03	; 3
     a4e:	01 97       	sbiw	r24, 0x01	; 1
     a50:	13 96       	adiw	r26, 0x03	; 3
     a52:	9c 93       	st	X, r25
     a54:	8e 93       	st	-X, r24
     a56:	12 97       	sbiw	r26, 0x02	; 2
     a58:	20 30       	cpi	r18, 0x00	; 0
     a5a:	80 e0       	ldi	r24, 0x00	; 0
     a5c:	38 07       	cpc	r19, r24
     a5e:	80 e0       	ldi	r24, 0x00	; 0
     a60:	48 07       	cpc	r20, r24
     a62:	80 e4       	ldi	r24, 0x40	; 64
     a64:	58 07       	cpc	r21, r24
     a66:	58 f3       	brcs	.-42     	; 0xa3e <__unpack_f+0x66>
     a68:	14 96       	adiw	r26, 0x04	; 4
     a6a:	2d 93       	st	X+, r18
     a6c:	3d 93       	st	X+, r19
     a6e:	4d 93       	st	X+, r20
     a70:	5c 93       	st	X, r21
     a72:	17 97       	sbiw	r26, 0x07	; 7
     a74:	08 95       	ret
     a76:	2f 3f       	cpi	r18, 0xFF	; 255
     a78:	31 05       	cpc	r19, r1
     a7a:	79 f4       	brne	.+30     	; 0xa9a <__unpack_f+0xc2>
     a7c:	41 15       	cp	r20, r1
     a7e:	51 05       	cpc	r21, r1
     a80:	61 05       	cpc	r22, r1
     a82:	71 05       	cpc	r23, r1
     a84:	19 f4       	brne	.+6      	; 0xa8c <__unpack_f+0xb4>
     a86:	84 e0       	ldi	r24, 0x04	; 4
     a88:	8c 93       	st	X, r24
     a8a:	08 95       	ret
     a8c:	64 ff       	sbrs	r22, 4
     a8e:	03 c0       	rjmp	.+6      	; 0xa96 <__unpack_f+0xbe>
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	8c 93       	st	X, r24
     a94:	12 c0       	rjmp	.+36     	; 0xaba <__unpack_f+0xe2>
     a96:	1c 92       	st	X, r1
     a98:	10 c0       	rjmp	.+32     	; 0xaba <__unpack_f+0xe2>
     a9a:	2f 57       	subi	r18, 0x7F	; 127
     a9c:	30 40       	sbci	r19, 0x00	; 0
     a9e:	13 96       	adiw	r26, 0x03	; 3
     aa0:	3c 93       	st	X, r19
     aa2:	2e 93       	st	-X, r18
     aa4:	12 97       	sbiw	r26, 0x02	; 2
     aa6:	83 e0       	ldi	r24, 0x03	; 3
     aa8:	8c 93       	st	X, r24
     aaa:	87 e0       	ldi	r24, 0x07	; 7
     aac:	44 0f       	add	r20, r20
     aae:	55 1f       	adc	r21, r21
     ab0:	66 1f       	adc	r22, r22
     ab2:	77 1f       	adc	r23, r23
     ab4:	8a 95       	dec	r24
     ab6:	d1 f7       	brne	.-12     	; 0xaac <__unpack_f+0xd4>
     ab8:	70 64       	ori	r23, 0x40	; 64
     aba:	14 96       	adiw	r26, 0x04	; 4
     abc:	4d 93       	st	X+, r20
     abe:	5d 93       	st	X+, r21
     ac0:	6d 93       	st	X+, r22
     ac2:	7c 93       	st	X, r23
     ac4:	17 97       	sbiw	r26, 0x07	; 7
     ac6:	08 95       	ret

00000ac8 <__fpcmp_parts_f>:
     ac8:	1f 93       	push	r17
     aca:	dc 01       	movw	r26, r24
     acc:	fb 01       	movw	r30, r22
     ace:	9c 91       	ld	r25, X
     ad0:	92 30       	cpi	r25, 0x02	; 2
     ad2:	08 f4       	brcc	.+2      	; 0xad6 <__fpcmp_parts_f+0xe>
     ad4:	47 c0       	rjmp	.+142    	; 0xb64 <__fpcmp_parts_f+0x9c>
     ad6:	80 81       	ld	r24, Z
     ad8:	82 30       	cpi	r24, 0x02	; 2
     ada:	08 f4       	brcc	.+2      	; 0xade <__fpcmp_parts_f+0x16>
     adc:	43 c0       	rjmp	.+134    	; 0xb64 <__fpcmp_parts_f+0x9c>
     ade:	94 30       	cpi	r25, 0x04	; 4
     ae0:	51 f4       	brne	.+20     	; 0xaf6 <__fpcmp_parts_f+0x2e>
     ae2:	11 96       	adiw	r26, 0x01	; 1
     ae4:	1c 91       	ld	r17, X
     ae6:	84 30       	cpi	r24, 0x04	; 4
     ae8:	99 f5       	brne	.+102    	; 0xb50 <__fpcmp_parts_f+0x88>
     aea:	81 81       	ldd	r24, Z+1	; 0x01
     aec:	68 2f       	mov	r22, r24
     aee:	70 e0       	ldi	r23, 0x00	; 0
     af0:	61 1b       	sub	r22, r17
     af2:	71 09       	sbc	r23, r1
     af4:	3f c0       	rjmp	.+126    	; 0xb74 <__fpcmp_parts_f+0xac>
     af6:	84 30       	cpi	r24, 0x04	; 4
     af8:	21 f0       	breq	.+8      	; 0xb02 <__fpcmp_parts_f+0x3a>
     afa:	92 30       	cpi	r25, 0x02	; 2
     afc:	31 f4       	brne	.+12     	; 0xb0a <__fpcmp_parts_f+0x42>
     afe:	82 30       	cpi	r24, 0x02	; 2
     b00:	b9 f1       	breq	.+110    	; 0xb70 <__fpcmp_parts_f+0xa8>
     b02:	81 81       	ldd	r24, Z+1	; 0x01
     b04:	88 23       	and	r24, r24
     b06:	89 f1       	breq	.+98     	; 0xb6a <__fpcmp_parts_f+0xa2>
     b08:	2d c0       	rjmp	.+90     	; 0xb64 <__fpcmp_parts_f+0x9c>
     b0a:	11 96       	adiw	r26, 0x01	; 1
     b0c:	1c 91       	ld	r17, X
     b0e:	11 97       	sbiw	r26, 0x01	; 1
     b10:	82 30       	cpi	r24, 0x02	; 2
     b12:	f1 f0       	breq	.+60     	; 0xb50 <__fpcmp_parts_f+0x88>
     b14:	81 81       	ldd	r24, Z+1	; 0x01
     b16:	18 17       	cp	r17, r24
     b18:	d9 f4       	brne	.+54     	; 0xb50 <__fpcmp_parts_f+0x88>
     b1a:	12 96       	adiw	r26, 0x02	; 2
     b1c:	2d 91       	ld	r18, X+
     b1e:	3c 91       	ld	r19, X
     b20:	13 97       	sbiw	r26, 0x03	; 3
     b22:	82 81       	ldd	r24, Z+2	; 0x02
     b24:	93 81       	ldd	r25, Z+3	; 0x03
     b26:	82 17       	cp	r24, r18
     b28:	93 07       	cpc	r25, r19
     b2a:	94 f0       	brlt	.+36     	; 0xb50 <__fpcmp_parts_f+0x88>
     b2c:	28 17       	cp	r18, r24
     b2e:	39 07       	cpc	r19, r25
     b30:	bc f0       	brlt	.+46     	; 0xb60 <__fpcmp_parts_f+0x98>
     b32:	14 96       	adiw	r26, 0x04	; 4
     b34:	8d 91       	ld	r24, X+
     b36:	9d 91       	ld	r25, X+
     b38:	0d 90       	ld	r0, X+
     b3a:	bc 91       	ld	r27, X
     b3c:	a0 2d       	mov	r26, r0
     b3e:	24 81       	ldd	r18, Z+4	; 0x04
     b40:	35 81       	ldd	r19, Z+5	; 0x05
     b42:	46 81       	ldd	r20, Z+6	; 0x06
     b44:	57 81       	ldd	r21, Z+7	; 0x07
     b46:	28 17       	cp	r18, r24
     b48:	39 07       	cpc	r19, r25
     b4a:	4a 07       	cpc	r20, r26
     b4c:	5b 07       	cpc	r21, r27
     b4e:	18 f4       	brcc	.+6      	; 0xb56 <__fpcmp_parts_f+0x8e>
     b50:	11 23       	and	r17, r17
     b52:	41 f0       	breq	.+16     	; 0xb64 <__fpcmp_parts_f+0x9c>
     b54:	0a c0       	rjmp	.+20     	; 0xb6a <__fpcmp_parts_f+0xa2>
     b56:	82 17       	cp	r24, r18
     b58:	93 07       	cpc	r25, r19
     b5a:	a4 07       	cpc	r26, r20
     b5c:	b5 07       	cpc	r27, r21
     b5e:	40 f4       	brcc	.+16     	; 0xb70 <__fpcmp_parts_f+0xa8>
     b60:	11 23       	and	r17, r17
     b62:	19 f0       	breq	.+6      	; 0xb6a <__fpcmp_parts_f+0xa2>
     b64:	61 e0       	ldi	r22, 0x01	; 1
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	05 c0       	rjmp	.+10     	; 0xb74 <__fpcmp_parts_f+0xac>
     b6a:	6f ef       	ldi	r22, 0xFF	; 255
     b6c:	7f ef       	ldi	r23, 0xFF	; 255
     b6e:	02 c0       	rjmp	.+4      	; 0xb74 <__fpcmp_parts_f+0xac>
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	cb 01       	movw	r24, r22
     b76:	1f 91       	pop	r17
     b78:	08 95       	ret

00000b7a <M_TIMER1_void_Timer_Init>:
/*****************************************
 *            TIMER 1 DRIVER
 *
 * ****************************************/
void M_TIMER1_void_Timer_Init()
{
     b7a:	df 93       	push	r29
     b7c:	cf 93       	push	r28
     b7e:	0f 92       	push	r0
     b80:	cd b7       	in	r28, 0x3d	; 61
     b82:	de b7       	in	r29, 0x3e	; 62
	TCCR1A_REG=0;
     b84:	ef e4       	ldi	r30, 0x4F	; 79
     b86:	f0 e0       	ldi	r31, 0x00	; 0
     b88:	10 82       	st	Z, r1
	TCCR1B_REG=0;
     b8a:	ee e4       	ldi	r30, 0x4E	; 78
     b8c:	f0 e0       	ldi	r31, 0x00	; 0
     b8e:	10 82       	st	Z, r1

	TCNT1H_REG&=0X00;
     b90:	ed e4       	ldi	r30, 0x4D	; 77
     b92:	f0 e0       	ldi	r31, 0x00	; 0
     b94:	80 81       	ld	r24, Z
     b96:	ed e4       	ldi	r30, 0x4D	; 77
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	10 82       	st	Z, r1
	TCNT1L_REG=0x00;
     b9c:	ec e4       	ldi	r30, 0x4C	; 76
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	10 82       	st	Z, r1
}
     ba2:	0f 90       	pop	r0
     ba4:	cf 91       	pop	r28
     ba6:	df 91       	pop	r29
     ba8:	08 95       	ret

00000baa <M_TIMER1_void_Timer_start>:

void M_TIMER1_void_Timer_start()
{
     baa:	df 93       	push	r29
     bac:	cf 93       	push	r28
     bae:	cd b7       	in	r28, 0x3d	; 61
     bb0:	de b7       	in	r29, 0x3e	; 62

//	TCNT1H_REG=(TIMER1_REQUIRED_REMINDER_COUNTS>>2);
//	TCNT1L_REG=(TIMER1_REQUIRED_REMINDER_COUNTS & 0xFF);
	TCNT1LH_REG = (u16)TIMER1_START_COUNTS;
     bb2:	ec e4       	ldi	r30, 0x4C	; 76
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	80 91 e9 01 	lds	r24, 0x01E9
     bba:	90 91 ea 01 	lds	r25, 0x01EA
     bbe:	a0 91 eb 01 	lds	r26, 0x01EB
     bc2:	b0 91 ec 01 	lds	r27, 0x01EC
     bc6:	91 83       	std	Z+1, r25	; 0x01
     bc8:	80 83       	st	Z, r24
	TCCR1B_REG=0x04;
     bca:	ee e4       	ldi	r30, 0x4E	; 78
     bcc:	f0 e0       	ldi	r31, 0x00	; 0
     bce:	84 e0       	ldi	r24, 0x04	; 4
     bd0:	80 83       	st	Z, r24
}
     bd2:	cf 91       	pop	r28
     bd4:	df 91       	pop	r29
     bd6:	08 95       	ret

00000bd8 <M_TIMER1_void_Timer_stop>:
void M_TIMER1_void_Timer_stop(void)
{
     bd8:	df 93       	push	r29
     bda:	cf 93       	push	r28
     bdc:	cd b7       	in	r28, 0x3d	; 61
     bde:	de b7       	in	r29, 0x3e	; 62
	TCCR1B_REG=0;
     be0:	ee e4       	ldi	r30, 0x4E	; 78
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	10 82       	st	Z, r1
}
     be6:	cf 91       	pop	r28
     be8:	df 91       	pop	r29
     bea:	08 95       	ret

00000bec <M_TIMER1_void_Timer_setDelayTimeMilliSec>:

void M_TIMER1_void_Timer_setDelayTimeMilliSec(u16 Delay_Time_ms)
{
     bec:	ef 92       	push	r14
     bee:	ff 92       	push	r15
     bf0:	0f 93       	push	r16
     bf2:	1f 93       	push	r17
     bf4:	df 93       	push	r29
     bf6:	cf 93       	push	r28
     bf8:	cd b7       	in	r28, 0x3d	; 61
     bfa:	de b7       	in	r29, 0x3e	; 62
     bfc:	2a 97       	sbiw	r28, 0x0a	; 10
     bfe:	0f b6       	in	r0, 0x3f	; 63
     c00:	f8 94       	cli
     c02:	de bf       	out	0x3e, r29	; 62
     c04:	0f be       	out	0x3f, r0	; 63
     c06:	cd bf       	out	0x3d, r28	; 61
     c08:	9a 87       	std	Y+10, r25	; 0x0a
     c0a:	89 87       	std	Y+9, r24	; 0x09
	f32 Tick_Time = (f32) (256)/16000000;
     c0c:	8d eb       	ldi	r24, 0xBD	; 189
     c0e:	97 e3       	ldi	r25, 0x37	; 55
     c10:	a6 e8       	ldi	r26, 0x86	; 134
     c12:	b7 e3       	ldi	r27, 0x37	; 55
     c14:	8d 83       	std	Y+5, r24	; 0x05
     c16:	9e 83       	std	Y+6, r25	; 0x06
     c18:	af 83       	std	Y+7, r26	; 0x07
     c1a:	b8 87       	std	Y+8, r27	; 0x08
	u32 Desired_Ticks = (u32)(Delay_Time_ms/1000) / Tick_Time;
     c1c:	89 85       	ldd	r24, Y+9	; 0x09
     c1e:	9a 85       	ldd	r25, Y+10	; 0x0a
     c20:	28 ee       	ldi	r18, 0xE8	; 232
     c22:	33 e0       	ldi	r19, 0x03	; 3
     c24:	b9 01       	movw	r22, r18
     c26:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__udivmodhi4>
     c2a:	cb 01       	movw	r24, r22
     c2c:	cc 01       	movw	r24, r24
     c2e:	a0 e0       	ldi	r26, 0x00	; 0
     c30:	b0 e0       	ldi	r27, 0x00	; 0
     c32:	bc 01       	movw	r22, r24
     c34:	cd 01       	movw	r24, r26
     c36:	0e 94 4f 03 	call	0x69e	; 0x69e <__floatunsisf>
     c3a:	dc 01       	movw	r26, r24
     c3c:	cb 01       	movw	r24, r22
     c3e:	bc 01       	movw	r22, r24
     c40:	cd 01       	movw	r24, r26
     c42:	2d 81       	ldd	r18, Y+5	; 0x05
     c44:	3e 81       	ldd	r19, Y+6	; 0x06
     c46:	4f 81       	ldd	r20, Y+7	; 0x07
     c48:	58 85       	ldd	r21, Y+8	; 0x08
     c4a:	0e 94 1f 02 	call	0x43e	; 0x43e <__divsf3>
     c4e:	dc 01       	movw	r26, r24
     c50:	cb 01       	movw	r24, r22
     c52:	bc 01       	movw	r22, r24
     c54:	cd 01       	movw	r24, r26
     c56:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c5a:	dc 01       	movw	r26, r24
     c5c:	cb 01       	movw	r24, r22
     c5e:	89 83       	std	Y+1, r24	; 0x01
     c60:	9a 83       	std	Y+2, r25	; 0x02
     c62:	ab 83       	std	Y+3, r26	; 0x03
     c64:	bc 83       	std	Y+4, r27	; 0x04

	TIMER1_START_COUNTS = 65536 - Desired_Ticks;
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	41 e0       	ldi	r20, 0x01	; 1
     c6c:	50 e0       	ldi	r21, 0x00	; 0
     c6e:	89 81       	ldd	r24, Y+1	; 0x01
     c70:	9a 81       	ldd	r25, Y+2	; 0x02
     c72:	ab 81       	ldd	r26, Y+3	; 0x03
     c74:	bc 81       	ldd	r27, Y+4	; 0x04
     c76:	79 01       	movw	r14, r18
     c78:	8a 01       	movw	r16, r20
     c7a:	e8 1a       	sub	r14, r24
     c7c:	f9 0a       	sbc	r15, r25
     c7e:	0a 0b       	sbc	r16, r26
     c80:	1b 0b       	sbc	r17, r27
     c82:	d8 01       	movw	r26, r16
     c84:	c7 01       	movw	r24, r14
     c86:	80 93 e9 01 	sts	0x01E9, r24
     c8a:	90 93 ea 01 	sts	0x01EA, r25
     c8e:	a0 93 eb 01 	sts	0x01EB, r26
     c92:	b0 93 ec 01 	sts	0x01EC, r27
//	TIMER1_REQUIRED_OVERFLOW_COUNTS = Desired_Ticks / 65536;
//	TIMER1_REQUIRED_REMINDER_COUNTS = Desired_Ticks % 65536;



}
     c96:	2a 96       	adiw	r28, 0x0a	; 10
     c98:	0f b6       	in	r0, 0x3f	; 63
     c9a:	f8 94       	cli
     c9c:	de bf       	out	0x3e, r29	; 62
     c9e:	0f be       	out	0x3f, r0	; 63
     ca0:	cd bf       	out	0x3d, r28	; 61
     ca2:	cf 91       	pop	r28
     ca4:	df 91       	pop	r29
     ca6:	1f 91       	pop	r17
     ca8:	0f 91       	pop	r16
     caa:	ff 90       	pop	r15
     cac:	ef 90       	pop	r14
     cae:	08 95       	ret

00000cb0 <M_TIMER1_void_EnableInt>:

void M_TIMER1_void_EnableInt()
{
     cb0:	df 93       	push	r29
     cb2:	cf 93       	push	r28
     cb4:	cd b7       	in	r28, 0x3d	; 61
     cb6:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK_REG,TIMSK_TOIE1_BIT);
     cb8:	a9 e5       	ldi	r26, 0x59	; 89
     cba:	b0 e0       	ldi	r27, 0x00	; 0
     cbc:	e9 e5       	ldi	r30, 0x59	; 89
     cbe:	f0 e0       	ldi	r31, 0x00	; 0
     cc0:	80 81       	ld	r24, Z
     cc2:	84 60       	ori	r24, 0x04	; 4
     cc4:	8c 93       	st	X, r24
}
     cc6:	cf 91       	pop	r28
     cc8:	df 91       	pop	r29
     cca:	08 95       	ret

00000ccc <M_TIMER1_void_DisableInt>:

void M_TIMER1_void_DisableInt(void)
{
     ccc:	df 93       	push	r29
     cce:	cf 93       	push	r28
     cd0:	cd b7       	in	r28, 0x3d	; 61
     cd2:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK_REG,TIMSK_TICIE1_BIT);
     cd4:	a9 e5       	ldi	r26, 0x59	; 89
     cd6:	b0 e0       	ldi	r27, 0x00	; 0
     cd8:	e9 e5       	ldi	r30, 0x59	; 89
     cda:	f0 e0       	ldi	r31, 0x00	; 0
     cdc:	80 81       	ld	r24, Z
     cde:	8f 7d       	andi	r24, 0xDF	; 223
     ce0:	8c 93       	st	X, r24
	CLR_BIT(TIMSK_REG,TIMSK_OCIE1A_BIT);
     ce2:	a9 e5       	ldi	r26, 0x59	; 89
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	e9 e5       	ldi	r30, 0x59	; 89
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 81       	ld	r24, Z
     cec:	8f 7e       	andi	r24, 0xEF	; 239
     cee:	8c 93       	st	X, r24
	CLR_BIT(TIMSK_REG,TIMSK_OCIE1B_BIT);
     cf0:	a9 e5       	ldi	r26, 0x59	; 89
     cf2:	b0 e0       	ldi	r27, 0x00	; 0
     cf4:	e9 e5       	ldi	r30, 0x59	; 89
     cf6:	f0 e0       	ldi	r31, 0x00	; 0
     cf8:	80 81       	ld	r24, Z
     cfa:	87 7f       	andi	r24, 0xF7	; 247
     cfc:	8c 93       	st	X, r24
	CLR_BIT(TIMSK_REG,TIMSK_TOIE1_BIT);
     cfe:	a9 e5       	ldi	r26, 0x59	; 89
     d00:	b0 e0       	ldi	r27, 0x00	; 0
     d02:	e9 e5       	ldi	r30, 0x59	; 89
     d04:	f0 e0       	ldi	r31, 0x00	; 0
     d06:	80 81       	ld	r24, Z
     d08:	8b 7f       	andi	r24, 0xFB	; 251
     d0a:	8c 93       	st	X, r24
}
     d0c:	cf 91       	pop	r28
     d0e:	df 91       	pop	r29
     d10:	08 95       	ret

00000d12 <M_TIMER1_void_OVF_setCallBack>:
//		TIMER1_COMP_CallBack = ptr_APP1;
//	}
//
//}
void M_TIMER1_void_OVF_setCallBack(void (*ptr_APP1)(void),void (*ptr_APP2)(void),void (*ptr_APP3)(void))
{
     d12:	df 93       	push	r29
     d14:	cf 93       	push	r28
     d16:	00 d0       	rcall	.+0      	; 0xd18 <M_TIMER1_void_OVF_setCallBack+0x6>
     d18:	00 d0       	rcall	.+0      	; 0xd1a <M_TIMER1_void_OVF_setCallBack+0x8>
     d1a:	00 d0       	rcall	.+0      	; 0xd1c <M_TIMER1_void_OVF_setCallBack+0xa>
     d1c:	cd b7       	in	r28, 0x3d	; 61
     d1e:	de b7       	in	r29, 0x3e	; 62
     d20:	9a 83       	std	Y+2, r25	; 0x02
     d22:	89 83       	std	Y+1, r24	; 0x01
     d24:	7c 83       	std	Y+4, r23	; 0x04
     d26:	6b 83       	std	Y+3, r22	; 0x03
     d28:	5e 83       	std	Y+6, r21	; 0x06
     d2a:	4d 83       	std	Y+5, r20	; 0x05
	if(ptr_APP1 != NULL)
     d2c:	89 81       	ldd	r24, Y+1	; 0x01
     d2e:	9a 81       	ldd	r25, Y+2	; 0x02
     d30:	00 97       	sbiw	r24, 0x00	; 0
     d32:	31 f0       	breq	.+12     	; 0xd40 <M_TIMER1_void_OVF_setCallBack+0x2e>
	{
		TIMER1_OVF_APP1_CallBack = ptr_APP1;
     d34:	89 81       	ldd	r24, Y+1	; 0x01
     d36:	9a 81       	ldd	r25, Y+2	; 0x02
     d38:	90 93 df 01 	sts	0x01DF, r25
     d3c:	80 93 de 01 	sts	0x01DE, r24
	}
	if(ptr_APP2 != NULL)
     d40:	8b 81       	ldd	r24, Y+3	; 0x03
     d42:	9c 81       	ldd	r25, Y+4	; 0x04
     d44:	00 97       	sbiw	r24, 0x00	; 0
     d46:	31 f0       	breq	.+12     	; 0xd54 <M_TIMER1_void_OVF_setCallBack+0x42>
	{
		TIMER1_OVF_APP2_CallBack = ptr_APP2;
     d48:	8b 81       	ldd	r24, Y+3	; 0x03
     d4a:	9c 81       	ldd	r25, Y+4	; 0x04
     d4c:	90 93 e1 01 	sts	0x01E1, r25
     d50:	80 93 e0 01 	sts	0x01E0, r24
	}
	if(ptr_APP3 != NULL)
     d54:	8d 81       	ldd	r24, Y+5	; 0x05
     d56:	9e 81       	ldd	r25, Y+6	; 0x06
     d58:	00 97       	sbiw	r24, 0x00	; 0
     d5a:	31 f0       	breq	.+12     	; 0xd68 <M_TIMER1_void_OVF_setCallBack+0x56>
	{
		TIMER1_OVF_APP3_CallBack = ptr_APP3;
     d5c:	8d 81       	ldd	r24, Y+5	; 0x05
     d5e:	9e 81       	ldd	r25, Y+6	; 0x06
     d60:	90 93 e3 01 	sts	0x01E3, r25
     d64:	80 93 e2 01 	sts	0x01E2, r24
	}



}
     d68:	26 96       	adiw	r28, 0x06	; 6
     d6a:	0f b6       	in	r0, 0x3f	; 63
     d6c:	f8 94       	cli
     d6e:	de bf       	out	0x3e, r29	; 62
     d70:	0f be       	out	0x3f, r0	; 63
     d72:	cd bf       	out	0x3d, r28	; 61
     d74:	cf 91       	pop	r28
     d76:	df 91       	pop	r29
     d78:	08 95       	ret

00000d7a <__vector_9>:
//
//


void __vector_9 (void)
{
     d7a:	1f 92       	push	r1
     d7c:	0f 92       	push	r0
     d7e:	0f b6       	in	r0, 0x3f	; 63
     d80:	0f 92       	push	r0
     d82:	11 24       	eor	r1, r1
     d84:	2f 93       	push	r18
     d86:	3f 93       	push	r19
     d88:	4f 93       	push	r20
     d8a:	5f 93       	push	r21
     d8c:	6f 93       	push	r22
     d8e:	7f 93       	push	r23
     d90:	8f 93       	push	r24
     d92:	9f 93       	push	r25
     d94:	af 93       	push	r26
     d96:	bf 93       	push	r27
     d98:	ef 93       	push	r30
     d9a:	ff 93       	push	r31
     d9c:	df 93       	push	r29
     d9e:	cf 93       	push	r28
     da0:	cd b7       	in	r28, 0x3d	; 61
     da2:	de b7       	in	r29, 0x3e	; 62
//	TIMER1_OVF_CallBack();
	TCNT1LH_REG = (u16)TIMER1_START_COUNTS;
     da4:	ec e4       	ldi	r30, 0x4C	; 76
     da6:	f0 e0       	ldi	r31, 0x00	; 0
     da8:	80 91 e9 01 	lds	r24, 0x01E9
     dac:	90 91 ea 01 	lds	r25, 0x01EA
     db0:	a0 91 eb 01 	lds	r26, 0x01EB
     db4:	b0 91 ec 01 	lds	r27, 0x01EC
     db8:	91 83       	std	Z+1, r25	; 0x01
     dba:	80 83       	st	Z, r24
	TIMER1_OVERFLOW_COUNTER++;
     dbc:	80 91 e4 01 	lds	r24, 0x01E4
     dc0:	90 91 e5 01 	lds	r25, 0x01E5
     dc4:	a0 91 e6 01 	lds	r26, 0x01E6
     dc8:	b0 91 e7 01 	lds	r27, 0x01E7
     dcc:	01 96       	adiw	r24, 0x01	; 1
     dce:	a1 1d       	adc	r26, r1
     dd0:	b1 1d       	adc	r27, r1
     dd2:	80 93 e4 01 	sts	0x01E4, r24
     dd6:	90 93 e5 01 	sts	0x01E5, r25
     dda:	a0 93 e6 01 	sts	0x01E6, r26
     dde:	b0 93 e7 01 	sts	0x01E7, r27
	if(TIMER1_OVERFLOW_COUNTER%2 == 0)						//2*500ms = 1 second
     de2:	80 91 e4 01 	lds	r24, 0x01E4
     de6:	90 91 e5 01 	lds	r25, 0x01E5
     dea:	a0 91 e6 01 	lds	r26, 0x01E6
     dee:	b0 91 e7 01 	lds	r27, 0x01E7
     df2:	81 70       	andi	r24, 0x01	; 1
     df4:	90 70       	andi	r25, 0x00	; 0
     df6:	a0 70       	andi	r26, 0x00	; 0
     df8:	b0 70       	andi	r27, 0x00	; 0
     dfa:	00 97       	sbiw	r24, 0x00	; 0
     dfc:	a1 05       	cpc	r26, r1
     dfe:	b1 05       	cpc	r27, r1
     e00:	29 f4       	brne	.+10     	; 0xe0c <__vector_9+0x92>
	{
		TIMER1_OVF_APP1_CallBack();
     e02:	e0 91 de 01 	lds	r30, 0x01DE
     e06:	f0 91 df 01 	lds	r31, 0x01DF
     e0a:	09 95       	icall
	}
	if(TIMER1_OVERFLOW_COUNTER%6 == 0)						//6*500ms = 3 seconds
     e0c:	80 91 e4 01 	lds	r24, 0x01E4
     e10:	90 91 e5 01 	lds	r25, 0x01E5
     e14:	a0 91 e6 01 	lds	r26, 0x01E6
     e18:	b0 91 e7 01 	lds	r27, 0x01E7
     e1c:	26 e0       	ldi	r18, 0x06	; 6
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	40 e0       	ldi	r20, 0x00	; 0
     e22:	50 e0       	ldi	r21, 0x00	; 0
     e24:	bc 01       	movw	r22, r24
     e26:	cd 01       	movw	r24, r26
     e28:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <__udivmodsi4>
     e2c:	dc 01       	movw	r26, r24
     e2e:	cb 01       	movw	r24, r22
     e30:	00 97       	sbiw	r24, 0x00	; 0
     e32:	a1 05       	cpc	r26, r1
     e34:	b1 05       	cpc	r27, r1
     e36:	29 f4       	brne	.+10     	; 0xe42 <__vector_9+0xc8>
	{
		TIMER1_OVF_APP3_CallBack();
     e38:	e0 91 e2 01 	lds	r30, 0x01E2
     e3c:	f0 91 e3 01 	lds	r31, 0x01E3
     e40:	09 95       	icall
	}
	if(BLUE_State==1)
     e42:	80 91 e8 01 	lds	r24, 0x01E8
     e46:	81 30       	cpi	r24, 0x01	; 1
     e48:	39 f4       	brne	.+14     	; 0xe58 <__vector_9+0xde>
	{
		TIMER1_OVF_APP2_CallBack();
     e4a:	e0 91 e0 01 	lds	r30, 0x01E0
     e4e:	f0 91 e1 01 	lds	r31, 0x01E1
     e52:	09 95       	icall
		BLUE_State=0;
     e54:	10 92 e8 01 	sts	0x01E8, r1
//	{
//		TIMER1_OVF_CallBack();
//		TIMER1_OVERFLOW_COUNTER=0;
//	}

}
     e58:	cf 91       	pop	r28
     e5a:	df 91       	pop	r29
     e5c:	ff 91       	pop	r31
     e5e:	ef 91       	pop	r30
     e60:	bf 91       	pop	r27
     e62:	af 91       	pop	r26
     e64:	9f 91       	pop	r25
     e66:	8f 91       	pop	r24
     e68:	7f 91       	pop	r23
     e6a:	6f 91       	pop	r22
     e6c:	5f 91       	pop	r21
     e6e:	4f 91       	pop	r20
     e70:	3f 91       	pop	r19
     e72:	2f 91       	pop	r18
     e74:	0f 90       	pop	r0
     e76:	0f be       	out	0x3f, r0	; 63
     e78:	0f 90       	pop	r0
     e7a:	1f 90       	pop	r1
     e7c:	18 95       	reti

00000e7e <Port_Init>:
  parameters (in)  :
  parameters (out) : none
  Return Value     : void
******************************************/
void Port_Init(const Port_ConfigType * ConfigPtr)
{
     e7e:	df 93       	push	r29
     e80:	cf 93       	push	r28
     e82:	cd b7       	in	r28, 0x3d	; 61
     e84:	de b7       	in	r29, 0x3e	; 62
     e86:	2b 97       	sbiw	r28, 0x0b	; 11
     e88:	0f b6       	in	r0, 0x3f	; 63
     e8a:	f8 94       	cli
     e8c:	de bf       	out	0x3e, r29	; 62
     e8e:	0f be       	out	0x3f, r0	; 63
     e90:	cd bf       	out	0x3d, r28	; 61
     e92:	9d 83       	std	Y+5, r25	; 0x05
     e94:	8c 83       	std	Y+4, r24	; 0x04

	if(ConfigPtr == NULL)
     e96:	8c 81       	ldd	r24, Y+4	; 0x04
     e98:	9d 81       	ldd	r25, Y+5	; 0x05
     e9a:	00 97       	sbiw	r24, 0x00	; 0
     e9c:	09 f4       	brne	.+2      	; 0xea0 <Port_Init+0x22>
     e9e:	40 c2       	rjmp	.+1152   	; 0x1320 <Port_Init+0x4a2>
		else
		{
			u8 i ;
			u8 Local_pin;
			u8 Local_port;
			for(i= 0;i<PORT_PINS_CONFIG_ARR_SIZE;i++)
     ea0:	1b 82       	std	Y+3, r1	; 0x03
     ea2:	3a c2       	rjmp	.+1140   	; 0x1318 <Port_Init+0x49a>
			{
				Local_pin =(ConfigPtr[i].Port_PinNumber)%10 ;
     ea4:	8b 81       	ldd	r24, Y+3	; 0x03
     ea6:	88 2f       	mov	r24, r24
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	9c 01       	movw	r18, r24
     eac:	22 0f       	add	r18, r18
     eae:	33 1f       	adc	r19, r19
     eb0:	22 0f       	add	r18, r18
     eb2:	33 1f       	adc	r19, r19
     eb4:	8c 81       	ldd	r24, Y+4	; 0x04
     eb6:	9d 81       	ldd	r25, Y+5	; 0x05
     eb8:	fc 01       	movw	r30, r24
     eba:	e2 0f       	add	r30, r18
     ebc:	f3 1f       	adc	r31, r19
     ebe:	80 81       	ld	r24, Z
     ec0:	9a e0       	ldi	r25, 0x0A	; 10
     ec2:	69 2f       	mov	r22, r25
     ec4:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__udivmodqi4>
     ec8:	89 2f       	mov	r24, r25
     eca:	8a 83       	std	Y+2, r24	; 0x02
				Local_port =(ConfigPtr[i].Port_PinNumber)/10 ;
     ecc:	8b 81       	ldd	r24, Y+3	; 0x03
     ece:	88 2f       	mov	r24, r24
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	9c 01       	movw	r18, r24
     ed4:	22 0f       	add	r18, r18
     ed6:	33 1f       	adc	r19, r19
     ed8:	22 0f       	add	r18, r18
     eda:	33 1f       	adc	r19, r19
     edc:	8c 81       	ldd	r24, Y+4	; 0x04
     ede:	9d 81       	ldd	r25, Y+5	; 0x05
     ee0:	fc 01       	movw	r30, r24
     ee2:	e2 0f       	add	r30, r18
     ee4:	f3 1f       	adc	r31, r19
     ee6:	80 81       	ld	r24, Z
     ee8:	9a e0       	ldi	r25, 0x0A	; 10
     eea:	69 2f       	mov	r22, r25
     eec:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__udivmodqi4>
     ef0:	89 83       	std	Y+1, r24	; 0x01
				// step1 : set direction
				if(ConfigPtr[i].Port_PinDirection == PORT_PINDIR_INPUT || ConfigPtr[i].Port_PinDirection ==PORT_PINDIR_OUTPUT)
     ef2:	8b 81       	ldd	r24, Y+3	; 0x03
     ef4:	88 2f       	mov	r24, r24
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	9c 01       	movw	r18, r24
     efa:	22 0f       	add	r18, r18
     efc:	33 1f       	adc	r19, r19
     efe:	22 0f       	add	r18, r18
     f00:	33 1f       	adc	r19, r19
     f02:	8c 81       	ldd	r24, Y+4	; 0x04
     f04:	9d 81       	ldd	r25, Y+5	; 0x05
     f06:	fc 01       	movw	r30, r24
     f08:	e2 0f       	add	r30, r18
     f0a:	f3 1f       	adc	r31, r19
     f0c:	82 81       	ldd	r24, Z+2	; 0x02
     f0e:	88 23       	and	r24, r24
     f10:	89 f0       	breq	.+34     	; 0xf34 <Port_Init+0xb6>
     f12:	8b 81       	ldd	r24, Y+3	; 0x03
     f14:	88 2f       	mov	r24, r24
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	9c 01       	movw	r18, r24
     f1a:	22 0f       	add	r18, r18
     f1c:	33 1f       	adc	r19, r19
     f1e:	22 0f       	add	r18, r18
     f20:	33 1f       	adc	r19, r19
     f22:	8c 81       	ldd	r24, Y+4	; 0x04
     f24:	9d 81       	ldd	r25, Y+5	; 0x05
     f26:	fc 01       	movw	r30, r24
     f28:	e2 0f       	add	r30, r18
     f2a:	f3 1f       	adc	r31, r19
     f2c:	82 81       	ldd	r24, Z+2	; 0x02
     f2e:	81 30       	cpi	r24, 0x01	; 1
     f30:	09 f0       	breq	.+2      	; 0xf34 <Port_Init+0xb6>
     f32:	ef c1       	rjmp	.+990    	; 0x1312 <Port_Init+0x494>
				{
					switch(Local_port)
     f34:	89 81       	ldd	r24, Y+1	; 0x01
     f36:	28 2f       	mov	r18, r24
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	3b 87       	std	Y+11, r19	; 0x0b
     f3c:	2a 87       	std	Y+10, r18	; 0x0a
     f3e:	6a 85       	ldd	r22, Y+10	; 0x0a
     f40:	7b 85       	ldd	r23, Y+11	; 0x0b
     f42:	62 30       	cpi	r22, 0x02	; 2
     f44:	71 05       	cpc	r23, r1
     f46:	d1 f1       	breq	.+116    	; 0xfbc <Port_Init+0x13e>
     f48:	8a 85       	ldd	r24, Y+10	; 0x0a
     f4a:	9b 85       	ldd	r25, Y+11	; 0x0b
     f4c:	83 30       	cpi	r24, 0x03	; 3
     f4e:	91 05       	cpc	r25, r1
     f50:	34 f4       	brge	.+12     	; 0xf5e <Port_Init+0xe0>
     f52:	2a 85       	ldd	r18, Y+10	; 0x0a
     f54:	3b 85       	ldd	r19, Y+11	; 0x0b
     f56:	21 30       	cpi	r18, 0x01	; 1
     f58:	31 05       	cpc	r19, r1
     f5a:	71 f0       	breq	.+28     	; 0xf78 <Port_Init+0xfa>
     f5c:	94 c0       	rjmp	.+296    	; 0x1086 <Port_Init+0x208>
     f5e:	6a 85       	ldd	r22, Y+10	; 0x0a
     f60:	7b 85       	ldd	r23, Y+11	; 0x0b
     f62:	63 30       	cpi	r22, 0x03	; 3
     f64:	71 05       	cpc	r23, r1
     f66:	09 f4       	brne	.+2      	; 0xf6a <Port_Init+0xec>
     f68:	4b c0       	rjmp	.+150    	; 0x1000 <Port_Init+0x182>
     f6a:	8a 85       	ldd	r24, Y+10	; 0x0a
     f6c:	9b 85       	ldd	r25, Y+11	; 0x0b
     f6e:	84 30       	cpi	r24, 0x04	; 4
     f70:	91 05       	cpc	r25, r1
     f72:	09 f4       	brne	.+2      	; 0xf76 <Port_Init+0xf8>
     f74:	67 c0       	rjmp	.+206    	; 0x1044 <Port_Init+0x1c6>
     f76:	87 c0       	rjmp	.+270    	; 0x1086 <Port_Init+0x208>
					{
					case PORT_PORTA:DDRA_REG|= (u8)(ConfigPtr[i].Port_PinDirection<< Local_pin);break;
     f78:	aa e3       	ldi	r26, 0x3A	; 58
     f7a:	b0 e0       	ldi	r27, 0x00	; 0
     f7c:	ea e3       	ldi	r30, 0x3A	; 58
     f7e:	f0 e0       	ldi	r31, 0x00	; 0
     f80:	40 81       	ld	r20, Z
     f82:	8b 81       	ldd	r24, Y+3	; 0x03
     f84:	88 2f       	mov	r24, r24
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	9c 01       	movw	r18, r24
     f8a:	22 0f       	add	r18, r18
     f8c:	33 1f       	adc	r19, r19
     f8e:	22 0f       	add	r18, r18
     f90:	33 1f       	adc	r19, r19
     f92:	8c 81       	ldd	r24, Y+4	; 0x04
     f94:	9d 81       	ldd	r25, Y+5	; 0x05
     f96:	fc 01       	movw	r30, r24
     f98:	e2 0f       	add	r30, r18
     f9a:	f3 1f       	adc	r31, r19
     f9c:	82 81       	ldd	r24, Z+2	; 0x02
     f9e:	28 2f       	mov	r18, r24
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	8a 81       	ldd	r24, Y+2	; 0x02
     fa4:	88 2f       	mov	r24, r24
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	b9 01       	movw	r22, r18
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <Port_Init+0x132>
     fac:	66 0f       	add	r22, r22
     fae:	77 1f       	adc	r23, r23
     fb0:	8a 95       	dec	r24
     fb2:	e2 f7       	brpl	.-8      	; 0xfac <Port_Init+0x12e>
     fb4:	cb 01       	movw	r24, r22
     fb6:	84 2b       	or	r24, r20
     fb8:	8c 93       	st	X, r24
     fba:	65 c0       	rjmp	.+202    	; 0x1086 <Port_Init+0x208>
					case PORT_PORTB:DDRB_REG|= (u8)(ConfigPtr[i].Port_PinDirection<< Local_pin);break;
     fbc:	a7 e3       	ldi	r26, 0x37	; 55
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	e7 e3       	ldi	r30, 0x37	; 55
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	40 81       	ld	r20, Z
     fc6:	8b 81       	ldd	r24, Y+3	; 0x03
     fc8:	88 2f       	mov	r24, r24
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	9c 01       	movw	r18, r24
     fce:	22 0f       	add	r18, r18
     fd0:	33 1f       	adc	r19, r19
     fd2:	22 0f       	add	r18, r18
     fd4:	33 1f       	adc	r19, r19
     fd6:	8c 81       	ldd	r24, Y+4	; 0x04
     fd8:	9d 81       	ldd	r25, Y+5	; 0x05
     fda:	fc 01       	movw	r30, r24
     fdc:	e2 0f       	add	r30, r18
     fde:	f3 1f       	adc	r31, r19
     fe0:	82 81       	ldd	r24, Z+2	; 0x02
     fe2:	28 2f       	mov	r18, r24
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	8a 81       	ldd	r24, Y+2	; 0x02
     fe8:	88 2f       	mov	r24, r24
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	b9 01       	movw	r22, r18
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <Port_Init+0x176>
     ff0:	66 0f       	add	r22, r22
     ff2:	77 1f       	adc	r23, r23
     ff4:	8a 95       	dec	r24
     ff6:	e2 f7       	brpl	.-8      	; 0xff0 <Port_Init+0x172>
     ff8:	cb 01       	movw	r24, r22
     ffa:	84 2b       	or	r24, r20
     ffc:	8c 93       	st	X, r24
     ffe:	43 c0       	rjmp	.+134    	; 0x1086 <Port_Init+0x208>
					case PORT_PORTC:DDRC_REG|= (u8)(ConfigPtr[i].Port_PinDirection<< Local_pin);break;
    1000:	a4 e3       	ldi	r26, 0x34	; 52
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e4 e3       	ldi	r30, 0x34	; 52
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	40 81       	ld	r20, Z
    100a:	8b 81       	ldd	r24, Y+3	; 0x03
    100c:	88 2f       	mov	r24, r24
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	9c 01       	movw	r18, r24
    1012:	22 0f       	add	r18, r18
    1014:	33 1f       	adc	r19, r19
    1016:	22 0f       	add	r18, r18
    1018:	33 1f       	adc	r19, r19
    101a:	8c 81       	ldd	r24, Y+4	; 0x04
    101c:	9d 81       	ldd	r25, Y+5	; 0x05
    101e:	fc 01       	movw	r30, r24
    1020:	e2 0f       	add	r30, r18
    1022:	f3 1f       	adc	r31, r19
    1024:	82 81       	ldd	r24, Z+2	; 0x02
    1026:	28 2f       	mov	r18, r24
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	8a 81       	ldd	r24, Y+2	; 0x02
    102c:	88 2f       	mov	r24, r24
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	b9 01       	movw	r22, r18
    1032:	02 c0       	rjmp	.+4      	; 0x1038 <Port_Init+0x1ba>
    1034:	66 0f       	add	r22, r22
    1036:	77 1f       	adc	r23, r23
    1038:	8a 95       	dec	r24
    103a:	e2 f7       	brpl	.-8      	; 0x1034 <Port_Init+0x1b6>
    103c:	cb 01       	movw	r24, r22
    103e:	84 2b       	or	r24, r20
    1040:	8c 93       	st	X, r24
    1042:	21 c0       	rjmp	.+66     	; 0x1086 <Port_Init+0x208>
					case PORT_PORTD:DDRD_REG|= (u8)(ConfigPtr[i].Port_PinDirection<< Local_pin);break;
    1044:	a1 e3       	ldi	r26, 0x31	; 49
    1046:	b0 e0       	ldi	r27, 0x00	; 0
    1048:	e1 e3       	ldi	r30, 0x31	; 49
    104a:	f0 e0       	ldi	r31, 0x00	; 0
    104c:	40 81       	ld	r20, Z
    104e:	8b 81       	ldd	r24, Y+3	; 0x03
    1050:	88 2f       	mov	r24, r24
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	9c 01       	movw	r18, r24
    1056:	22 0f       	add	r18, r18
    1058:	33 1f       	adc	r19, r19
    105a:	22 0f       	add	r18, r18
    105c:	33 1f       	adc	r19, r19
    105e:	8c 81       	ldd	r24, Y+4	; 0x04
    1060:	9d 81       	ldd	r25, Y+5	; 0x05
    1062:	fc 01       	movw	r30, r24
    1064:	e2 0f       	add	r30, r18
    1066:	f3 1f       	adc	r31, r19
    1068:	82 81       	ldd	r24, Z+2	; 0x02
    106a:	28 2f       	mov	r18, r24
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	8a 81       	ldd	r24, Y+2	; 0x02
    1070:	88 2f       	mov	r24, r24
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	b9 01       	movw	r22, r18
    1076:	02 c0       	rjmp	.+4      	; 0x107c <Port_Init+0x1fe>
    1078:	66 0f       	add	r22, r22
    107a:	77 1f       	adc	r23, r23
    107c:	8a 95       	dec	r24
    107e:	e2 f7       	brpl	.-8      	; 0x1078 <Port_Init+0x1fa>
    1080:	cb 01       	movw	r24, r22
    1082:	84 2b       	or	r24, r20
    1084:	8c 93       	st	X, r24

					}
					// step 2 : config initial pin value
					if(ConfigPtr[i].Port_PinLevelValue == PORT_PIN_LEVEL_LOW || ConfigPtr[i].Port_PinLevelValue == PORT_PIN_LEVEL_HIGH)
    1086:	8b 81       	ldd	r24, Y+3	; 0x03
    1088:	88 2f       	mov	r24, r24
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	9c 01       	movw	r18, r24
    108e:	22 0f       	add	r18, r18
    1090:	33 1f       	adc	r19, r19
    1092:	22 0f       	add	r18, r18
    1094:	33 1f       	adc	r19, r19
    1096:	8c 81       	ldd	r24, Y+4	; 0x04
    1098:	9d 81       	ldd	r25, Y+5	; 0x05
    109a:	fc 01       	movw	r30, r24
    109c:	e2 0f       	add	r30, r18
    109e:	f3 1f       	adc	r31, r19
    10a0:	81 81       	ldd	r24, Z+1	; 0x01
    10a2:	88 23       	and	r24, r24
    10a4:	89 f0       	breq	.+34     	; 0x10c8 <Port_Init+0x24a>
    10a6:	8b 81       	ldd	r24, Y+3	; 0x03
    10a8:	88 2f       	mov	r24, r24
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	9c 01       	movw	r18, r24
    10ae:	22 0f       	add	r18, r18
    10b0:	33 1f       	adc	r19, r19
    10b2:	22 0f       	add	r18, r18
    10b4:	33 1f       	adc	r19, r19
    10b6:	8c 81       	ldd	r24, Y+4	; 0x04
    10b8:	9d 81       	ldd	r25, Y+5	; 0x05
    10ba:	fc 01       	movw	r30, r24
    10bc:	e2 0f       	add	r30, r18
    10be:	f3 1f       	adc	r31, r19
    10c0:	81 81       	ldd	r24, Z+1	; 0x01
    10c2:	81 30       	cpi	r24, 0x01	; 1
    10c4:	09 f0       	breq	.+2      	; 0x10c8 <Port_Init+0x24a>
    10c6:	25 c1       	rjmp	.+586    	; 0x1312 <Port_Init+0x494>
					{
						switch(Local_port)
    10c8:	89 81       	ldd	r24, Y+1	; 0x01
    10ca:	28 2f       	mov	r18, r24
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	39 87       	std	Y+9, r19	; 0x09
    10d0:	28 87       	std	Y+8, r18	; 0x08
    10d2:	68 85       	ldd	r22, Y+8	; 0x08
    10d4:	79 85       	ldd	r23, Y+9	; 0x09
    10d6:	62 30       	cpi	r22, 0x02	; 2
    10d8:	71 05       	cpc	r23, r1
    10da:	d1 f1       	breq	.+116    	; 0x1150 <Port_Init+0x2d2>
    10dc:	88 85       	ldd	r24, Y+8	; 0x08
    10de:	99 85       	ldd	r25, Y+9	; 0x09
    10e0:	83 30       	cpi	r24, 0x03	; 3
    10e2:	91 05       	cpc	r25, r1
    10e4:	34 f4       	brge	.+12     	; 0x10f2 <Port_Init+0x274>
    10e6:	28 85       	ldd	r18, Y+8	; 0x08
    10e8:	39 85       	ldd	r19, Y+9	; 0x09
    10ea:	21 30       	cpi	r18, 0x01	; 1
    10ec:	31 05       	cpc	r19, r1
    10ee:	71 f0       	breq	.+28     	; 0x110c <Port_Init+0x28e>
    10f0:	94 c0       	rjmp	.+296    	; 0x121a <Port_Init+0x39c>
    10f2:	68 85       	ldd	r22, Y+8	; 0x08
    10f4:	79 85       	ldd	r23, Y+9	; 0x09
    10f6:	63 30       	cpi	r22, 0x03	; 3
    10f8:	71 05       	cpc	r23, r1
    10fa:	09 f4       	brne	.+2      	; 0x10fe <Port_Init+0x280>
    10fc:	4b c0       	rjmp	.+150    	; 0x1194 <Port_Init+0x316>
    10fe:	88 85       	ldd	r24, Y+8	; 0x08
    1100:	99 85       	ldd	r25, Y+9	; 0x09
    1102:	84 30       	cpi	r24, 0x04	; 4
    1104:	91 05       	cpc	r25, r1
    1106:	09 f4       	brne	.+2      	; 0x110a <Port_Init+0x28c>
    1108:	67 c0       	rjmp	.+206    	; 0x11d8 <Port_Init+0x35a>
    110a:	87 c0       	rjmp	.+270    	; 0x121a <Port_Init+0x39c>
						{
						case PORT_PORTA:  PORTA_REG |= (u8)(ConfigPtr[i].Port_PinLevelValue<< Local_pin);break;
    110c:	ab e3       	ldi	r26, 0x3B	; 59
    110e:	b0 e0       	ldi	r27, 0x00	; 0
    1110:	eb e3       	ldi	r30, 0x3B	; 59
    1112:	f0 e0       	ldi	r31, 0x00	; 0
    1114:	40 81       	ld	r20, Z
    1116:	8b 81       	ldd	r24, Y+3	; 0x03
    1118:	88 2f       	mov	r24, r24
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	9c 01       	movw	r18, r24
    111e:	22 0f       	add	r18, r18
    1120:	33 1f       	adc	r19, r19
    1122:	22 0f       	add	r18, r18
    1124:	33 1f       	adc	r19, r19
    1126:	8c 81       	ldd	r24, Y+4	; 0x04
    1128:	9d 81       	ldd	r25, Y+5	; 0x05
    112a:	fc 01       	movw	r30, r24
    112c:	e2 0f       	add	r30, r18
    112e:	f3 1f       	adc	r31, r19
    1130:	81 81       	ldd	r24, Z+1	; 0x01
    1132:	28 2f       	mov	r18, r24
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	8a 81       	ldd	r24, Y+2	; 0x02
    1138:	88 2f       	mov	r24, r24
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	b9 01       	movw	r22, r18
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <Port_Init+0x2c6>
    1140:	66 0f       	add	r22, r22
    1142:	77 1f       	adc	r23, r23
    1144:	8a 95       	dec	r24
    1146:	e2 f7       	brpl	.-8      	; 0x1140 <Port_Init+0x2c2>
    1148:	cb 01       	movw	r24, r22
    114a:	84 2b       	or	r24, r20
    114c:	8c 93       	st	X, r24
    114e:	65 c0       	rjmp	.+202    	; 0x121a <Port_Init+0x39c>
						case PORT_PORTB:  PORTB_REG |= (u8)(ConfigPtr[i].Port_PinLevelValue<< Local_pin);break;
    1150:	a8 e3       	ldi	r26, 0x38	; 56
    1152:	b0 e0       	ldi	r27, 0x00	; 0
    1154:	e8 e3       	ldi	r30, 0x38	; 56
    1156:	f0 e0       	ldi	r31, 0x00	; 0
    1158:	40 81       	ld	r20, Z
    115a:	8b 81       	ldd	r24, Y+3	; 0x03
    115c:	88 2f       	mov	r24, r24
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	9c 01       	movw	r18, r24
    1162:	22 0f       	add	r18, r18
    1164:	33 1f       	adc	r19, r19
    1166:	22 0f       	add	r18, r18
    1168:	33 1f       	adc	r19, r19
    116a:	8c 81       	ldd	r24, Y+4	; 0x04
    116c:	9d 81       	ldd	r25, Y+5	; 0x05
    116e:	fc 01       	movw	r30, r24
    1170:	e2 0f       	add	r30, r18
    1172:	f3 1f       	adc	r31, r19
    1174:	81 81       	ldd	r24, Z+1	; 0x01
    1176:	28 2f       	mov	r18, r24
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	8a 81       	ldd	r24, Y+2	; 0x02
    117c:	88 2f       	mov	r24, r24
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	b9 01       	movw	r22, r18
    1182:	02 c0       	rjmp	.+4      	; 0x1188 <Port_Init+0x30a>
    1184:	66 0f       	add	r22, r22
    1186:	77 1f       	adc	r23, r23
    1188:	8a 95       	dec	r24
    118a:	e2 f7       	brpl	.-8      	; 0x1184 <Port_Init+0x306>
    118c:	cb 01       	movw	r24, r22
    118e:	84 2b       	or	r24, r20
    1190:	8c 93       	st	X, r24
    1192:	43 c0       	rjmp	.+134    	; 0x121a <Port_Init+0x39c>
						case PORT_PORTC:  PORTC_REG |= (u8)(ConfigPtr[i].Port_PinLevelValue<< Local_pin);break;
    1194:	a5 e3       	ldi	r26, 0x35	; 53
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	e5 e3       	ldi	r30, 0x35	; 53
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	40 81       	ld	r20, Z
    119e:	8b 81       	ldd	r24, Y+3	; 0x03
    11a0:	88 2f       	mov	r24, r24
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	9c 01       	movw	r18, r24
    11a6:	22 0f       	add	r18, r18
    11a8:	33 1f       	adc	r19, r19
    11aa:	22 0f       	add	r18, r18
    11ac:	33 1f       	adc	r19, r19
    11ae:	8c 81       	ldd	r24, Y+4	; 0x04
    11b0:	9d 81       	ldd	r25, Y+5	; 0x05
    11b2:	fc 01       	movw	r30, r24
    11b4:	e2 0f       	add	r30, r18
    11b6:	f3 1f       	adc	r31, r19
    11b8:	81 81       	ldd	r24, Z+1	; 0x01
    11ba:	28 2f       	mov	r18, r24
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	8a 81       	ldd	r24, Y+2	; 0x02
    11c0:	88 2f       	mov	r24, r24
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	b9 01       	movw	r22, r18
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <Port_Init+0x34e>
    11c8:	66 0f       	add	r22, r22
    11ca:	77 1f       	adc	r23, r23
    11cc:	8a 95       	dec	r24
    11ce:	e2 f7       	brpl	.-8      	; 0x11c8 <Port_Init+0x34a>
    11d0:	cb 01       	movw	r24, r22
    11d2:	84 2b       	or	r24, r20
    11d4:	8c 93       	st	X, r24
    11d6:	21 c0       	rjmp	.+66     	; 0x121a <Port_Init+0x39c>
						case PORT_PORTD:  PORTD_REG |= (u8)(ConfigPtr[i].Port_PinLevelValue<< Local_pin);break;
    11d8:	a2 e3       	ldi	r26, 0x32	; 50
    11da:	b0 e0       	ldi	r27, 0x00	; 0
    11dc:	e2 e3       	ldi	r30, 0x32	; 50
    11de:	f0 e0       	ldi	r31, 0x00	; 0
    11e0:	40 81       	ld	r20, Z
    11e2:	8b 81       	ldd	r24, Y+3	; 0x03
    11e4:	88 2f       	mov	r24, r24
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	9c 01       	movw	r18, r24
    11ea:	22 0f       	add	r18, r18
    11ec:	33 1f       	adc	r19, r19
    11ee:	22 0f       	add	r18, r18
    11f0:	33 1f       	adc	r19, r19
    11f2:	8c 81       	ldd	r24, Y+4	; 0x04
    11f4:	9d 81       	ldd	r25, Y+5	; 0x05
    11f6:	fc 01       	movw	r30, r24
    11f8:	e2 0f       	add	r30, r18
    11fa:	f3 1f       	adc	r31, r19
    11fc:	81 81       	ldd	r24, Z+1	; 0x01
    11fe:	28 2f       	mov	r18, r24
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	8a 81       	ldd	r24, Y+2	; 0x02
    1204:	88 2f       	mov	r24, r24
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	b9 01       	movw	r22, r18
    120a:	02 c0       	rjmp	.+4      	; 0x1210 <Port_Init+0x392>
    120c:	66 0f       	add	r22, r22
    120e:	77 1f       	adc	r23, r23
    1210:	8a 95       	dec	r24
    1212:	e2 f7       	brpl	.-8      	; 0x120c <Port_Init+0x38e>
    1214:	cb 01       	movw	r24, r22
    1216:	84 2b       	or	r24, r20
    1218:	8c 93       	st	X, r24

						}
						// step 3 : config Pin Internal Attach
						if(ConfigPtr[i].Port_PinInternalAttach == PORT_PIN_IN_ATTATCH_PULLUP)
    121a:	8b 81       	ldd	r24, Y+3	; 0x03
    121c:	88 2f       	mov	r24, r24
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	9c 01       	movw	r18, r24
    1222:	22 0f       	add	r18, r18
    1224:	33 1f       	adc	r19, r19
    1226:	22 0f       	add	r18, r18
    1228:	33 1f       	adc	r19, r19
    122a:	8c 81       	ldd	r24, Y+4	; 0x04
    122c:	9d 81       	ldd	r25, Y+5	; 0x05
    122e:	fc 01       	movw	r30, r24
    1230:	e2 0f       	add	r30, r18
    1232:	f3 1f       	adc	r31, r19
    1234:	83 81       	ldd	r24, Z+3	; 0x03
    1236:	88 23       	and	r24, r24
    1238:	09 f0       	breq	.+2      	; 0x123c <Port_Init+0x3be>
    123a:	6b c0       	rjmp	.+214    	; 0x1312 <Port_Init+0x494>
						{
							switch(Local_port)
    123c:	89 81       	ldd	r24, Y+1	; 0x01
    123e:	28 2f       	mov	r18, r24
    1240:	30 e0       	ldi	r19, 0x00	; 0
    1242:	3f 83       	std	Y+7, r19	; 0x07
    1244:	2e 83       	std	Y+6, r18	; 0x06
    1246:	6e 81       	ldd	r22, Y+6	; 0x06
    1248:	7f 81       	ldd	r23, Y+7	; 0x07
    124a:	62 30       	cpi	r22, 0x02	; 2
    124c:	71 05       	cpc	r23, r1
    124e:	49 f1       	breq	.+82     	; 0x12a2 <Port_Init+0x424>
    1250:	8e 81       	ldd	r24, Y+6	; 0x06
    1252:	9f 81       	ldd	r25, Y+7	; 0x07
    1254:	83 30       	cpi	r24, 0x03	; 3
    1256:	91 05       	cpc	r25, r1
    1258:	34 f4       	brge	.+12     	; 0x1266 <Port_Init+0x3e8>
    125a:	2e 81       	ldd	r18, Y+6	; 0x06
    125c:	3f 81       	ldd	r19, Y+7	; 0x07
    125e:	21 30       	cpi	r18, 0x01	; 1
    1260:	31 05       	cpc	r19, r1
    1262:	61 f0       	breq	.+24     	; 0x127c <Port_Init+0x3fe>
    1264:	56 c0       	rjmp	.+172    	; 0x1312 <Port_Init+0x494>
    1266:	6e 81       	ldd	r22, Y+6	; 0x06
    1268:	7f 81       	ldd	r23, Y+7	; 0x07
    126a:	63 30       	cpi	r22, 0x03	; 3
    126c:	71 05       	cpc	r23, r1
    126e:	61 f1       	breq	.+88     	; 0x12c8 <Port_Init+0x44a>
    1270:	8e 81       	ldd	r24, Y+6	; 0x06
    1272:	9f 81       	ldd	r25, Y+7	; 0x07
    1274:	84 30       	cpi	r24, 0x04	; 4
    1276:	91 05       	cpc	r25, r1
    1278:	d1 f1       	breq	.+116    	; 0x12ee <Port_Init+0x470>
    127a:	4b c0       	rjmp	.+150    	; 0x1312 <Port_Init+0x494>
							{
							case PORT_PORTA:PORTA_REG |= (u8)(1<< Local_pin);break;
    127c:	ab e3       	ldi	r26, 0x3B	; 59
    127e:	b0 e0       	ldi	r27, 0x00	; 0
    1280:	eb e3       	ldi	r30, 0x3B	; 59
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	40 81       	ld	r20, Z
    1286:	8a 81       	ldd	r24, Y+2	; 0x02
    1288:	28 2f       	mov	r18, r24
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	02 2e       	mov	r0, r18
    1292:	02 c0       	rjmp	.+4      	; 0x1298 <Port_Init+0x41a>
    1294:	88 0f       	add	r24, r24
    1296:	99 1f       	adc	r25, r25
    1298:	0a 94       	dec	r0
    129a:	e2 f7       	brpl	.-8      	; 0x1294 <Port_Init+0x416>
    129c:	84 2b       	or	r24, r20
    129e:	8c 93       	st	X, r24
    12a0:	38 c0       	rjmp	.+112    	; 0x1312 <Port_Init+0x494>
							case PORT_PORTB:PORTB_REG |= (u8)(1<< Local_pin);break;
    12a2:	a8 e3       	ldi	r26, 0x38	; 56
    12a4:	b0 e0       	ldi	r27, 0x00	; 0
    12a6:	e8 e3       	ldi	r30, 0x38	; 56
    12a8:	f0 e0       	ldi	r31, 0x00	; 0
    12aa:	40 81       	ld	r20, Z
    12ac:	8a 81       	ldd	r24, Y+2	; 0x02
    12ae:	28 2f       	mov	r18, r24
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	02 2e       	mov	r0, r18
    12b8:	02 c0       	rjmp	.+4      	; 0x12be <Port_Init+0x440>
    12ba:	88 0f       	add	r24, r24
    12bc:	99 1f       	adc	r25, r25
    12be:	0a 94       	dec	r0
    12c0:	e2 f7       	brpl	.-8      	; 0x12ba <Port_Init+0x43c>
    12c2:	84 2b       	or	r24, r20
    12c4:	8c 93       	st	X, r24
    12c6:	25 c0       	rjmp	.+74     	; 0x1312 <Port_Init+0x494>
							case PORT_PORTC:PORTC_REG |= (u8)(1<< Local_pin);break;
    12c8:	a5 e3       	ldi	r26, 0x35	; 53
    12ca:	b0 e0       	ldi	r27, 0x00	; 0
    12cc:	e5 e3       	ldi	r30, 0x35	; 53
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	40 81       	ld	r20, Z
    12d2:	8a 81       	ldd	r24, Y+2	; 0x02
    12d4:	28 2f       	mov	r18, r24
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	81 e0       	ldi	r24, 0x01	; 1
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	02 2e       	mov	r0, r18
    12de:	02 c0       	rjmp	.+4      	; 0x12e4 <Port_Init+0x466>
    12e0:	88 0f       	add	r24, r24
    12e2:	99 1f       	adc	r25, r25
    12e4:	0a 94       	dec	r0
    12e6:	e2 f7       	brpl	.-8      	; 0x12e0 <Port_Init+0x462>
    12e8:	84 2b       	or	r24, r20
    12ea:	8c 93       	st	X, r24
    12ec:	12 c0       	rjmp	.+36     	; 0x1312 <Port_Init+0x494>
							case PORT_PORTD:PORTD_REG |= (u8)(1<< Local_pin);break;
    12ee:	a2 e3       	ldi	r26, 0x32	; 50
    12f0:	b0 e0       	ldi	r27, 0x00	; 0
    12f2:	e2 e3       	ldi	r30, 0x32	; 50
    12f4:	f0 e0       	ldi	r31, 0x00	; 0
    12f6:	40 81       	ld	r20, Z
    12f8:	8a 81       	ldd	r24, Y+2	; 0x02
    12fa:	28 2f       	mov	r18, r24
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	02 2e       	mov	r0, r18
    1304:	02 c0       	rjmp	.+4      	; 0x130a <Port_Init+0x48c>
    1306:	88 0f       	add	r24, r24
    1308:	99 1f       	adc	r25, r25
    130a:	0a 94       	dec	r0
    130c:	e2 f7       	brpl	.-8      	; 0x1306 <Port_Init+0x488>
    130e:	84 2b       	or	r24, r20
    1310:	8c 93       	st	X, r24
		else
		{
			u8 i ;
			u8 Local_pin;
			u8 Local_port;
			for(i= 0;i<PORT_PINS_CONFIG_ARR_SIZE;i++)
    1312:	8b 81       	ldd	r24, Y+3	; 0x03
    1314:	8f 5f       	subi	r24, 0xFF	; 255
    1316:	8b 83       	std	Y+3, r24	; 0x03
    1318:	8b 81       	ldd	r24, Y+3	; 0x03
    131a:	8c 31       	cpi	r24, 0x1C	; 28
    131c:	08 f4       	brcc	.+2      	; 0x1320 <Port_Init+0x4a2>
    131e:	c2 cd       	rjmp	.-1148   	; 0xea4 <Port_Init+0x26>
					//report error
				}

		    }//for
		}//else
}
    1320:	2b 96       	adiw	r28, 0x0b	; 11
    1322:	0f b6       	in	r0, 0x3f	; 63
    1324:	f8 94       	cli
    1326:	de bf       	out	0x3e, r29	; 62
    1328:	0f be       	out	0x3f, r0	; 63
    132a:	cd bf       	out	0x3d, r28	; 61
    132c:	cf 91       	pop	r28
    132e:	df 91       	pop	r29
    1330:	08 95       	ret

00001332 <M_GID_void_Enable>:

#include "Mcu_HW.h"
#include "GID_int.h"

void M_GID_void_Enable(void)
{
    1332:	df 93       	push	r29
    1334:	cf 93       	push	r28
    1336:	cd b7       	in	r28, 0x3d	; 61
    1338:	de b7       	in	r29, 0x3e	; 62
	SREG_REG |= 0x80;
    133a:	af e5       	ldi	r26, 0x5F	; 95
    133c:	b0 e0       	ldi	r27, 0x00	; 0
    133e:	ef e5       	ldi	r30, 0x5F	; 95
    1340:	f0 e0       	ldi	r31, 0x00	; 0
    1342:	80 81       	ld	r24, Z
    1344:	80 68       	ori	r24, 0x80	; 128
    1346:	8c 93       	st	X, r24
}
    1348:	cf 91       	pop	r28
    134a:	df 91       	pop	r29
    134c:	08 95       	ret

0000134e <M_GID_void_Disable>:
void M_GID_void_Disable(void)
{
    134e:	df 93       	push	r29
    1350:	cf 93       	push	r28
    1352:	cd b7       	in	r28, 0x3d	; 61
    1354:	de b7       	in	r29, 0x3e	; 62
	SREG_REG &= 0x7F;
    1356:	af e5       	ldi	r26, 0x5F	; 95
    1358:	b0 e0       	ldi	r27, 0x00	; 0
    135a:	ef e5       	ldi	r30, 0x5F	; 95
    135c:	f0 e0       	ldi	r31, 0x00	; 0
    135e:	80 81       	ld	r24, Z
    1360:	8f 77       	andi	r24, 0x7F	; 127
    1362:	8c 93       	st	X, r24
}
    1364:	cf 91       	pop	r28
    1366:	df 91       	pop	r29
    1368:	08 95       	ret

0000136a <M_EXTI_en_enableInt>:
static void (*EXTRI_CallBack) (void)= NULL;

extern u8 BLUE_State;

void M_EXTI_en_enableInt(const EXTI_Config * Config_Array)
{
    136a:	df 93       	push	r29
    136c:	cf 93       	push	r28
    136e:	cd b7       	in	r28, 0x3d	; 61
    1370:	de b7       	in	r29, 0x3e	; 62
    1372:	2c 97       	sbiw	r28, 0x0c	; 12
    1374:	0f b6       	in	r0, 0x3f	; 63
    1376:	f8 94       	cli
    1378:	de bf       	out	0x3e, r29	; 62
    137a:	0f be       	out	0x3f, r0	; 63
    137c:	cd bf       	out	0x3d, r28	; 61
    137e:	9c 83       	std	Y+4, r25	; 0x04
    1380:	8b 83       	std	Y+3, r24	; 0x03
	u8 EXTI_Counter;
	Error_Status EXTI_STATUS=NO_ERROR;
    1382:	82 e0       	ldi	r24, 0x02	; 2
    1384:	89 83       	std	Y+1, r24	; 0x01
	ENABLE_EXTI1;
    1386:	ab e5       	ldi	r26, 0x5B	; 91
    1388:	b0 e0       	ldi	r27, 0x00	; 0
    138a:	eb e5       	ldi	r30, 0x5B	; 91
    138c:	f0 e0       	ldi	r31, 0x00	; 0
    138e:	80 81       	ld	r24, Z
    1390:	80 68       	ori	r24, 0x80	; 128
    1392:	8c 93       	st	X, r24
//	SET_BIT(GICR_REG,7);
	SET_BIT(MCUCR_REG,3);CLR_BIT(MCUCR_REG,2);
    1394:	a5 e5       	ldi	r26, 0x55	; 85
    1396:	b0 e0       	ldi	r27, 0x00	; 0
    1398:	e5 e5       	ldi	r30, 0x55	; 85
    139a:	f0 e0       	ldi	r31, 0x00	; 0
    139c:	80 81       	ld	r24, Z
    139e:	88 60       	ori	r24, 0x08	; 8
    13a0:	8c 93       	st	X, r24
    13a2:	a5 e5       	ldi	r26, 0x55	; 85
    13a4:	b0 e0       	ldi	r27, 0x00	; 0
    13a6:	e5 e5       	ldi	r30, 0x55	; 85
    13a8:	f0 e0       	ldi	r31, 0x00	; 0
    13aa:	80 81       	ld	r24, Z
    13ac:	8b 7f       	andi	r24, 0xFB	; 251
    13ae:	8c 93       	st	X, r24
//	H_LED_void_toggle(LED_RED);

		switch(Config_Array[1].EXTI_ID)
    13b0:	8b 81       	ldd	r24, Y+3	; 0x03
    13b2:	9c 81       	ldd	r25, Y+4	; 0x04
    13b4:	fc 01       	movw	r30, r24
    13b6:	32 96       	adiw	r30, 0x02	; 2
    13b8:	80 81       	ld	r24, Z
    13ba:	28 2f       	mov	r18, r24
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	3c 87       	std	Y+12, r19	; 0x0c
    13c0:	2b 87       	std	Y+11, r18	; 0x0b
    13c2:	8b 85       	ldd	r24, Y+11	; 0x0b
    13c4:	9c 85       	ldd	r25, Y+12	; 0x0c
    13c6:	81 30       	cpi	r24, 0x01	; 1
    13c8:	91 05       	cpc	r25, r1
    13ca:	09 f4       	brne	.+2      	; 0x13ce <M_EXTI_en_enableInt+0x64>
    13cc:	7a c0       	rjmp	.+244    	; 0x14c2 <M_EXTI_en_enableInt+0x158>
    13ce:	2b 85       	ldd	r18, Y+11	; 0x0b
    13d0:	3c 85       	ldd	r19, Y+12	; 0x0c
    13d2:	22 30       	cpi	r18, 0x02	; 2
    13d4:	31 05       	cpc	r19, r1
    13d6:	09 f4       	brne	.+2      	; 0x13da <M_EXTI_en_enableInt+0x70>
    13d8:	dc c0       	rjmp	.+440    	; 0x1592 <M_EXTI_en_enableInt+0x228>
    13da:	8b 85       	ldd	r24, Y+11	; 0x0b
    13dc:	9c 85       	ldd	r25, Y+12	; 0x0c
    13de:	00 97       	sbiw	r24, 0x00	; 0
    13e0:	09 f0       	breq	.+2      	; 0x13e4 <M_EXTI_en_enableInt+0x7a>
    13e2:	0a c1       	rjmp	.+532    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
		{
		case EXTI0:
			ENABLE_EXTI0;			//Change
    13e4:	ab e5       	ldi	r26, 0x5B	; 91
    13e6:	b0 e0       	ldi	r27, 0x00	; 0
    13e8:	eb e5       	ldi	r30, 0x5B	; 91
    13ea:	f0 e0       	ldi	r31, 0x00	; 0
    13ec:	80 81       	ld	r24, Z
    13ee:	80 64       	ori	r24, 0x40	; 64
    13f0:	8c 93       	st	X, r24
			switch(Config_Array[EXTI_Counter].SC)
    13f2:	8a 81       	ldd	r24, Y+2	; 0x02
    13f4:	88 2f       	mov	r24, r24
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	9c 01       	movw	r18, r24
    13fa:	22 0f       	add	r18, r18
    13fc:	33 1f       	adc	r19, r19
    13fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1400:	9c 81       	ldd	r25, Y+4	; 0x04
    1402:	fc 01       	movw	r30, r24
    1404:	e2 0f       	add	r30, r18
    1406:	f3 1f       	adc	r31, r19
    1408:	81 81       	ldd	r24, Z+1	; 0x01
    140a:	28 2f       	mov	r18, r24
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	3a 87       	std	Y+10, r19	; 0x0a
    1410:	29 87       	std	Y+9, r18	; 0x09
    1412:	89 85       	ldd	r24, Y+9	; 0x09
    1414:	9a 85       	ldd	r25, Y+10	; 0x0a
    1416:	81 30       	cpi	r24, 0x01	; 1
    1418:	91 05       	cpc	r25, r1
    141a:	21 f1       	breq	.+72     	; 0x1464 <M_EXTI_en_enableInt+0xfa>
    141c:	29 85       	ldd	r18, Y+9	; 0x09
    141e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1420:	22 30       	cpi	r18, 0x02	; 2
    1422:	31 05       	cpc	r19, r1
    1424:	2c f4       	brge	.+10     	; 0x1430 <M_EXTI_en_enableInt+0xc6>
    1426:	89 85       	ldd	r24, Y+9	; 0x09
    1428:	9a 85       	ldd	r25, Y+10	; 0x0a
    142a:	00 97       	sbiw	r24, 0x00	; 0
    142c:	61 f0       	breq	.+24     	; 0x1446 <M_EXTI_en_enableInt+0xdc>
    142e:	47 c0       	rjmp	.+142    	; 0x14be <M_EXTI_en_enableInt+0x154>
    1430:	29 85       	ldd	r18, Y+9	; 0x09
    1432:	3a 85       	ldd	r19, Y+10	; 0x0a
    1434:	22 30       	cpi	r18, 0x02	; 2
    1436:	31 05       	cpc	r19, r1
    1438:	21 f1       	breq	.+72     	; 0x1482 <M_EXTI_en_enableInt+0x118>
    143a:	89 85       	ldd	r24, Y+9	; 0x09
    143c:	9a 85       	ldd	r25, Y+10	; 0x0a
    143e:	83 30       	cpi	r24, 0x03	; 3
    1440:	91 05       	cpc	r25, r1
    1442:	71 f1       	breq	.+92     	; 0x14a0 <M_EXTI_en_enableInt+0x136>
    1444:	3c c0       	rjmp	.+120    	; 0x14be <M_EXTI_en_enableInt+0x154>
			{
			case LOW_LEVEL: CLR_BIT(MCUCR_REG,1);CLR_BIT(MCUCR_REG,0);break;
    1446:	a5 e5       	ldi	r26, 0x55	; 85
    1448:	b0 e0       	ldi	r27, 0x00	; 0
    144a:	e5 e5       	ldi	r30, 0x55	; 85
    144c:	f0 e0       	ldi	r31, 0x00	; 0
    144e:	80 81       	ld	r24, Z
    1450:	8d 7f       	andi	r24, 0xFD	; 253
    1452:	8c 93       	st	X, r24
    1454:	a5 e5       	ldi	r26, 0x55	; 85
    1456:	b0 e0       	ldi	r27, 0x00	; 0
    1458:	e5 e5       	ldi	r30, 0x55	; 85
    145a:	f0 e0       	ldi	r31, 0x00	; 0
    145c:	80 81       	ld	r24, Z
    145e:	8e 7f       	andi	r24, 0xFE	; 254
    1460:	8c 93       	st	X, r24
    1462:	ca c0       	rjmp	.+404    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			case ANY_LOGIC: CLR_BIT(MCUCR_REG,1);SET_BIT(MCUCR_REG,0);break;
    1464:	a5 e5       	ldi	r26, 0x55	; 85
    1466:	b0 e0       	ldi	r27, 0x00	; 0
    1468:	e5 e5       	ldi	r30, 0x55	; 85
    146a:	f0 e0       	ldi	r31, 0x00	; 0
    146c:	80 81       	ld	r24, Z
    146e:	8d 7f       	andi	r24, 0xFD	; 253
    1470:	8c 93       	st	X, r24
    1472:	a5 e5       	ldi	r26, 0x55	; 85
    1474:	b0 e0       	ldi	r27, 0x00	; 0
    1476:	e5 e5       	ldi	r30, 0x55	; 85
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	80 81       	ld	r24, Z
    147c:	81 60       	ori	r24, 0x01	; 1
    147e:	8c 93       	st	X, r24
    1480:	bb c0       	rjmp	.+374    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			case FALLING_EDGE: SET_BIT(MCUCR_REG,1);CLR_BIT(MCUCR_REG,0);break;
    1482:	a5 e5       	ldi	r26, 0x55	; 85
    1484:	b0 e0       	ldi	r27, 0x00	; 0
    1486:	e5 e5       	ldi	r30, 0x55	; 85
    1488:	f0 e0       	ldi	r31, 0x00	; 0
    148a:	80 81       	ld	r24, Z
    148c:	82 60       	ori	r24, 0x02	; 2
    148e:	8c 93       	st	X, r24
    1490:	a5 e5       	ldi	r26, 0x55	; 85
    1492:	b0 e0       	ldi	r27, 0x00	; 0
    1494:	e5 e5       	ldi	r30, 0x55	; 85
    1496:	f0 e0       	ldi	r31, 0x00	; 0
    1498:	80 81       	ld	r24, Z
    149a:	8e 7f       	andi	r24, 0xFE	; 254
    149c:	8c 93       	st	X, r24
    149e:	ac c0       	rjmp	.+344    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			case RISING_EDGE: SET_BIT(MCUCR_REG,1);SET_BIT(MCUCR_REG,0);break;
    14a0:	a5 e5       	ldi	r26, 0x55	; 85
    14a2:	b0 e0       	ldi	r27, 0x00	; 0
    14a4:	e5 e5       	ldi	r30, 0x55	; 85
    14a6:	f0 e0       	ldi	r31, 0x00	; 0
    14a8:	80 81       	ld	r24, Z
    14aa:	82 60       	ori	r24, 0x02	; 2
    14ac:	8c 93       	st	X, r24
    14ae:	a5 e5       	ldi	r26, 0x55	; 85
    14b0:	b0 e0       	ldi	r27, 0x00	; 0
    14b2:	e5 e5       	ldi	r30, 0x55	; 85
    14b4:	f0 e0       	ldi	r31, 0x00	; 0
    14b6:	80 81       	ld	r24, Z
    14b8:	81 60       	ori	r24, 0x01	; 1
    14ba:	8c 93       	st	X, r24
    14bc:	9d c0       	rjmp	.+314    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			default: EXTI_STATUS=OUT_OF_RANGE_VALUE;break;
    14be:	19 82       	std	Y+1, r1	; 0x01
    14c0:	9b c0       	rjmp	.+310    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			};break;

		case EXTI1:

			ENABLE_EXTI1;
    14c2:	ab e5       	ldi	r26, 0x5B	; 91
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	eb e5       	ldi	r30, 0x5B	; 91
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	80 81       	ld	r24, Z
    14cc:	80 68       	ori	r24, 0x80	; 128
    14ce:	8c 93       	st	X, r24
			switch(Config_Array[1].SC)
    14d0:	8b 81       	ldd	r24, Y+3	; 0x03
    14d2:	9c 81       	ldd	r25, Y+4	; 0x04
    14d4:	fc 01       	movw	r30, r24
    14d6:	32 96       	adiw	r30, 0x02	; 2
    14d8:	81 81       	ldd	r24, Z+1	; 0x01
    14da:	28 2f       	mov	r18, r24
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	38 87       	std	Y+8, r19	; 0x08
    14e0:	2f 83       	std	Y+7, r18	; 0x07
    14e2:	8f 81       	ldd	r24, Y+7	; 0x07
    14e4:	98 85       	ldd	r25, Y+8	; 0x08
    14e6:	81 30       	cpi	r24, 0x01	; 1
    14e8:	91 05       	cpc	r25, r1
    14ea:	21 f1       	breq	.+72     	; 0x1534 <M_EXTI_en_enableInt+0x1ca>
    14ec:	2f 81       	ldd	r18, Y+7	; 0x07
    14ee:	38 85       	ldd	r19, Y+8	; 0x08
    14f0:	22 30       	cpi	r18, 0x02	; 2
    14f2:	31 05       	cpc	r19, r1
    14f4:	2c f4       	brge	.+10     	; 0x1500 <M_EXTI_en_enableInt+0x196>
    14f6:	8f 81       	ldd	r24, Y+7	; 0x07
    14f8:	98 85       	ldd	r25, Y+8	; 0x08
    14fa:	00 97       	sbiw	r24, 0x00	; 0
    14fc:	61 f0       	breq	.+24     	; 0x1516 <M_EXTI_en_enableInt+0x1ac>
    14fe:	47 c0       	rjmp	.+142    	; 0x158e <M_EXTI_en_enableInt+0x224>
    1500:	2f 81       	ldd	r18, Y+7	; 0x07
    1502:	38 85       	ldd	r19, Y+8	; 0x08
    1504:	22 30       	cpi	r18, 0x02	; 2
    1506:	31 05       	cpc	r19, r1
    1508:	21 f1       	breq	.+72     	; 0x1552 <M_EXTI_en_enableInt+0x1e8>
    150a:	8f 81       	ldd	r24, Y+7	; 0x07
    150c:	98 85       	ldd	r25, Y+8	; 0x08
    150e:	83 30       	cpi	r24, 0x03	; 3
    1510:	91 05       	cpc	r25, r1
    1512:	71 f1       	breq	.+92     	; 0x1570 <M_EXTI_en_enableInt+0x206>
    1514:	3c c0       	rjmp	.+120    	; 0x158e <M_EXTI_en_enableInt+0x224>
			{
			case LOW_LEVEL: CLR_BIT(MCUCR_REG,3);CLR_BIT(MCUCR_REG,2);break;
    1516:	a5 e5       	ldi	r26, 0x55	; 85
    1518:	b0 e0       	ldi	r27, 0x00	; 0
    151a:	e5 e5       	ldi	r30, 0x55	; 85
    151c:	f0 e0       	ldi	r31, 0x00	; 0
    151e:	80 81       	ld	r24, Z
    1520:	87 7f       	andi	r24, 0xF7	; 247
    1522:	8c 93       	st	X, r24
    1524:	a5 e5       	ldi	r26, 0x55	; 85
    1526:	b0 e0       	ldi	r27, 0x00	; 0
    1528:	e5 e5       	ldi	r30, 0x55	; 85
    152a:	f0 e0       	ldi	r31, 0x00	; 0
    152c:	80 81       	ld	r24, Z
    152e:	8b 7f       	andi	r24, 0xFB	; 251
    1530:	8c 93       	st	X, r24
    1532:	62 c0       	rjmp	.+196    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			case ANY_LOGIC: CLR_BIT(MCUCR_REG,3);SET_BIT(MCUCR_REG,2);break;
    1534:	a5 e5       	ldi	r26, 0x55	; 85
    1536:	b0 e0       	ldi	r27, 0x00	; 0
    1538:	e5 e5       	ldi	r30, 0x55	; 85
    153a:	f0 e0       	ldi	r31, 0x00	; 0
    153c:	80 81       	ld	r24, Z
    153e:	87 7f       	andi	r24, 0xF7	; 247
    1540:	8c 93       	st	X, r24
    1542:	a5 e5       	ldi	r26, 0x55	; 85
    1544:	b0 e0       	ldi	r27, 0x00	; 0
    1546:	e5 e5       	ldi	r30, 0x55	; 85
    1548:	f0 e0       	ldi	r31, 0x00	; 0
    154a:	80 81       	ld	r24, Z
    154c:	84 60       	ori	r24, 0x04	; 4
    154e:	8c 93       	st	X, r24
    1550:	53 c0       	rjmp	.+166    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			case FALLING_EDGE: SET_BIT(MCUCR_REG,3);CLR_BIT(MCUCR_REG,2);break;
    1552:	a5 e5       	ldi	r26, 0x55	; 85
    1554:	b0 e0       	ldi	r27, 0x00	; 0
    1556:	e5 e5       	ldi	r30, 0x55	; 85
    1558:	f0 e0       	ldi	r31, 0x00	; 0
    155a:	80 81       	ld	r24, Z
    155c:	88 60       	ori	r24, 0x08	; 8
    155e:	8c 93       	st	X, r24
    1560:	a5 e5       	ldi	r26, 0x55	; 85
    1562:	b0 e0       	ldi	r27, 0x00	; 0
    1564:	e5 e5       	ldi	r30, 0x55	; 85
    1566:	f0 e0       	ldi	r31, 0x00	; 0
    1568:	80 81       	ld	r24, Z
    156a:	8b 7f       	andi	r24, 0xFB	; 251
    156c:	8c 93       	st	X, r24
    156e:	44 c0       	rjmp	.+136    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			case RISING_EDGE: SET_BIT(MCUCR_REG,3);SET_BIT(MCUCR_REG,2);break;
    1570:	a5 e5       	ldi	r26, 0x55	; 85
    1572:	b0 e0       	ldi	r27, 0x00	; 0
    1574:	e5 e5       	ldi	r30, 0x55	; 85
    1576:	f0 e0       	ldi	r31, 0x00	; 0
    1578:	80 81       	ld	r24, Z
    157a:	88 60       	ori	r24, 0x08	; 8
    157c:	8c 93       	st	X, r24
    157e:	a5 e5       	ldi	r26, 0x55	; 85
    1580:	b0 e0       	ldi	r27, 0x00	; 0
    1582:	e5 e5       	ldi	r30, 0x55	; 85
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	80 81       	ld	r24, Z
    1588:	84 60       	ori	r24, 0x04	; 4
    158a:	8c 93       	st	X, r24
    158c:	35 c0       	rjmp	.+106    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			default: EXTI_STATUS=OUT_OF_RANGE_VALUE;break;
    158e:	19 82       	std	Y+1, r1	; 0x01
    1590:	33 c0       	rjmp	.+102    	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			};break;

		case EXTI2:
			ENABLE_EXTI2;
    1592:	ab e5       	ldi	r26, 0x5B	; 91
    1594:	b0 e0       	ldi	r27, 0x00	; 0
    1596:	eb e5       	ldi	r30, 0x5B	; 91
    1598:	f0 e0       	ldi	r31, 0x00	; 0
    159a:	80 81       	ld	r24, Z
    159c:	80 62       	ori	r24, 0x20	; 32
    159e:	8c 93       	st	X, r24
			switch(Config_Array[EXTI_Counter].SC)
    15a0:	8a 81       	ldd	r24, Y+2	; 0x02
    15a2:	88 2f       	mov	r24, r24
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	9c 01       	movw	r18, r24
    15a8:	22 0f       	add	r18, r18
    15aa:	33 1f       	adc	r19, r19
    15ac:	8b 81       	ldd	r24, Y+3	; 0x03
    15ae:	9c 81       	ldd	r25, Y+4	; 0x04
    15b0:	fc 01       	movw	r30, r24
    15b2:	e2 0f       	add	r30, r18
    15b4:	f3 1f       	adc	r31, r19
    15b6:	81 81       	ldd	r24, Z+1	; 0x01
    15b8:	28 2f       	mov	r18, r24
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	3e 83       	std	Y+6, r19	; 0x06
    15be:	2d 83       	std	Y+5, r18	; 0x05
    15c0:	8d 81       	ldd	r24, Y+5	; 0x05
    15c2:	9e 81       	ldd	r25, Y+6	; 0x06
    15c4:	82 30       	cpi	r24, 0x02	; 2
    15c6:	91 05       	cpc	r25, r1
    15c8:	31 f0       	breq	.+12     	; 0x15d6 <M_EXTI_en_enableInt+0x26c>
    15ca:	2d 81       	ldd	r18, Y+5	; 0x05
    15cc:	3e 81       	ldd	r19, Y+6	; 0x06
    15ce:	23 30       	cpi	r18, 0x03	; 3
    15d0:	31 05       	cpc	r19, r1
    15d2:	49 f0       	breq	.+18     	; 0x15e6 <M_EXTI_en_enableInt+0x27c>
    15d4:	10 c0       	rjmp	.+32     	; 0x15f6 <M_EXTI_en_enableInt+0x28c>
			{
			case FALLING_EDGE: CLR_BIT(MCUCSR_REG,6);break;
    15d6:	a4 e5       	ldi	r26, 0x54	; 84
    15d8:	b0 e0       	ldi	r27, 0x00	; 0
    15da:	e4 e5       	ldi	r30, 0x54	; 84
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	80 81       	ld	r24, Z
    15e0:	8f 7b       	andi	r24, 0xBF	; 191
    15e2:	8c 93       	st	X, r24
    15e4:	09 c0       	rjmp	.+18     	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			case RISING_EDGE: SET_BIT(MCUCSR_REG,6);break;
    15e6:	a4 e5       	ldi	r26, 0x54	; 84
    15e8:	b0 e0       	ldi	r27, 0x00	; 0
    15ea:	e4 e5       	ldi	r30, 0x54	; 84
    15ec:	f0 e0       	ldi	r31, 0x00	; 0
    15ee:	80 81       	ld	r24, Z
    15f0:	80 64       	ori	r24, 0x40	; 64
    15f2:	8c 93       	st	X, r24
    15f4:	01 c0       	rjmp	.+2      	; 0x15f8 <M_EXTI_en_enableInt+0x28e>
			default: EXTI_STATUS=OUT_OF_RANGE_VALUE;break;
    15f6:	19 82       	std	Y+1, r1	; 0x01

		}

	//return EXT_INT_STATUS;

}
    15f8:	2c 96       	adiw	r28, 0x0c	; 12
    15fa:	0f b6       	in	r0, 0x3f	; 63
    15fc:	f8 94       	cli
    15fe:	de bf       	out	0x3e, r29	; 62
    1600:	0f be       	out	0x3f, r0	; 63
    1602:	cd bf       	out	0x3d, r28	; 61
    1604:	cf 91       	pop	r28
    1606:	df 91       	pop	r29
    1608:	08 95       	ret

0000160a <M_EXTI_en_disableInt>:



void M_EXTI_en_disableInt(EXTI_N EXTI_n)
{
    160a:	df 93       	push	r29
    160c:	cf 93       	push	r28
    160e:	00 d0       	rcall	.+0      	; 0x1610 <M_EXTI_en_disableInt+0x6>
    1610:	00 d0       	rcall	.+0      	; 0x1612 <M_EXTI_en_disableInt+0x8>
    1612:	cd b7       	in	r28, 0x3d	; 61
    1614:	de b7       	in	r29, 0x3e	; 62
    1616:	8a 83       	std	Y+2, r24	; 0x02
	Error_Status EXTI_STATUS=NO_ERROR;
    1618:	82 e0       	ldi	r24, 0x02	; 2
    161a:	89 83       	std	Y+1, r24	; 0x01
	switch(EXTI_n)
    161c:	8a 81       	ldd	r24, Y+2	; 0x02
    161e:	28 2f       	mov	r18, r24
    1620:	30 e0       	ldi	r19, 0x00	; 0
    1622:	3c 83       	std	Y+4, r19	; 0x04
    1624:	2b 83       	std	Y+3, r18	; 0x03
    1626:	8b 81       	ldd	r24, Y+3	; 0x03
    1628:	9c 81       	ldd	r25, Y+4	; 0x04
    162a:	81 30       	cpi	r24, 0x01	; 1
    162c:	91 05       	cpc	r25, r1
    162e:	89 f0       	breq	.+34     	; 0x1652 <M_EXTI_en_disableInt+0x48>
    1630:	2b 81       	ldd	r18, Y+3	; 0x03
    1632:	3c 81       	ldd	r19, Y+4	; 0x04
    1634:	22 30       	cpi	r18, 0x02	; 2
    1636:	31 05       	cpc	r19, r1
    1638:	a1 f0       	breq	.+40     	; 0x1662 <M_EXTI_en_disableInt+0x58>
    163a:	8b 81       	ldd	r24, Y+3	; 0x03
    163c:	9c 81       	ldd	r25, Y+4	; 0x04
    163e:	00 97       	sbiw	r24, 0x00	; 0
    1640:	c1 f4       	brne	.+48     	; 0x1672 <M_EXTI_en_disableInt+0x68>
	{
	case EXTI0:DISABLE_EXTI0;break;
    1642:	ab e5       	ldi	r26, 0x5B	; 91
    1644:	b0 e0       	ldi	r27, 0x00	; 0
    1646:	eb e5       	ldi	r30, 0x5B	; 91
    1648:	f0 e0       	ldi	r31, 0x00	; 0
    164a:	80 81       	ld	r24, Z
    164c:	8f 7b       	andi	r24, 0xBF	; 191
    164e:	8c 93       	st	X, r24
    1650:	11 c0       	rjmp	.+34     	; 0x1674 <M_EXTI_en_disableInt+0x6a>
	case EXTI1:DISABLE_EXTI1;break;
    1652:	ab e5       	ldi	r26, 0x5B	; 91
    1654:	b0 e0       	ldi	r27, 0x00	; 0
    1656:	eb e5       	ldi	r30, 0x5B	; 91
    1658:	f0 e0       	ldi	r31, 0x00	; 0
    165a:	80 81       	ld	r24, Z
    165c:	8f 77       	andi	r24, 0x7F	; 127
    165e:	8c 93       	st	X, r24
    1660:	09 c0       	rjmp	.+18     	; 0x1674 <M_EXTI_en_disableInt+0x6a>
	case EXTI2:DISABLE_EXTI2;break;
    1662:	ab e5       	ldi	r26, 0x5B	; 91
    1664:	b0 e0       	ldi	r27, 0x00	; 0
    1666:	eb e5       	ldi	r30, 0x5B	; 91
    1668:	f0 e0       	ldi	r31, 0x00	; 0
    166a:	80 81       	ld	r24, Z
    166c:	8f 7d       	andi	r24, 0xDF	; 223
    166e:	8c 93       	st	X, r24
    1670:	01 c0       	rjmp	.+2      	; 0x1674 <M_EXTI_en_disableInt+0x6a>
	default: EXTI_STATUS=OUT_OF_RANGE_VALUE;break;
    1672:	19 82       	std	Y+1, r1	; 0x01
	}

	//return EXT_INT_STATUS;
}
    1674:	0f 90       	pop	r0
    1676:	0f 90       	pop	r0
    1678:	0f 90       	pop	r0
    167a:	0f 90       	pop	r0
    167c:	cf 91       	pop	r28
    167e:	df 91       	pop	r29
    1680:	08 95       	ret

00001682 <M_EXTI_en_setCallBack>:

void M_EXTI_en_setCallBack(void (*ptr) (void))
{
    1682:	df 93       	push	r29
    1684:	cf 93       	push	r28
    1686:	00 d0       	rcall	.+0      	; 0x1688 <M_EXTI_en_setCallBack+0x6>
    1688:	cd b7       	in	r28, 0x3d	; 61
    168a:	de b7       	in	r29, 0x3e	; 62
    168c:	9a 83       	std	Y+2, r25	; 0x02
    168e:	89 83       	std	Y+1, r24	; 0x01
	//Error_Status EXT_INT_STATUS=NO_ERROR;

	if(ptr != NULL)
    1690:	89 81       	ldd	r24, Y+1	; 0x01
    1692:	9a 81       	ldd	r25, Y+2	; 0x02
    1694:	00 97       	sbiw	r24, 0x00	; 0
    1696:	31 f0       	breq	.+12     	; 0x16a4 <M_EXTI_en_setCallBack+0x22>
	{
		EXTRI_CallBack = ptr;
    1698:	89 81       	ldd	r24, Y+1	; 0x01
    169a:	9a 81       	ldd	r25, Y+2	; 0x02
    169c:	90 93 ee 01 	sts	0x01EE, r25
    16a0:	80 93 ed 01 	sts	0x01ED, r24
	}

}
    16a4:	0f 90       	pop	r0
    16a6:	0f 90       	pop	r0
    16a8:	cf 91       	pop	r28
    16aa:	df 91       	pop	r29
    16ac:	08 95       	ret

000016ae <__vector_2>:

void __vector_2 (void) __attribute__((signal,used));

void __vector_2 (void)
{
    16ae:	1f 92       	push	r1
    16b0:	0f 92       	push	r0
    16b2:	0f b6       	in	r0, 0x3f	; 63
    16b4:	0f 92       	push	r0
    16b6:	11 24       	eor	r1, r1
    16b8:	8f 93       	push	r24
    16ba:	df 93       	push	r29
    16bc:	cf 93       	push	r28
    16be:	cd b7       	in	r28, 0x3d	; 61
    16c0:	de b7       	in	r29, 0x3e	; 62
	BLUE_State=1;
    16c2:	81 e0       	ldi	r24, 0x01	; 1
    16c4:	80 93 e8 01 	sts	0x01E8, r24
//	EXTRI_CallBack();
}
    16c8:	cf 91       	pop	r28
    16ca:	df 91       	pop	r29
    16cc:	8f 91       	pop	r24
    16ce:	0f 90       	pop	r0
    16d0:	0f be       	out	0x3f, r0	; 63
    16d2:	0f 90       	pop	r0
    16d4:	1f 90       	pop	r1
    16d6:	18 95       	reti

000016d8 <M_Dio_en_getPinValue>:
  parameters (in)  :  channelId (pin)
  parameters (out) :  Non
  Return Value     : Dio_HIGH or DIO_LOW
******************************************/
Dio_LevelType  M_Dio_en_getPinValue(Dio_ChannelType ChannelId)
{
    16d8:	df 93       	push	r29
    16da:	cf 93       	push	r28
    16dc:	00 d0       	rcall	.+0      	; 0x16de <M_Dio_en_getPinValue+0x6>
    16de:	00 d0       	rcall	.+0      	; 0x16e0 <M_Dio_en_getPinValue+0x8>
    16e0:	00 d0       	rcall	.+0      	; 0x16e2 <M_Dio_en_getPinValue+0xa>
    16e2:	cd b7       	in	r28, 0x3d	; 61
    16e4:	de b7       	in	r29, 0x3e	; 62
    16e6:	8c 83       	std	Y+4, r24	; 0x04
	u8 pin = ChannelId % 10;
    16e8:	8c 81       	ldd	r24, Y+4	; 0x04
    16ea:	9a e0       	ldi	r25, 0x0A	; 10
    16ec:	69 2f       	mov	r22, r25
    16ee:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__udivmodqi4>
    16f2:	89 2f       	mov	r24, r25
    16f4:	8b 83       	std	Y+3, r24	; 0x03
	u8 port = ChannelId / 10;
    16f6:	8c 81       	ldd	r24, Y+4	; 0x04
    16f8:	9a e0       	ldi	r25, 0x0A	; 10
    16fa:	69 2f       	mov	r22, r25
    16fc:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__udivmodqi4>
    1700:	8a 83       	std	Y+2, r24	; 0x02

	Dio_LevelType Local_levelType;
	switch(port)
    1702:	8a 81       	ldd	r24, Y+2	; 0x02
    1704:	28 2f       	mov	r18, r24
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	3e 83       	std	Y+6, r19	; 0x06
    170a:	2d 83       	std	Y+5, r18	; 0x05
    170c:	4d 81       	ldd	r20, Y+5	; 0x05
    170e:	5e 81       	ldd	r21, Y+6	; 0x06
    1710:	42 30       	cpi	r20, 0x02	; 2
    1712:	51 05       	cpc	r21, r1
    1714:	41 f1       	breq	.+80     	; 0x1766 <M_Dio_en_getPinValue+0x8e>
    1716:	8d 81       	ldd	r24, Y+5	; 0x05
    1718:	9e 81       	ldd	r25, Y+6	; 0x06
    171a:	83 30       	cpi	r24, 0x03	; 3
    171c:	91 05       	cpc	r25, r1
    171e:	34 f4       	brge	.+12     	; 0x172c <M_Dio_en_getPinValue+0x54>
    1720:	2d 81       	ldd	r18, Y+5	; 0x05
    1722:	3e 81       	ldd	r19, Y+6	; 0x06
    1724:	21 30       	cpi	r18, 0x01	; 1
    1726:	31 05       	cpc	r19, r1
    1728:	61 f0       	breq	.+24     	; 0x1742 <M_Dio_en_getPinValue+0x6a>
    172a:	52 c0       	rjmp	.+164    	; 0x17d0 <M_Dio_en_getPinValue+0xf8>
    172c:	4d 81       	ldd	r20, Y+5	; 0x05
    172e:	5e 81       	ldd	r21, Y+6	; 0x06
    1730:	43 30       	cpi	r20, 0x03	; 3
    1732:	51 05       	cpc	r21, r1
    1734:	51 f1       	breq	.+84     	; 0x178a <M_Dio_en_getPinValue+0xb2>
    1736:	8d 81       	ldd	r24, Y+5	; 0x05
    1738:	9e 81       	ldd	r25, Y+6	; 0x06
    173a:	84 30       	cpi	r24, 0x04	; 4
    173c:	91 05       	cpc	r25, r1
    173e:	b9 f1       	breq	.+110    	; 0x17ae <M_Dio_en_getPinValue+0xd6>
    1740:	47 c0       	rjmp	.+142    	; 0x17d0 <M_Dio_en_getPinValue+0xf8>
	{
	case DIO_PORTA :Local_levelType = GET_BIT( PINA_REG,pin);break;
    1742:	e9 e3       	ldi	r30, 0x39	; 57
    1744:	f0 e0       	ldi	r31, 0x00	; 0
    1746:	80 81       	ld	r24, Z
    1748:	28 2f       	mov	r18, r24
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	8b 81       	ldd	r24, Y+3	; 0x03
    174e:	88 2f       	mov	r24, r24
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	a9 01       	movw	r20, r18
    1754:	02 c0       	rjmp	.+4      	; 0x175a <M_Dio_en_getPinValue+0x82>
    1756:	55 95       	asr	r21
    1758:	47 95       	ror	r20
    175a:	8a 95       	dec	r24
    175c:	e2 f7       	brpl	.-8      	; 0x1756 <M_Dio_en_getPinValue+0x7e>
    175e:	ca 01       	movw	r24, r20
    1760:	81 70       	andi	r24, 0x01	; 1
    1762:	89 83       	std	Y+1, r24	; 0x01
    1764:	35 c0       	rjmp	.+106    	; 0x17d0 <M_Dio_en_getPinValue+0xf8>
	case DIO_PORTB :Local_levelType = GET_BIT( PINB_REG,pin);break;
    1766:	e6 e3       	ldi	r30, 0x36	; 54
    1768:	f0 e0       	ldi	r31, 0x00	; 0
    176a:	80 81       	ld	r24, Z
    176c:	28 2f       	mov	r18, r24
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	8b 81       	ldd	r24, Y+3	; 0x03
    1772:	88 2f       	mov	r24, r24
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	a9 01       	movw	r20, r18
    1778:	02 c0       	rjmp	.+4      	; 0x177e <M_Dio_en_getPinValue+0xa6>
    177a:	55 95       	asr	r21
    177c:	47 95       	ror	r20
    177e:	8a 95       	dec	r24
    1780:	e2 f7       	brpl	.-8      	; 0x177a <M_Dio_en_getPinValue+0xa2>
    1782:	ca 01       	movw	r24, r20
    1784:	81 70       	andi	r24, 0x01	; 1
    1786:	89 83       	std	Y+1, r24	; 0x01
    1788:	23 c0       	rjmp	.+70     	; 0x17d0 <M_Dio_en_getPinValue+0xf8>
	case DIO_PORTC :Local_levelType = GET_BIT( PINC_REG,pin);break;
    178a:	e3 e3       	ldi	r30, 0x33	; 51
    178c:	f0 e0       	ldi	r31, 0x00	; 0
    178e:	80 81       	ld	r24, Z
    1790:	28 2f       	mov	r18, r24
    1792:	30 e0       	ldi	r19, 0x00	; 0
    1794:	8b 81       	ldd	r24, Y+3	; 0x03
    1796:	88 2f       	mov	r24, r24
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	a9 01       	movw	r20, r18
    179c:	02 c0       	rjmp	.+4      	; 0x17a2 <M_Dio_en_getPinValue+0xca>
    179e:	55 95       	asr	r21
    17a0:	47 95       	ror	r20
    17a2:	8a 95       	dec	r24
    17a4:	e2 f7       	brpl	.-8      	; 0x179e <M_Dio_en_getPinValue+0xc6>
    17a6:	ca 01       	movw	r24, r20
    17a8:	81 70       	andi	r24, 0x01	; 1
    17aa:	89 83       	std	Y+1, r24	; 0x01
    17ac:	11 c0       	rjmp	.+34     	; 0x17d0 <M_Dio_en_getPinValue+0xf8>
	case DIO_PORTD :Local_levelType = GET_BIT( PIND_REG,pin);break;
    17ae:	e0 e3       	ldi	r30, 0x30	; 48
    17b0:	f0 e0       	ldi	r31, 0x00	; 0
    17b2:	80 81       	ld	r24, Z
    17b4:	28 2f       	mov	r18, r24
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	8b 81       	ldd	r24, Y+3	; 0x03
    17ba:	88 2f       	mov	r24, r24
    17bc:	90 e0       	ldi	r25, 0x00	; 0
    17be:	a9 01       	movw	r20, r18
    17c0:	02 c0       	rjmp	.+4      	; 0x17c6 <M_Dio_en_getPinValue+0xee>
    17c2:	55 95       	asr	r21
    17c4:	47 95       	ror	r20
    17c6:	8a 95       	dec	r24
    17c8:	e2 f7       	brpl	.-8      	; 0x17c2 <M_Dio_en_getPinValue+0xea>
    17ca:	ca 01       	movw	r24, r20
    17cc:	81 70       	andi	r24, 0x01	; 1
    17ce:	89 83       	std	Y+1, r24	; 0x01
	}
    return Local_levelType ;
    17d0:	89 81       	ldd	r24, Y+1	; 0x01
}
    17d2:	26 96       	adiw	r28, 0x06	; 6
    17d4:	0f b6       	in	r0, 0x3f	; 63
    17d6:	f8 94       	cli
    17d8:	de bf       	out	0x3e, r29	; 62
    17da:	0f be       	out	0x3f, r0	; 63
    17dc:	cd bf       	out	0x3d, r28	; 61
    17de:	cf 91       	pop	r28
    17e0:	df 91       	pop	r29
    17e2:	08 95       	ret

000017e4 <M_Dio_void_setPinValue>:
  parameters (in)  :  channelId (pin) ,Level (Dio_HIGH or Dio_LOW)
  parameters (out) :  Non
  Return Value     : void
******************************************/
void M_Dio_void_setPinValue(Dio_ChannelType ChannelId,Dio_LevelType Level)
{
    17e4:	df 93       	push	r29
    17e6:	cf 93       	push	r28
    17e8:	cd b7       	in	r28, 0x3d	; 61
    17ea:	de b7       	in	r29, 0x3e	; 62
    17ec:	28 97       	sbiw	r28, 0x08	; 8
    17ee:	0f b6       	in	r0, 0x3f	; 63
    17f0:	f8 94       	cli
    17f2:	de bf       	out	0x3e, r29	; 62
    17f4:	0f be       	out	0x3f, r0	; 63
    17f6:	cd bf       	out	0x3d, r28	; 61
    17f8:	8b 83       	std	Y+3, r24	; 0x03
    17fa:	6c 83       	std	Y+4, r22	; 0x04
	u8 pin = ChannelId % 10;
    17fc:	8b 81       	ldd	r24, Y+3	; 0x03
    17fe:	9a e0       	ldi	r25, 0x0A	; 10
    1800:	69 2f       	mov	r22, r25
    1802:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__udivmodqi4>
    1806:	89 2f       	mov	r24, r25
    1808:	8a 83       	std	Y+2, r24	; 0x02
	u8 port = ChannelId / 10;
    180a:	8b 81       	ldd	r24, Y+3	; 0x03
    180c:	9a e0       	ldi	r25, 0x0A	; 10
    180e:	69 2f       	mov	r22, r25
    1810:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__udivmodqi4>
    1814:	89 83       	std	Y+1, r24	; 0x01

	if(Level == DIO_HIGH)
    1816:	8c 81       	ldd	r24, Y+4	; 0x04
    1818:	81 30       	cpi	r24, 0x01	; 1
    181a:	09 f0       	breq	.+2      	; 0x181e <M_Dio_void_setPinValue+0x3a>
    181c:	70 c0       	rjmp	.+224    	; 0x18fe <M_Dio_void_setPinValue+0x11a>
	{
		switch(port)
    181e:	89 81       	ldd	r24, Y+1	; 0x01
    1820:	28 2f       	mov	r18, r24
    1822:	30 e0       	ldi	r19, 0x00	; 0
    1824:	38 87       	std	Y+8, r19	; 0x08
    1826:	2f 83       	std	Y+7, r18	; 0x07
    1828:	8f 81       	ldd	r24, Y+7	; 0x07
    182a:	98 85       	ldd	r25, Y+8	; 0x08
    182c:	82 30       	cpi	r24, 0x02	; 2
    182e:	91 05       	cpc	r25, r1
    1830:	51 f1       	breq	.+84     	; 0x1886 <M_Dio_void_setPinValue+0xa2>
    1832:	2f 81       	ldd	r18, Y+7	; 0x07
    1834:	38 85       	ldd	r19, Y+8	; 0x08
    1836:	23 30       	cpi	r18, 0x03	; 3
    1838:	31 05       	cpc	r19, r1
    183a:	34 f4       	brge	.+12     	; 0x1848 <M_Dio_void_setPinValue+0x64>
    183c:	8f 81       	ldd	r24, Y+7	; 0x07
    183e:	98 85       	ldd	r25, Y+8	; 0x08
    1840:	81 30       	cpi	r24, 0x01	; 1
    1842:	91 05       	cpc	r25, r1
    1844:	61 f0       	breq	.+24     	; 0x185e <M_Dio_void_setPinValue+0x7a>
    1846:	d3 c0       	rjmp	.+422    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
    1848:	2f 81       	ldd	r18, Y+7	; 0x07
    184a:	38 85       	ldd	r19, Y+8	; 0x08
    184c:	23 30       	cpi	r18, 0x03	; 3
    184e:	31 05       	cpc	r19, r1
    1850:	71 f1       	breq	.+92     	; 0x18ae <M_Dio_void_setPinValue+0xca>
    1852:	8f 81       	ldd	r24, Y+7	; 0x07
    1854:	98 85       	ldd	r25, Y+8	; 0x08
    1856:	84 30       	cpi	r24, 0x04	; 4
    1858:	91 05       	cpc	r25, r1
    185a:	e9 f1       	breq	.+122    	; 0x18d6 <M_Dio_void_setPinValue+0xf2>
    185c:	c8 c0       	rjmp	.+400    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		{
		case DIO_PORTA : SET_BIT( PORTA_REG,pin);break;
    185e:	ab e3       	ldi	r26, 0x3B	; 59
    1860:	b0 e0       	ldi	r27, 0x00	; 0
    1862:	eb e3       	ldi	r30, 0x3B	; 59
    1864:	f0 e0       	ldi	r31, 0x00	; 0
    1866:	80 81       	ld	r24, Z
    1868:	48 2f       	mov	r20, r24
    186a:	8a 81       	ldd	r24, Y+2	; 0x02
    186c:	28 2f       	mov	r18, r24
    186e:	30 e0       	ldi	r19, 0x00	; 0
    1870:	81 e0       	ldi	r24, 0x01	; 1
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	02 2e       	mov	r0, r18
    1876:	02 c0       	rjmp	.+4      	; 0x187c <M_Dio_void_setPinValue+0x98>
    1878:	88 0f       	add	r24, r24
    187a:	99 1f       	adc	r25, r25
    187c:	0a 94       	dec	r0
    187e:	e2 f7       	brpl	.-8      	; 0x1878 <M_Dio_void_setPinValue+0x94>
    1880:	84 2b       	or	r24, r20
    1882:	8c 93       	st	X, r24
    1884:	b4 c0       	rjmp	.+360    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		case DIO_PORTB : SET_BIT( PORTB_REG,pin);break;
    1886:	a8 e3       	ldi	r26, 0x38	; 56
    1888:	b0 e0       	ldi	r27, 0x00	; 0
    188a:	e8 e3       	ldi	r30, 0x38	; 56
    188c:	f0 e0       	ldi	r31, 0x00	; 0
    188e:	80 81       	ld	r24, Z
    1890:	48 2f       	mov	r20, r24
    1892:	8a 81       	ldd	r24, Y+2	; 0x02
    1894:	28 2f       	mov	r18, r24
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	81 e0       	ldi	r24, 0x01	; 1
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	02 2e       	mov	r0, r18
    189e:	02 c0       	rjmp	.+4      	; 0x18a4 <M_Dio_void_setPinValue+0xc0>
    18a0:	88 0f       	add	r24, r24
    18a2:	99 1f       	adc	r25, r25
    18a4:	0a 94       	dec	r0
    18a6:	e2 f7       	brpl	.-8      	; 0x18a0 <M_Dio_void_setPinValue+0xbc>
    18a8:	84 2b       	or	r24, r20
    18aa:	8c 93       	st	X, r24
    18ac:	a0 c0       	rjmp	.+320    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		case DIO_PORTC : SET_BIT( PORTC_REG,pin);break;
    18ae:	a5 e3       	ldi	r26, 0x35	; 53
    18b0:	b0 e0       	ldi	r27, 0x00	; 0
    18b2:	e5 e3       	ldi	r30, 0x35	; 53
    18b4:	f0 e0       	ldi	r31, 0x00	; 0
    18b6:	80 81       	ld	r24, Z
    18b8:	48 2f       	mov	r20, r24
    18ba:	8a 81       	ldd	r24, Y+2	; 0x02
    18bc:	28 2f       	mov	r18, r24
    18be:	30 e0       	ldi	r19, 0x00	; 0
    18c0:	81 e0       	ldi	r24, 0x01	; 1
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	02 2e       	mov	r0, r18
    18c6:	02 c0       	rjmp	.+4      	; 0x18cc <M_Dio_void_setPinValue+0xe8>
    18c8:	88 0f       	add	r24, r24
    18ca:	99 1f       	adc	r25, r25
    18cc:	0a 94       	dec	r0
    18ce:	e2 f7       	brpl	.-8      	; 0x18c8 <M_Dio_void_setPinValue+0xe4>
    18d0:	84 2b       	or	r24, r20
    18d2:	8c 93       	st	X, r24
    18d4:	8c c0       	rjmp	.+280    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		case DIO_PORTD : SET_BIT( PORTD_REG,pin);break;
    18d6:	a2 e3       	ldi	r26, 0x32	; 50
    18d8:	b0 e0       	ldi	r27, 0x00	; 0
    18da:	e2 e3       	ldi	r30, 0x32	; 50
    18dc:	f0 e0       	ldi	r31, 0x00	; 0
    18de:	80 81       	ld	r24, Z
    18e0:	48 2f       	mov	r20, r24
    18e2:	8a 81       	ldd	r24, Y+2	; 0x02
    18e4:	28 2f       	mov	r18, r24
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	81 e0       	ldi	r24, 0x01	; 1
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	02 2e       	mov	r0, r18
    18ee:	02 c0       	rjmp	.+4      	; 0x18f4 <M_Dio_void_setPinValue+0x110>
    18f0:	88 0f       	add	r24, r24
    18f2:	99 1f       	adc	r25, r25
    18f4:	0a 94       	dec	r0
    18f6:	e2 f7       	brpl	.-8      	; 0x18f0 <M_Dio_void_setPinValue+0x10c>
    18f8:	84 2b       	or	r24, r20
    18fa:	8c 93       	st	X, r24
    18fc:	78 c0       	rjmp	.+240    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		}
	}
	else if (Level == DIO_LOW)
    18fe:	8c 81       	ldd	r24, Y+4	; 0x04
    1900:	88 23       	and	r24, r24
    1902:	09 f0       	breq	.+2      	; 0x1906 <M_Dio_void_setPinValue+0x122>
    1904:	74 c0       	rjmp	.+232    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
	{
		switch(port)
    1906:	89 81       	ldd	r24, Y+1	; 0x01
    1908:	28 2f       	mov	r18, r24
    190a:	30 e0       	ldi	r19, 0x00	; 0
    190c:	3e 83       	std	Y+6, r19	; 0x06
    190e:	2d 83       	std	Y+5, r18	; 0x05
    1910:	8d 81       	ldd	r24, Y+5	; 0x05
    1912:	9e 81       	ldd	r25, Y+6	; 0x06
    1914:	82 30       	cpi	r24, 0x02	; 2
    1916:	91 05       	cpc	r25, r1
    1918:	61 f1       	breq	.+88     	; 0x1972 <M_Dio_void_setPinValue+0x18e>
    191a:	2d 81       	ldd	r18, Y+5	; 0x05
    191c:	3e 81       	ldd	r19, Y+6	; 0x06
    191e:	23 30       	cpi	r18, 0x03	; 3
    1920:	31 05       	cpc	r19, r1
    1922:	34 f4       	brge	.+12     	; 0x1930 <M_Dio_void_setPinValue+0x14c>
    1924:	8d 81       	ldd	r24, Y+5	; 0x05
    1926:	9e 81       	ldd	r25, Y+6	; 0x06
    1928:	81 30       	cpi	r24, 0x01	; 1
    192a:	91 05       	cpc	r25, r1
    192c:	69 f0       	breq	.+26     	; 0x1948 <M_Dio_void_setPinValue+0x164>
    192e:	5f c0       	rjmp	.+190    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
    1930:	2d 81       	ldd	r18, Y+5	; 0x05
    1932:	3e 81       	ldd	r19, Y+6	; 0x06
    1934:	23 30       	cpi	r18, 0x03	; 3
    1936:	31 05       	cpc	r19, r1
    1938:	89 f1       	breq	.+98     	; 0x199c <M_Dio_void_setPinValue+0x1b8>
    193a:	8d 81       	ldd	r24, Y+5	; 0x05
    193c:	9e 81       	ldd	r25, Y+6	; 0x06
    193e:	84 30       	cpi	r24, 0x04	; 4
    1940:	91 05       	cpc	r25, r1
    1942:	09 f4       	brne	.+2      	; 0x1946 <M_Dio_void_setPinValue+0x162>
    1944:	40 c0       	rjmp	.+128    	; 0x19c6 <M_Dio_void_setPinValue+0x1e2>
    1946:	53 c0       	rjmp	.+166    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		{
		case DIO_PORTA : CLR_BIT( PORTA_REG,pin);break;
    1948:	ab e3       	ldi	r26, 0x3B	; 59
    194a:	b0 e0       	ldi	r27, 0x00	; 0
    194c:	eb e3       	ldi	r30, 0x3B	; 59
    194e:	f0 e0       	ldi	r31, 0x00	; 0
    1950:	80 81       	ld	r24, Z
    1952:	48 2f       	mov	r20, r24
    1954:	8a 81       	ldd	r24, Y+2	; 0x02
    1956:	28 2f       	mov	r18, r24
    1958:	30 e0       	ldi	r19, 0x00	; 0
    195a:	81 e0       	ldi	r24, 0x01	; 1
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	02 2e       	mov	r0, r18
    1960:	02 c0       	rjmp	.+4      	; 0x1966 <M_Dio_void_setPinValue+0x182>
    1962:	88 0f       	add	r24, r24
    1964:	99 1f       	adc	r25, r25
    1966:	0a 94       	dec	r0
    1968:	e2 f7       	brpl	.-8      	; 0x1962 <M_Dio_void_setPinValue+0x17e>
    196a:	80 95       	com	r24
    196c:	84 23       	and	r24, r20
    196e:	8c 93       	st	X, r24
    1970:	3e c0       	rjmp	.+124    	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		case DIO_PORTB : CLR_BIT( PORTB_REG,pin);break;
    1972:	a8 e3       	ldi	r26, 0x38	; 56
    1974:	b0 e0       	ldi	r27, 0x00	; 0
    1976:	e8 e3       	ldi	r30, 0x38	; 56
    1978:	f0 e0       	ldi	r31, 0x00	; 0
    197a:	80 81       	ld	r24, Z
    197c:	48 2f       	mov	r20, r24
    197e:	8a 81       	ldd	r24, Y+2	; 0x02
    1980:	28 2f       	mov	r18, r24
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	81 e0       	ldi	r24, 0x01	; 1
    1986:	90 e0       	ldi	r25, 0x00	; 0
    1988:	02 2e       	mov	r0, r18
    198a:	02 c0       	rjmp	.+4      	; 0x1990 <M_Dio_void_setPinValue+0x1ac>
    198c:	88 0f       	add	r24, r24
    198e:	99 1f       	adc	r25, r25
    1990:	0a 94       	dec	r0
    1992:	e2 f7       	brpl	.-8      	; 0x198c <M_Dio_void_setPinValue+0x1a8>
    1994:	80 95       	com	r24
    1996:	84 23       	and	r24, r20
    1998:	8c 93       	st	X, r24
    199a:	29 c0       	rjmp	.+82     	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		case DIO_PORTC : CLR_BIT( PORTC_REG,pin);break;
    199c:	a5 e3       	ldi	r26, 0x35	; 53
    199e:	b0 e0       	ldi	r27, 0x00	; 0
    19a0:	e5 e3       	ldi	r30, 0x35	; 53
    19a2:	f0 e0       	ldi	r31, 0x00	; 0
    19a4:	80 81       	ld	r24, Z
    19a6:	48 2f       	mov	r20, r24
    19a8:	8a 81       	ldd	r24, Y+2	; 0x02
    19aa:	28 2f       	mov	r18, r24
    19ac:	30 e0       	ldi	r19, 0x00	; 0
    19ae:	81 e0       	ldi	r24, 0x01	; 1
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	02 2e       	mov	r0, r18
    19b4:	02 c0       	rjmp	.+4      	; 0x19ba <M_Dio_void_setPinValue+0x1d6>
    19b6:	88 0f       	add	r24, r24
    19b8:	99 1f       	adc	r25, r25
    19ba:	0a 94       	dec	r0
    19bc:	e2 f7       	brpl	.-8      	; 0x19b6 <M_Dio_void_setPinValue+0x1d2>
    19be:	80 95       	com	r24
    19c0:	84 23       	and	r24, r20
    19c2:	8c 93       	st	X, r24
    19c4:	14 c0       	rjmp	.+40     	; 0x19ee <M_Dio_void_setPinValue+0x20a>
		case DIO_PORTD : CLR_BIT( PORTD_REG,pin);break;
    19c6:	a2 e3       	ldi	r26, 0x32	; 50
    19c8:	b0 e0       	ldi	r27, 0x00	; 0
    19ca:	e2 e3       	ldi	r30, 0x32	; 50
    19cc:	f0 e0       	ldi	r31, 0x00	; 0
    19ce:	80 81       	ld	r24, Z
    19d0:	48 2f       	mov	r20, r24
    19d2:	8a 81       	ldd	r24, Y+2	; 0x02
    19d4:	28 2f       	mov	r18, r24
    19d6:	30 e0       	ldi	r19, 0x00	; 0
    19d8:	81 e0       	ldi	r24, 0x01	; 1
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	02 2e       	mov	r0, r18
    19de:	02 c0       	rjmp	.+4      	; 0x19e4 <M_Dio_void_setPinValue+0x200>
    19e0:	88 0f       	add	r24, r24
    19e2:	99 1f       	adc	r25, r25
    19e4:	0a 94       	dec	r0
    19e6:	e2 f7       	brpl	.-8      	; 0x19e0 <M_Dio_void_setPinValue+0x1fc>
    19e8:	80 95       	com	r24
    19ea:	84 23       	and	r24, r20
    19ec:	8c 93       	st	X, r24
		}
	}

}
    19ee:	28 96       	adiw	r28, 0x08	; 8
    19f0:	0f b6       	in	r0, 0x3f	; 63
    19f2:	f8 94       	cli
    19f4:	de bf       	out	0x3e, r29	; 62
    19f6:	0f be       	out	0x3f, r0	; 63
    19f8:	cd bf       	out	0x3d, r28	; 61
    19fa:	cf 91       	pop	r28
    19fc:	df 91       	pop	r29
    19fe:	08 95       	ret

00001a00 <M_Dio_en_getPortValue>:
  parameters (in)  :  PortId
  parameters (out) :  Non
  Return Value     : Dio_PortLevelType
******************************************/
Dio_PortLevelType M_Dio_en_getPortValue(Dio_PortType PortId)
{
    1a00:	df 93       	push	r29
    1a02:	cf 93       	push	r28
    1a04:	00 d0       	rcall	.+0      	; 0x1a06 <M_Dio_en_getPortValue+0x6>
    1a06:	00 d0       	rcall	.+0      	; 0x1a08 <M_Dio_en_getPortValue+0x8>
    1a08:	cd b7       	in	r28, 0x3d	; 61
    1a0a:	de b7       	in	r29, 0x3e	; 62
    1a0c:	8a 83       	std	Y+2, r24	; 0x02
	Dio_PortLevelType Local_Reading;

	switch( PortId)
    1a0e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a10:	28 2f       	mov	r18, r24
    1a12:	30 e0       	ldi	r19, 0x00	; 0
    1a14:	3c 83       	std	Y+4, r19	; 0x04
    1a16:	2b 83       	std	Y+3, r18	; 0x03
    1a18:	8b 81       	ldd	r24, Y+3	; 0x03
    1a1a:	9c 81       	ldd	r25, Y+4	; 0x04
    1a1c:	82 30       	cpi	r24, 0x02	; 2
    1a1e:	91 05       	cpc	r25, r1
    1a20:	d9 f0       	breq	.+54     	; 0x1a58 <M_Dio_en_getPortValue+0x58>
    1a22:	2b 81       	ldd	r18, Y+3	; 0x03
    1a24:	3c 81       	ldd	r19, Y+4	; 0x04
    1a26:	23 30       	cpi	r18, 0x03	; 3
    1a28:	31 05       	cpc	r19, r1
    1a2a:	34 f4       	brge	.+12     	; 0x1a38 <M_Dio_en_getPortValue+0x38>
    1a2c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a2e:	9c 81       	ldd	r25, Y+4	; 0x04
    1a30:	81 30       	cpi	r24, 0x01	; 1
    1a32:	91 05       	cpc	r25, r1
    1a34:	61 f0       	breq	.+24     	; 0x1a4e <M_Dio_en_getPortValue+0x4e>
    1a36:	1e c0       	rjmp	.+60     	; 0x1a74 <M_Dio_en_getPortValue+0x74>
    1a38:	2b 81       	ldd	r18, Y+3	; 0x03
    1a3a:	3c 81       	ldd	r19, Y+4	; 0x04
    1a3c:	23 30       	cpi	r18, 0x03	; 3
    1a3e:	31 05       	cpc	r19, r1
    1a40:	81 f0       	breq	.+32     	; 0x1a62 <M_Dio_en_getPortValue+0x62>
    1a42:	8b 81       	ldd	r24, Y+3	; 0x03
    1a44:	9c 81       	ldd	r25, Y+4	; 0x04
    1a46:	84 30       	cpi	r24, 0x04	; 4
    1a48:	91 05       	cpc	r25, r1
    1a4a:	81 f0       	breq	.+32     	; 0x1a6c <M_Dio_en_getPortValue+0x6c>
    1a4c:	13 c0       	rjmp	.+38     	; 0x1a74 <M_Dio_en_getPortValue+0x74>
	{
	case DIO_PORTA :Local_Reading =  PORTA_REG;break;
    1a4e:	eb e3       	ldi	r30, 0x3B	; 59
    1a50:	f0 e0       	ldi	r31, 0x00	; 0
    1a52:	80 81       	ld	r24, Z
    1a54:	89 83       	std	Y+1, r24	; 0x01
    1a56:	0e c0       	rjmp	.+28     	; 0x1a74 <M_Dio_en_getPortValue+0x74>
	case DIO_PORTB :Local_Reading =  PORTB_REG;break;
    1a58:	e8 e3       	ldi	r30, 0x38	; 56
    1a5a:	f0 e0       	ldi	r31, 0x00	; 0
    1a5c:	80 81       	ld	r24, Z
    1a5e:	89 83       	std	Y+1, r24	; 0x01
    1a60:	09 c0       	rjmp	.+18     	; 0x1a74 <M_Dio_en_getPortValue+0x74>
	case DIO_PORTC :Local_Reading =  PORTC_REG;break;
    1a62:	e5 e3       	ldi	r30, 0x35	; 53
    1a64:	f0 e0       	ldi	r31, 0x00	; 0
    1a66:	80 81       	ld	r24, Z
    1a68:	89 83       	std	Y+1, r24	; 0x01
    1a6a:	04 c0       	rjmp	.+8      	; 0x1a74 <M_Dio_en_getPortValue+0x74>
	case DIO_PORTD :Local_Reading =  PORTD_REG;break;
    1a6c:	e2 e3       	ldi	r30, 0x32	; 50
    1a6e:	f0 e0       	ldi	r31, 0x00	; 0
    1a70:	80 81       	ld	r24, Z
    1a72:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_Reading;
    1a74:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a76:	0f 90       	pop	r0
    1a78:	0f 90       	pop	r0
    1a7a:	0f 90       	pop	r0
    1a7c:	0f 90       	pop	r0
    1a7e:	cf 91       	pop	r28
    1a80:	df 91       	pop	r29
    1a82:	08 95       	ret

00001a84 <M_Dio_void_setPortValue>:
  parameters (in)  :  PortId, Level (0-255)
  parameters (out) :  Non
  Return Value     : void
******************************************/
void M_Dio_void_setPortValue(Dio_PortType PortId,Dio_PortLevelType Level)
{
    1a84:	df 93       	push	r29
    1a86:	cf 93       	push	r28
    1a88:	00 d0       	rcall	.+0      	; 0x1a8a <M_Dio_void_setPortValue+0x6>
    1a8a:	00 d0       	rcall	.+0      	; 0x1a8c <M_Dio_void_setPortValue+0x8>
    1a8c:	cd b7       	in	r28, 0x3d	; 61
    1a8e:	de b7       	in	r29, 0x3e	; 62
    1a90:	89 83       	std	Y+1, r24	; 0x01
    1a92:	6a 83       	std	Y+2, r22	; 0x02
	switch(PortId)
    1a94:	89 81       	ldd	r24, Y+1	; 0x01
    1a96:	28 2f       	mov	r18, r24
    1a98:	30 e0       	ldi	r19, 0x00	; 0
    1a9a:	3c 83       	std	Y+4, r19	; 0x04
    1a9c:	2b 83       	std	Y+3, r18	; 0x03
    1a9e:	8b 81       	ldd	r24, Y+3	; 0x03
    1aa0:	9c 81       	ldd	r25, Y+4	; 0x04
    1aa2:	82 30       	cpi	r24, 0x02	; 2
    1aa4:	91 05       	cpc	r25, r1
    1aa6:	d9 f0       	breq	.+54     	; 0x1ade <M_Dio_void_setPortValue+0x5a>
    1aa8:	2b 81       	ldd	r18, Y+3	; 0x03
    1aaa:	3c 81       	ldd	r19, Y+4	; 0x04
    1aac:	23 30       	cpi	r18, 0x03	; 3
    1aae:	31 05       	cpc	r19, r1
    1ab0:	34 f4       	brge	.+12     	; 0x1abe <M_Dio_void_setPortValue+0x3a>
    1ab2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ab4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ab6:	81 30       	cpi	r24, 0x01	; 1
    1ab8:	91 05       	cpc	r25, r1
    1aba:	61 f0       	breq	.+24     	; 0x1ad4 <M_Dio_void_setPortValue+0x50>
    1abc:	1e c0       	rjmp	.+60     	; 0x1afa <M_Dio_void_setPortValue+0x76>
    1abe:	2b 81       	ldd	r18, Y+3	; 0x03
    1ac0:	3c 81       	ldd	r19, Y+4	; 0x04
    1ac2:	23 30       	cpi	r18, 0x03	; 3
    1ac4:	31 05       	cpc	r19, r1
    1ac6:	81 f0       	breq	.+32     	; 0x1ae8 <M_Dio_void_setPortValue+0x64>
    1ac8:	8b 81       	ldd	r24, Y+3	; 0x03
    1aca:	9c 81       	ldd	r25, Y+4	; 0x04
    1acc:	84 30       	cpi	r24, 0x04	; 4
    1ace:	91 05       	cpc	r25, r1
    1ad0:	81 f0       	breq	.+32     	; 0x1af2 <M_Dio_void_setPortValue+0x6e>
    1ad2:	13 c0       	rjmp	.+38     	; 0x1afa <M_Dio_void_setPortValue+0x76>
	{
    	case DIO_PORTA : PORTA_REG = Level;break;
    1ad4:	eb e3       	ldi	r30, 0x3B	; 59
    1ad6:	f0 e0       	ldi	r31, 0x00	; 0
    1ad8:	8a 81       	ldd	r24, Y+2	; 0x02
    1ada:	80 83       	st	Z, r24
    1adc:	0e c0       	rjmp	.+28     	; 0x1afa <M_Dio_void_setPortValue+0x76>
    	case DIO_PORTB : PORTB_REG = Level;break;
    1ade:	e8 e3       	ldi	r30, 0x38	; 56
    1ae0:	f0 e0       	ldi	r31, 0x00	; 0
    1ae2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ae4:	80 83       	st	Z, r24
    1ae6:	09 c0       	rjmp	.+18     	; 0x1afa <M_Dio_void_setPortValue+0x76>
    	case DIO_PORTC : PORTC_REG = Level;break;
    1ae8:	e5 e3       	ldi	r30, 0x35	; 53
    1aea:	f0 e0       	ldi	r31, 0x00	; 0
    1aec:	8a 81       	ldd	r24, Y+2	; 0x02
    1aee:	80 83       	st	Z, r24
    1af0:	04 c0       	rjmp	.+8      	; 0x1afa <M_Dio_void_setPortValue+0x76>
    	case DIO_PORTD : PORTD_REG = Level;break;
    1af2:	e2 e3       	ldi	r30, 0x32	; 50
    1af4:	f0 e0       	ldi	r31, 0x00	; 0
    1af6:	8a 81       	ldd	r24, Y+2	; 0x02
    1af8:	80 83       	st	Z, r24
	}
}
    1afa:	0f 90       	pop	r0
    1afc:	0f 90       	pop	r0
    1afe:	0f 90       	pop	r0
    1b00:	0f 90       	pop	r0
    1b02:	cf 91       	pop	r28
    1b04:	df 91       	pop	r29
    1b06:	08 95       	ret

00001b08 <M_Dio_void_togglePinValue>:
  parameters (in)  :  PortId, Level (0-255)
  parameters (out) :  Non
  Return Value     : void
******************************************/
void M_Dio_void_togglePinValue(Dio_ChannelType channelId)
{
    1b08:	df 93       	push	r29
    1b0a:	cf 93       	push	r28
    1b0c:	00 d0       	rcall	.+0      	; 0x1b0e <M_Dio_void_togglePinValue+0x6>
    1b0e:	00 d0       	rcall	.+0      	; 0x1b10 <M_Dio_void_togglePinValue+0x8>
    1b10:	0f 92       	push	r0
    1b12:	cd b7       	in	r28, 0x3d	; 61
    1b14:	de b7       	in	r29, 0x3e	; 62
    1b16:	8b 83       	std	Y+3, r24	; 0x03
	u8 pin = channelId % 10;
    1b18:	8b 81       	ldd	r24, Y+3	; 0x03
    1b1a:	9a e0       	ldi	r25, 0x0A	; 10
    1b1c:	69 2f       	mov	r22, r25
    1b1e:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__udivmodqi4>
    1b22:	89 2f       	mov	r24, r25
    1b24:	8a 83       	std	Y+2, r24	; 0x02
	u8 port = channelId/ 10;
    1b26:	8b 81       	ldd	r24, Y+3	; 0x03
    1b28:	9a e0       	ldi	r25, 0x0A	; 10
    1b2a:	69 2f       	mov	r22, r25
    1b2c:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__udivmodqi4>
    1b30:	89 83       	std	Y+1, r24	; 0x01

	switch(port)
    1b32:	89 81       	ldd	r24, Y+1	; 0x01
    1b34:	28 2f       	mov	r18, r24
    1b36:	30 e0       	ldi	r19, 0x00	; 0
    1b38:	3d 83       	std	Y+5, r19	; 0x05
    1b3a:	2c 83       	std	Y+4, r18	; 0x04
    1b3c:	8c 81       	ldd	r24, Y+4	; 0x04
    1b3e:	9d 81       	ldd	r25, Y+5	; 0x05
    1b40:	82 30       	cpi	r24, 0x02	; 2
    1b42:	91 05       	cpc	r25, r1
    1b44:	51 f1       	breq	.+84     	; 0x1b9a <M_Dio_void_togglePinValue+0x92>
    1b46:	2c 81       	ldd	r18, Y+4	; 0x04
    1b48:	3d 81       	ldd	r19, Y+5	; 0x05
    1b4a:	23 30       	cpi	r18, 0x03	; 3
    1b4c:	31 05       	cpc	r19, r1
    1b4e:	34 f4       	brge	.+12     	; 0x1b5c <M_Dio_void_togglePinValue+0x54>
    1b50:	8c 81       	ldd	r24, Y+4	; 0x04
    1b52:	9d 81       	ldd	r25, Y+5	; 0x05
    1b54:	81 30       	cpi	r24, 0x01	; 1
    1b56:	91 05       	cpc	r25, r1
    1b58:	61 f0       	breq	.+24     	; 0x1b72 <M_Dio_void_togglePinValue+0x6a>
    1b5a:	5a c0       	rjmp	.+180    	; 0x1c10 <M_Dio_void_togglePinValue+0x108>
    1b5c:	2c 81       	ldd	r18, Y+4	; 0x04
    1b5e:	3d 81       	ldd	r19, Y+5	; 0x05
    1b60:	23 30       	cpi	r18, 0x03	; 3
    1b62:	31 05       	cpc	r19, r1
    1b64:	71 f1       	breq	.+92     	; 0x1bc2 <M_Dio_void_togglePinValue+0xba>
    1b66:	8c 81       	ldd	r24, Y+4	; 0x04
    1b68:	9d 81       	ldd	r25, Y+5	; 0x05
    1b6a:	84 30       	cpi	r24, 0x04	; 4
    1b6c:	91 05       	cpc	r25, r1
    1b6e:	e9 f1       	breq	.+122    	; 0x1bea <M_Dio_void_togglePinValue+0xe2>
    1b70:	4f c0       	rjmp	.+158    	; 0x1c10 <M_Dio_void_togglePinValue+0x108>
	{
	case DIO_PORTA :TOG_BIT( PORTA_REG,pin);break;
    1b72:	ab e3       	ldi	r26, 0x3B	; 59
    1b74:	b0 e0       	ldi	r27, 0x00	; 0
    1b76:	eb e3       	ldi	r30, 0x3B	; 59
    1b78:	f0 e0       	ldi	r31, 0x00	; 0
    1b7a:	80 81       	ld	r24, Z
    1b7c:	48 2f       	mov	r20, r24
    1b7e:	8a 81       	ldd	r24, Y+2	; 0x02
    1b80:	28 2f       	mov	r18, r24
    1b82:	30 e0       	ldi	r19, 0x00	; 0
    1b84:	81 e0       	ldi	r24, 0x01	; 1
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	02 2e       	mov	r0, r18
    1b8a:	02 c0       	rjmp	.+4      	; 0x1b90 <M_Dio_void_togglePinValue+0x88>
    1b8c:	88 0f       	add	r24, r24
    1b8e:	99 1f       	adc	r25, r25
    1b90:	0a 94       	dec	r0
    1b92:	e2 f7       	brpl	.-8      	; 0x1b8c <M_Dio_void_togglePinValue+0x84>
    1b94:	84 27       	eor	r24, r20
    1b96:	8c 93       	st	X, r24
    1b98:	3b c0       	rjmp	.+118    	; 0x1c10 <M_Dio_void_togglePinValue+0x108>
	case DIO_PORTB :TOG_BIT( PORTB_REG,pin);break;
    1b9a:	a8 e3       	ldi	r26, 0x38	; 56
    1b9c:	b0 e0       	ldi	r27, 0x00	; 0
    1b9e:	e8 e3       	ldi	r30, 0x38	; 56
    1ba0:	f0 e0       	ldi	r31, 0x00	; 0
    1ba2:	80 81       	ld	r24, Z
    1ba4:	48 2f       	mov	r20, r24
    1ba6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ba8:	28 2f       	mov	r18, r24
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	02 2e       	mov	r0, r18
    1bb2:	02 c0       	rjmp	.+4      	; 0x1bb8 <M_Dio_void_togglePinValue+0xb0>
    1bb4:	88 0f       	add	r24, r24
    1bb6:	99 1f       	adc	r25, r25
    1bb8:	0a 94       	dec	r0
    1bba:	e2 f7       	brpl	.-8      	; 0x1bb4 <M_Dio_void_togglePinValue+0xac>
    1bbc:	84 27       	eor	r24, r20
    1bbe:	8c 93       	st	X, r24
    1bc0:	27 c0       	rjmp	.+78     	; 0x1c10 <M_Dio_void_togglePinValue+0x108>
	case DIO_PORTC :TOG_BIT( PORTC_REG,pin);break;
    1bc2:	a5 e3       	ldi	r26, 0x35	; 53
    1bc4:	b0 e0       	ldi	r27, 0x00	; 0
    1bc6:	e5 e3       	ldi	r30, 0x35	; 53
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	80 81       	ld	r24, Z
    1bcc:	48 2f       	mov	r20, r24
    1bce:	8a 81       	ldd	r24, Y+2	; 0x02
    1bd0:	28 2f       	mov	r18, r24
    1bd2:	30 e0       	ldi	r19, 0x00	; 0
    1bd4:	81 e0       	ldi	r24, 0x01	; 1
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	02 2e       	mov	r0, r18
    1bda:	02 c0       	rjmp	.+4      	; 0x1be0 <M_Dio_void_togglePinValue+0xd8>
    1bdc:	88 0f       	add	r24, r24
    1bde:	99 1f       	adc	r25, r25
    1be0:	0a 94       	dec	r0
    1be2:	e2 f7       	brpl	.-8      	; 0x1bdc <M_Dio_void_togglePinValue+0xd4>
    1be4:	84 27       	eor	r24, r20
    1be6:	8c 93       	st	X, r24
    1be8:	13 c0       	rjmp	.+38     	; 0x1c10 <M_Dio_void_togglePinValue+0x108>
	case DIO_PORTD :TOG_BIT( PORTD_REG,pin);break;
    1bea:	a2 e3       	ldi	r26, 0x32	; 50
    1bec:	b0 e0       	ldi	r27, 0x00	; 0
    1bee:	e2 e3       	ldi	r30, 0x32	; 50
    1bf0:	f0 e0       	ldi	r31, 0x00	; 0
    1bf2:	80 81       	ld	r24, Z
    1bf4:	48 2f       	mov	r20, r24
    1bf6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf8:	28 2f       	mov	r18, r24
    1bfa:	30 e0       	ldi	r19, 0x00	; 0
    1bfc:	81 e0       	ldi	r24, 0x01	; 1
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	02 2e       	mov	r0, r18
    1c02:	02 c0       	rjmp	.+4      	; 0x1c08 <M_Dio_void_togglePinValue+0x100>
    1c04:	88 0f       	add	r24, r24
    1c06:	99 1f       	adc	r25, r25
    1c08:	0a 94       	dec	r0
    1c0a:	e2 f7       	brpl	.-8      	; 0x1c04 <M_Dio_void_togglePinValue+0xfc>
    1c0c:	84 27       	eor	r24, r20
    1c0e:	8c 93       	st	X, r24
	}

}
    1c10:	0f 90       	pop	r0
    1c12:	0f 90       	pop	r0
    1c14:	0f 90       	pop	r0
    1c16:	0f 90       	pop	r0
    1c18:	0f 90       	pop	r0
    1c1a:	cf 91       	pop	r28
    1c1c:	df 91       	pop	r29
    1c1e:	08 95       	ret

00001c20 <H_LED_void_turnOn>:

#include "LED_int.h"


void H_LED_void_turnOn(u8 ledID)
{
    1c20:	df 93       	push	r29
    1c22:	cf 93       	push	r28
    1c24:	00 d0       	rcall	.+0      	; 0x1c26 <H_LED_void_turnOn+0x6>
    1c26:	0f 92       	push	r0
    1c28:	cd b7       	in	r28, 0x3d	; 61
    1c2a:	de b7       	in	r29, 0x3e	; 62
    1c2c:	89 83       	std	Y+1, r24	; 0x01
	switch(ledID)
    1c2e:	89 81       	ldd	r24, Y+1	; 0x01
    1c30:	28 2f       	mov	r18, r24
    1c32:	30 e0       	ldi	r19, 0x00	; 0
    1c34:	3b 83       	std	Y+3, r19	; 0x03
    1c36:	2a 83       	std	Y+2, r18	; 0x02
    1c38:	8a 81       	ldd	r24, Y+2	; 0x02
    1c3a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c3c:	81 30       	cpi	r24, 0x01	; 1
    1c3e:	91 05       	cpc	r25, r1
    1c40:	f9 f0       	breq	.+62     	; 0x1c80 <H_LED_void_turnOn+0x60>
    1c42:	2a 81       	ldd	r18, Y+2	; 0x02
    1c44:	3b 81       	ldd	r19, Y+3	; 0x03
    1c46:	22 30       	cpi	r18, 0x02	; 2
    1c48:	31 05       	cpc	r19, r1
    1c4a:	2c f4       	brge	.+10     	; 0x1c56 <H_LED_void_turnOn+0x36>
    1c4c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c4e:	9b 81       	ldd	r25, Y+3	; 0x03
    1c50:	00 97       	sbiw	r24, 0x00	; 0
    1c52:	61 f0       	breq	.+24     	; 0x1c6c <H_LED_void_turnOn+0x4c>
    1c54:	1e c0       	rjmp	.+60     	; 0x1c92 <H_LED_void_turnOn+0x72>
    1c56:	2a 81       	ldd	r18, Y+2	; 0x02
    1c58:	3b 81       	ldd	r19, Y+3	; 0x03
    1c5a:	22 30       	cpi	r18, 0x02	; 2
    1c5c:	31 05       	cpc	r19, r1
    1c5e:	59 f0       	breq	.+22     	; 0x1c76 <H_LED_void_turnOn+0x56>
    1c60:	8a 81       	ldd	r24, Y+2	; 0x02
    1c62:	9b 81       	ldd	r25, Y+3	; 0x03
    1c64:	83 30       	cpi	r24, 0x03	; 3
    1c66:	91 05       	cpc	r25, r1
    1c68:	81 f0       	breq	.+32     	; 0x1c8a <H_LED_void_turnOn+0x6a>
    1c6a:	13 c0       	rjmp	.+38     	; 0x1c92 <H_LED_void_turnOn+0x72>
	{
		case LED_RED:
#if(LED_RED_DIR == LED_FORWARD_DIR)
			M_Dio_void_setPinValue(LED_RED_PIN,DIO_HIGH);
    1c6c:	8b e1       	ldi	r24, 0x1B	; 27
    1c6e:	61 e0       	ldi	r22, 0x01	; 1
    1c70:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <M_Dio_void_setPinValue>
    1c74:	0e c0       	rjmp	.+28     	; 0x1c92 <H_LED_void_turnOn+0x72>
#endif
			break;

		case LED_GREEN:
#if(LED_GREEN_DIR == LED_FORWARD_DIR)
			M_Dio_void_setPinValue(LED_GREEN_PIN,DIO_HIGH);
    1c76:	8e e0       	ldi	r24, 0x0E	; 14
    1c78:	61 e0       	ldi	r22, 0x01	; 1
    1c7a:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <M_Dio_void_setPinValue>
    1c7e:	09 c0       	rjmp	.+18     	; 0x1c92 <H_LED_void_turnOn+0x72>
#endif
			break;

		case LED_BLUE:
#if(LED_BLUE_DIR == LED_FORWARD_DIR)
			M_Dio_void_setPinValue(LED_BLUE_PIN,DIO_HIGH);
    1c80:	8f e0       	ldi	r24, 0x0F	; 15
    1c82:	61 e0       	ldi	r22, 0x01	; 1
    1c84:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <M_Dio_void_setPinValue>
    1c88:	04 c0       	rjmp	.+8      	; 0x1c92 <H_LED_void_turnOn+0x72>
#endif
			break;

		case LED_YELLOW:
#if(LED_YELLOW_DIR == LED_FORWARD_DIR)
			M_Dio_void_setPinValue(LED_YELLOW_PIN,DIO_HIGH);
    1c8a:	80 e1       	ldi	r24, 0x10	; 16
    1c8c:	61 e0       	ldi	r22, 0x01	; 1
    1c8e:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <M_Dio_void_setPinValue>
#else
	#error("Wrong LED Direction")
#endif
			break;
	}
}
    1c92:	0f 90       	pop	r0
    1c94:	0f 90       	pop	r0
    1c96:	0f 90       	pop	r0
    1c98:	cf 91       	pop	r28
    1c9a:	df 91       	pop	r29
    1c9c:	08 95       	ret

00001c9e <H_LED_void_turnOFF>:
void H_LED_void_turnOFF(u8 ledID)
{
    1c9e:	df 93       	push	r29
    1ca0:	cf 93       	push	r28
    1ca2:	00 d0       	rcall	.+0      	; 0x1ca4 <H_LED_void_turnOFF+0x6>
    1ca4:	0f 92       	push	r0
    1ca6:	cd b7       	in	r28, 0x3d	; 61
    1ca8:	de b7       	in	r29, 0x3e	; 62
    1caa:	89 83       	std	Y+1, r24	; 0x01
	switch(ledID)
    1cac:	89 81       	ldd	r24, Y+1	; 0x01
    1cae:	28 2f       	mov	r18, r24
    1cb0:	30 e0       	ldi	r19, 0x00	; 0
    1cb2:	3b 83       	std	Y+3, r19	; 0x03
    1cb4:	2a 83       	std	Y+2, r18	; 0x02
    1cb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1cb8:	9b 81       	ldd	r25, Y+3	; 0x03
    1cba:	81 30       	cpi	r24, 0x01	; 1
    1cbc:	91 05       	cpc	r25, r1
    1cbe:	f9 f0       	breq	.+62     	; 0x1cfe <H_LED_void_turnOFF+0x60>
    1cc0:	2a 81       	ldd	r18, Y+2	; 0x02
    1cc2:	3b 81       	ldd	r19, Y+3	; 0x03
    1cc4:	22 30       	cpi	r18, 0x02	; 2
    1cc6:	31 05       	cpc	r19, r1
    1cc8:	2c f4       	brge	.+10     	; 0x1cd4 <H_LED_void_turnOFF+0x36>
    1cca:	8a 81       	ldd	r24, Y+2	; 0x02
    1ccc:	9b 81       	ldd	r25, Y+3	; 0x03
    1cce:	00 97       	sbiw	r24, 0x00	; 0
    1cd0:	61 f0       	breq	.+24     	; 0x1cea <H_LED_void_turnOFF+0x4c>
    1cd2:	1e c0       	rjmp	.+60     	; 0x1d10 <H_LED_void_turnOFF+0x72>
    1cd4:	2a 81       	ldd	r18, Y+2	; 0x02
    1cd6:	3b 81       	ldd	r19, Y+3	; 0x03
    1cd8:	22 30       	cpi	r18, 0x02	; 2
    1cda:	31 05       	cpc	r19, r1
    1cdc:	59 f0       	breq	.+22     	; 0x1cf4 <H_LED_void_turnOFF+0x56>
    1cde:	8a 81       	ldd	r24, Y+2	; 0x02
    1ce0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ce2:	83 30       	cpi	r24, 0x03	; 3
    1ce4:	91 05       	cpc	r25, r1
    1ce6:	81 f0       	breq	.+32     	; 0x1d08 <H_LED_void_turnOFF+0x6a>
    1ce8:	13 c0       	rjmp	.+38     	; 0x1d10 <H_LED_void_turnOFF+0x72>
		{
			case LED_RED:
	#if(LED_RED_DIR == LED_FORWARD_DIR)
				M_Dio_void_setPinValue(LED_RED_PIN,DIO_LOW);
    1cea:	8b e1       	ldi	r24, 0x1B	; 27
    1cec:	60 e0       	ldi	r22, 0x00	; 0
    1cee:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <M_Dio_void_setPinValue>
    1cf2:	0e c0       	rjmp	.+28     	; 0x1d10 <H_LED_void_turnOFF+0x72>
	#endif
				break;

			case LED_GREEN:
	#if(LED_GREEN_DIR == LED_FORWARD_DIR)
				M_Dio_void_setPinValue(LED_GREEN_PIN,DIO_LOW);
    1cf4:	8e e0       	ldi	r24, 0x0E	; 14
    1cf6:	60 e0       	ldi	r22, 0x00	; 0
    1cf8:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <M_Dio_void_setPinValue>
    1cfc:	09 c0       	rjmp	.+18     	; 0x1d10 <H_LED_void_turnOFF+0x72>
	#endif
				break;

			case LED_BLUE:
	#if(LED_BLUE_DIR == LED_FORWARD_DIR)
				M_Dio_void_setPinValue(LED_BLUE_PIN,DIO_LOW);
    1cfe:	8f e0       	ldi	r24, 0x0F	; 15
    1d00:	60 e0       	ldi	r22, 0x00	; 0
    1d02:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <M_Dio_void_setPinValue>
    1d06:	04 c0       	rjmp	.+8      	; 0x1d10 <H_LED_void_turnOFF+0x72>
	#endif
				break;

			case LED_YELLOW:
	#if(LED_YELLOW_DIR == LED_FORWARD_DIR)
				M_Dio_void_setPinValue(LED_YELLOW_PIN,DIO_LOW);
    1d08:	80 e1       	ldi	r24, 0x10	; 16
    1d0a:	60 e0       	ldi	r22, 0x00	; 0
    1d0c:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <M_Dio_void_setPinValue>
	#else
		#error("Wrong LED Direction")
	#endif
				break;
		}
}
    1d10:	0f 90       	pop	r0
    1d12:	0f 90       	pop	r0
    1d14:	0f 90       	pop	r0
    1d16:	cf 91       	pop	r28
    1d18:	df 91       	pop	r29
    1d1a:	08 95       	ret

00001d1c <H_LED_void_toggle>:
void H_LED_void_toggle(u8 ledID)
{
    1d1c:	df 93       	push	r29
    1d1e:	cf 93       	push	r28
    1d20:	00 d0       	rcall	.+0      	; 0x1d22 <H_LED_void_toggle+0x6>
    1d22:	0f 92       	push	r0
    1d24:	cd b7       	in	r28, 0x3d	; 61
    1d26:	de b7       	in	r29, 0x3e	; 62
    1d28:	89 83       	std	Y+1, r24	; 0x01
	switch(ledID)
    1d2a:	89 81       	ldd	r24, Y+1	; 0x01
    1d2c:	28 2f       	mov	r18, r24
    1d2e:	30 e0       	ldi	r19, 0x00	; 0
    1d30:	3b 83       	std	Y+3, r19	; 0x03
    1d32:	2a 83       	std	Y+2, r18	; 0x02
    1d34:	8a 81       	ldd	r24, Y+2	; 0x02
    1d36:	9b 81       	ldd	r25, Y+3	; 0x03
    1d38:	81 30       	cpi	r24, 0x01	; 1
    1d3a:	91 05       	cpc	r25, r1
    1d3c:	e9 f0       	breq	.+58     	; 0x1d78 <H_LED_void_toggle+0x5c>
    1d3e:	2a 81       	ldd	r18, Y+2	; 0x02
    1d40:	3b 81       	ldd	r19, Y+3	; 0x03
    1d42:	22 30       	cpi	r18, 0x02	; 2
    1d44:	31 05       	cpc	r19, r1
    1d46:	2c f4       	brge	.+10     	; 0x1d52 <H_LED_void_toggle+0x36>
    1d48:	8a 81       	ldd	r24, Y+2	; 0x02
    1d4a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d4c:	00 97       	sbiw	r24, 0x00	; 0
    1d4e:	61 f0       	breq	.+24     	; 0x1d68 <H_LED_void_toggle+0x4c>
    1d50:	1a c0       	rjmp	.+52     	; 0x1d86 <H_LED_void_toggle+0x6a>
    1d52:	2a 81       	ldd	r18, Y+2	; 0x02
    1d54:	3b 81       	ldd	r19, Y+3	; 0x03
    1d56:	22 30       	cpi	r18, 0x02	; 2
    1d58:	31 05       	cpc	r19, r1
    1d5a:	51 f0       	breq	.+20     	; 0x1d70 <H_LED_void_toggle+0x54>
    1d5c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d5e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d60:	83 30       	cpi	r24, 0x03	; 3
    1d62:	91 05       	cpc	r25, r1
    1d64:	69 f0       	breq	.+26     	; 0x1d80 <H_LED_void_toggle+0x64>
    1d66:	0f c0       	rjmp	.+30     	; 0x1d86 <H_LED_void_toggle+0x6a>
			{
				case LED_RED:
		#if(LED_RED_DIR == LED_FORWARD_DIR)
					M_Dio_void_togglePinValue(LED_RED_PIN);
    1d68:	8b e1       	ldi	r24, 0x1B	; 27
    1d6a:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <M_Dio_void_togglePinValue>
    1d6e:	0b c0       	rjmp	.+22     	; 0x1d86 <H_LED_void_toggle+0x6a>
		#endif
					break;

				case LED_GREEN:
		#if(LED_GREEN_DIR == LED_FORWARD_DIR)
					M_Dio_void_togglePinValue(LED_GREEN_PIN);
    1d70:	8e e0       	ldi	r24, 0x0E	; 14
    1d72:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <M_Dio_void_togglePinValue>
    1d76:	07 c0       	rjmp	.+14     	; 0x1d86 <H_LED_void_toggle+0x6a>
		#endif
					break;

				case LED_BLUE:
		#if(LED_BLUE_DIR == LED_FORWARD_DIR)
					M_Dio_void_togglePinValue(LED_BLUE_PIN);
    1d78:	8f e0       	ldi	r24, 0x0F	; 15
    1d7a:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <M_Dio_void_togglePinValue>
    1d7e:	03 c0       	rjmp	.+6      	; 0x1d86 <H_LED_void_toggle+0x6a>
		#endif
					break;

				case LED_YELLOW:
		#if(LED_YELLOW_DIR == LED_FORWARD_DIR)
					M_Dio_void_togglePinValue(LED_YELLOW_PIN);
    1d80:	80 e1       	ldi	r24, 0x10	; 16
    1d82:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <M_Dio_void_togglePinValue>
		#else
			#error("Wrong LED Direction")
		#endif
					break;
			}
}
    1d86:	0f 90       	pop	r0
    1d88:	0f 90       	pop	r0
    1d8a:	0f 90       	pop	r0
    1d8c:	cf 91       	pop	r28
    1d8e:	df 91       	pop	r29
    1d90:	08 95       	ret

00001d92 <main>:
#include "Mcu_HW.h"

extern const EXTI_Config EXTI_Config_Array[EXTI_SIZE];

int main()
{
    1d92:	df 93       	push	r29
    1d94:	cf 93       	push	r28
    1d96:	cd b7       	in	r28, 0x3d	; 61
    1d98:	de b7       	in	r29, 0x3e	; 62

	M_TIMER1_void_Timer_Init();
    1d9a:	0e 94 bd 05 	call	0xb7a	; 0xb7a <M_TIMER1_void_Timer_Init>
	M_EXTI_en_enableInt(EXTI_Config_Array);
    1d9e:	88 e6       	ldi	r24, 0x68	; 104
    1da0:	91 e0       	ldi	r25, 0x01	; 1
    1da2:	0e 94 b5 09 	call	0x136a	; 0x136a <M_EXTI_en_enableInt>
	M_TIMER1_void_Timer_setDelayTimeMilliSec(500);
    1da6:	84 ef       	ldi	r24, 0xF4	; 244
    1da8:	91 e0       	ldi	r25, 0x01	; 1
    1daa:	0e 94 f6 05 	call	0xbec	; 0xbec <M_TIMER1_void_Timer_setDelayTimeMilliSec>
	M_TIMER1_void_OVF_setCallBack(APP_LED_RED_TASK,APP_LED_BLUE_TASK,APP_LED_GREEN_TASK);
    1dae:	87 ee       	ldi	r24, 0xE7	; 231
    1db0:	9e e0       	ldi	r25, 0x0E	; 14
    1db2:	21 ef       	ldi	r18, 0xF1	; 241
    1db4:	3e e0       	ldi	r19, 0x0E	; 14
    1db6:	4b ef       	ldi	r20, 0xFB	; 251
    1db8:	5e e0       	ldi	r21, 0x0E	; 14
    1dba:	b9 01       	movw	r22, r18
    1dbc:	0e 94 89 06 	call	0xd12	; 0xd12 <M_TIMER1_void_OVF_setCallBack>

	M_TIMER1_void_Timer_start();
    1dc0:	0e 94 d5 05 	call	0xbaa	; 0xbaa <M_TIMER1_void_Timer_start>
	M_TIMER1_void_EnableInt();
    1dc4:	0e 94 58 06 	call	0xcb0	; 0xcb0 <M_TIMER1_void_EnableInt>
	M_GID_void_Enable();
    1dc8:	0e 94 99 09 	call	0x1332	; 0x1332 <M_GID_void_Enable>
    1dcc:	ff cf       	rjmp	.-2      	; 0x1dcc <main+0x3a>

00001dce <APP_LED_RED_TASK>:

/*===========================================================================================================
                                               < Interrupts functions >
===========================================================================================================*/
void APP_LED_RED_TASK (void)
{
    1dce:	df 93       	push	r29
    1dd0:	cf 93       	push	r28
    1dd2:	cd b7       	in	r28, 0x3d	; 61
    1dd4:	de b7       	in	r29, 0x3e	; 62
	H_LED_void_toggle(LED_RED);
    1dd6:	80 e0       	ldi	r24, 0x00	; 0
    1dd8:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <H_LED_void_toggle>
//	H_LED_void_turnOn(LED_RED);
}
    1ddc:	cf 91       	pop	r28
    1dde:	df 91       	pop	r29
    1de0:	08 95       	ret

00001de2 <APP_LED_BLUE_TASK>:

void APP_LED_BLUE_TASK (void)
{
    1de2:	df 93       	push	r29
    1de4:	cf 93       	push	r28
    1de6:	cd b7       	in	r28, 0x3d	; 61
    1de8:	de b7       	in	r29, 0x3e	; 62
	H_LED_void_toggle(LED_BLUE);
    1dea:	81 e0       	ldi	r24, 0x01	; 1
    1dec:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <H_LED_void_toggle>
}
    1df0:	cf 91       	pop	r28
    1df2:	df 91       	pop	r29
    1df4:	08 95       	ret

00001df6 <APP_LED_GREEN_TASK>:



void APP_LED_GREEN_TASK (void)
{
    1df6:	df 93       	push	r29
    1df8:	cf 93       	push	r28
    1dfa:	cd b7       	in	r28, 0x3d	; 61
    1dfc:	de b7       	in	r29, 0x3e	; 62
	H_LED_void_toggle(LED_GREEN);
    1dfe:	82 e0       	ldi	r24, 0x02	; 2
    1e00:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <H_LED_void_toggle>
}
    1e04:	cf 91       	pop	r28
    1e06:	df 91       	pop	r29
    1e08:	08 95       	ret

00001e0a <__udivmodqi4>:
    1e0a:	99 1b       	sub	r25, r25
    1e0c:	79 e0       	ldi	r23, 0x09	; 9
    1e0e:	04 c0       	rjmp	.+8      	; 0x1e18 <__udivmodqi4_ep>

00001e10 <__udivmodqi4_loop>:
    1e10:	99 1f       	adc	r25, r25
    1e12:	96 17       	cp	r25, r22
    1e14:	08 f0       	brcs	.+2      	; 0x1e18 <__udivmodqi4_ep>
    1e16:	96 1b       	sub	r25, r22

00001e18 <__udivmodqi4_ep>:
    1e18:	88 1f       	adc	r24, r24
    1e1a:	7a 95       	dec	r23
    1e1c:	c9 f7       	brne	.-14     	; 0x1e10 <__udivmodqi4_loop>
    1e1e:	80 95       	com	r24
    1e20:	08 95       	ret

00001e22 <__udivmodhi4>:
    1e22:	aa 1b       	sub	r26, r26
    1e24:	bb 1b       	sub	r27, r27
    1e26:	51 e1       	ldi	r21, 0x11	; 17
    1e28:	07 c0       	rjmp	.+14     	; 0x1e38 <__udivmodhi4_ep>

00001e2a <__udivmodhi4_loop>:
    1e2a:	aa 1f       	adc	r26, r26
    1e2c:	bb 1f       	adc	r27, r27
    1e2e:	a6 17       	cp	r26, r22
    1e30:	b7 07       	cpc	r27, r23
    1e32:	10 f0       	brcs	.+4      	; 0x1e38 <__udivmodhi4_ep>
    1e34:	a6 1b       	sub	r26, r22
    1e36:	b7 0b       	sbc	r27, r23

00001e38 <__udivmodhi4_ep>:
    1e38:	88 1f       	adc	r24, r24
    1e3a:	99 1f       	adc	r25, r25
    1e3c:	5a 95       	dec	r21
    1e3e:	a9 f7       	brne	.-22     	; 0x1e2a <__udivmodhi4_loop>
    1e40:	80 95       	com	r24
    1e42:	90 95       	com	r25
    1e44:	bc 01       	movw	r22, r24
    1e46:	cd 01       	movw	r24, r26
    1e48:	08 95       	ret

00001e4a <__udivmodsi4>:
    1e4a:	a1 e2       	ldi	r26, 0x21	; 33
    1e4c:	1a 2e       	mov	r1, r26
    1e4e:	aa 1b       	sub	r26, r26
    1e50:	bb 1b       	sub	r27, r27
    1e52:	fd 01       	movw	r30, r26
    1e54:	0d c0       	rjmp	.+26     	; 0x1e70 <__udivmodsi4_ep>

00001e56 <__udivmodsi4_loop>:
    1e56:	aa 1f       	adc	r26, r26
    1e58:	bb 1f       	adc	r27, r27
    1e5a:	ee 1f       	adc	r30, r30
    1e5c:	ff 1f       	adc	r31, r31
    1e5e:	a2 17       	cp	r26, r18
    1e60:	b3 07       	cpc	r27, r19
    1e62:	e4 07       	cpc	r30, r20
    1e64:	f5 07       	cpc	r31, r21
    1e66:	20 f0       	brcs	.+8      	; 0x1e70 <__udivmodsi4_ep>
    1e68:	a2 1b       	sub	r26, r18
    1e6a:	b3 0b       	sbc	r27, r19
    1e6c:	e4 0b       	sbc	r30, r20
    1e6e:	f5 0b       	sbc	r31, r21

00001e70 <__udivmodsi4_ep>:
    1e70:	66 1f       	adc	r22, r22
    1e72:	77 1f       	adc	r23, r23
    1e74:	88 1f       	adc	r24, r24
    1e76:	99 1f       	adc	r25, r25
    1e78:	1a 94       	dec	r1
    1e7a:	69 f7       	brne	.-38     	; 0x1e56 <__udivmodsi4_loop>
    1e7c:	60 95       	com	r22
    1e7e:	70 95       	com	r23
    1e80:	80 95       	com	r24
    1e82:	90 95       	com	r25
    1e84:	9b 01       	movw	r18, r22
    1e86:	ac 01       	movw	r20, r24
    1e88:	bd 01       	movw	r22, r26
    1e8a:	cf 01       	movw	r24, r30
    1e8c:	08 95       	ret

00001e8e <__prologue_saves__>:
    1e8e:	2f 92       	push	r2
    1e90:	3f 92       	push	r3
    1e92:	4f 92       	push	r4
    1e94:	5f 92       	push	r5
    1e96:	6f 92       	push	r6
    1e98:	7f 92       	push	r7
    1e9a:	8f 92       	push	r8
    1e9c:	9f 92       	push	r9
    1e9e:	af 92       	push	r10
    1ea0:	bf 92       	push	r11
    1ea2:	cf 92       	push	r12
    1ea4:	df 92       	push	r13
    1ea6:	ef 92       	push	r14
    1ea8:	ff 92       	push	r15
    1eaa:	0f 93       	push	r16
    1eac:	1f 93       	push	r17
    1eae:	cf 93       	push	r28
    1eb0:	df 93       	push	r29
    1eb2:	cd b7       	in	r28, 0x3d	; 61
    1eb4:	de b7       	in	r29, 0x3e	; 62
    1eb6:	ca 1b       	sub	r28, r26
    1eb8:	db 0b       	sbc	r29, r27
    1eba:	0f b6       	in	r0, 0x3f	; 63
    1ebc:	f8 94       	cli
    1ebe:	de bf       	out	0x3e, r29	; 62
    1ec0:	0f be       	out	0x3f, r0	; 63
    1ec2:	cd bf       	out	0x3d, r28	; 61
    1ec4:	09 94       	ijmp

00001ec6 <__epilogue_restores__>:
    1ec6:	2a 88       	ldd	r2, Y+18	; 0x12
    1ec8:	39 88       	ldd	r3, Y+17	; 0x11
    1eca:	48 88       	ldd	r4, Y+16	; 0x10
    1ecc:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ece:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ed0:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ed2:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ed4:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ed6:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ed8:	b9 84       	ldd	r11, Y+9	; 0x09
    1eda:	c8 84       	ldd	r12, Y+8	; 0x08
    1edc:	df 80       	ldd	r13, Y+7	; 0x07
    1ede:	ee 80       	ldd	r14, Y+6	; 0x06
    1ee0:	fd 80       	ldd	r15, Y+5	; 0x05
    1ee2:	0c 81       	ldd	r16, Y+4	; 0x04
    1ee4:	1b 81       	ldd	r17, Y+3	; 0x03
    1ee6:	aa 81       	ldd	r26, Y+2	; 0x02
    1ee8:	b9 81       	ldd	r27, Y+1	; 0x01
    1eea:	ce 0f       	add	r28, r30
    1eec:	d1 1d       	adc	r29, r1
    1eee:	0f b6       	in	r0, 0x3f	; 63
    1ef0:	f8 94       	cli
    1ef2:	de bf       	out	0x3e, r29	; 62
    1ef4:	0f be       	out	0x3f, r0	; 63
    1ef6:	cd bf       	out	0x3d, r28	; 61
    1ef8:	ed 01       	movw	r28, r26
    1efa:	08 95       	ret

00001efc <_exit>:
    1efc:	f8 94       	cli

00001efe <__stop_program>:
    1efe:	ff cf       	rjmp	.-2      	; 0x1efe <__stop_program>
